<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title></title>
      <link href="/2023/05/25/%E6%97%85%E8%A1%8C/%E5%90%84%E4%BD%8D%E8%80%81%E5%B8%88%E4%BB%AC%E5%A4%A7%E5%AE%B6%E4%B8%8B%E5%8D%88%E5%A5%BD%EF%BC%8C%E6%88%91%E6%98%AF%E6%AC%A7%E9%98%B3%E6%97%BB%E7%A6%A7%E6%9D%A5%E8%87%AA%E4%BF%A1%E6%81%AF%E4%B8%8E%E8%AE%A1%E7%AE%97%E7%A7%91%E5%AD%A619-2%E7%8F%AD%EF%BC%8C%E6%88%91%E7%9A%84%E6%AF%95%E8%AE%BE%E9%A2%98%E7%9B%AE%E6%98%AF%E5%9F%BA%E4%BA%8E%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E7%9A%84%E8%83%83%E7%99%8C%E6%B7%8B%E5%B7%B4%E7%BB%93%E8%BD%AC%E7%A7%BB%E8%BE%85%E5%8A%A9%E8%AF%8A%E6%96%AD%E7%B3%BB%E7%BB%9F%EF%BC%8C%E6%8C%87%E5%AF%BC%E8%80%81%E5%B8%88%E6%98%AF%E5%BC%A0%E8%8E%89%E8%80%81%E5%B8%88/"/>
      <url>/2023/05/25/%E6%97%85%E8%A1%8C/%E5%90%84%E4%BD%8D%E8%80%81%E5%B8%88%E4%BB%AC%E5%A4%A7%E5%AE%B6%E4%B8%8B%E5%8D%88%E5%A5%BD%EF%BC%8C%E6%88%91%E6%98%AF%E6%AC%A7%E9%98%B3%E6%97%BB%E7%A6%A7%E6%9D%A5%E8%87%AA%E4%BF%A1%E6%81%AF%E4%B8%8E%E8%AE%A1%E7%AE%97%E7%A7%91%E5%AD%A619-2%E7%8F%AD%EF%BC%8C%E6%88%91%E7%9A%84%E6%AF%95%E8%AE%BE%E9%A2%98%E7%9B%AE%E6%98%AF%E5%9F%BA%E4%BA%8E%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E7%9A%84%E8%83%83%E7%99%8C%E6%B7%8B%E5%B7%B4%E7%BB%93%E8%BD%AC%E7%A7%BB%E8%BE%85%E5%8A%A9%E8%AF%8A%E6%96%AD%E7%B3%BB%E7%BB%9F%EF%BC%8C%E6%8C%87%E5%AF%BC%E8%80%81%E5%B8%88%E6%98%AF%E5%BC%A0%E8%8E%89%E8%80%81%E5%B8%88/</url>
      
        <content type="html"><![CDATA[<p>各位老师们大家下午好，我是欧阳旻禧来自信息与计算科学19-2班，我的毕设题目是基于深度学习的胃癌淋巴结转移辅助诊断系统，指导老师是张莉老师</p><p>下面我将从以下五个部分进行今天的答辩</p><p><strong>首先介绍项目背景。根据研究表明，胃癌严重危害了我国老百姓的生命健康安全，临床诊断中，手术标本的组织病理学图像被认为是胃癌诊断的黄金标准，但是对于原始图像的检测与分期，工作量十分巨大，因此迫切需要计算机辅助进行图像分析。</strong></p><p>下图是诊断系统对医生的辅助。因此我们主要的工作在于训练一个高效的深度学习网络，对原始病理图像进行分析。但目前的挑战是，病理图像的图像过大以及精细标注过于耗时，不适用于一般的深度学习。</p><hr><p><strong>为解决以上问题，设计了如下的工作流程，也是整个研究工作的流程图</strong>，首先是数据收集及标注，然后对分割网络训练，然后是对分割的淋巴结部分进行切片再对分类网络训练，最后是结果的可视化。在这个工作中解决了以上的两个痛点问题，收集弱标签和用弱监督学习来代替精细标注的需求，同时通过图像切片来解决图像过大的问题。<strong>在该工作流程的基础上我做了以下的贡献以及创新</strong>，首先数据是自主从医院收集的，另外使用性能更好的Mask2Former网络代替前景分割网络，最后提出融合淋巴结转移比例的MIL网络。</p><hr><p><strong>下面我将主要介绍在工作基础上创新的这三个部分。</strong></p><p>首先是对数据收集的介绍，我的数据来源于中国医学科学院肿瘤医院深圳医院，下图是我在收集数据与扫描数据的过程，数据收集后是转移标注以及轮廓标注，接下来是数据特征的介绍，本工作主要收集了1952张载玻片，总淋巴结数量5075个，整个数据集大小是1.39Tb。同时对比目前的一些相关研究工作，可以看出研究收集样本量相对来说事比较多的，工作量也比较大。</p><p>下面介绍图像分割的处理，一般的方法是基于前景的图像分割，但是存在分割误差大的缺点，Mask2Former是2022年在图像分割领域达到最佳效果的模型，因此使用其作为分割网络进行训练。</p><p>接下来介绍MIL网络的创新，首先对弱监督学习与多实例进行简单介绍，由于我们需要对图像区域的转移进行预测，但是标注成本太高，我们采用弱标签<strong>对可对示例分类的网络进行训练</strong>。即有包标签和根据包标签yi一致的补丁标签pij进行训练，可以得出包级分类以及示例分类的结果。</p><p><strong>下图是相对应的两类MIL模型，分别是基于实例的MIL方法和混合模型，其中最具有代表性的工作与模型是Swin-Transformer与CLAM模型，他们都是2021年优秀的模型，我的创新主要是基于这两个模型。</strong></p><p>在这两种模型的基础上我对其做出了改进，改进的网络如图所示：对于一张分割好的WSI，假设有四个淋巴结，将其切片对应地分为四类，随后利用swin-transformer进行特征提取，以及注意力分数的获取，对分数高的特征向量通过包分类器和实例分类器得到预测结果，I和y，然后用真实标签大Y和C的损失函数来对模型的参数进行调整与训练。损失函数如下，第一部分是淋巴结转移比例的损失，第二部分是对于整个切片的预测与真实值的损失，第三部分是对于前k个高分数的实例分类与真实值的损失。</p><hr><p><strong>下面对上述提到的分割以及分类网络的结果进行介绍。</strong></p><p>首先是环境，用3090显卡，几个主要的模型大概要跑9到10天。</p><p>这个是mask2former训练的结果图，得到map为0.928，在分割领域这个结果还是很好的。</p><p>下图是利用mask2former进行分割和前景分割算法进行分割的对比，列举了三种概括性的情况，可以看出mask2former都能将淋巴结区域分割出来同时不包含其他组织，且分割效果要优于前景分割方法。</p><p>然后是介绍创新的融合淋巴结比例的MIL模型的分割结果，如图为训练的损失变化曲线以及ROC曲线及相应的AUC，下表是不同特征提取网络与分类头结合的结果。<br>可以看出在创新模型在三种评价指标ROC曲线下面积AUC，准确率ACC，以及阳性准确率ACC1都要高于其他模型，而且在病理图像领域中重要的指标阳性准确率上，比其他模型要高不少。<br>因此可以对比看出通过预训练swin-trans特征提取网络再加以改进的分类头都能提升模型的性能。</p><p>下面对最终分类结果做可解释性分析。首先是模型的混淆矩阵，下面做这四种情况的分析，首先对于正确分类的TP和TN结果，相对来说相对的效果都相当好。然后对于FN即将阳性错误分类为阴性，通过放大看出正常细胞与癌细胞混合，出现微转移情况，预测概率较低。对于FP即将阴性错误分类为阳性，通过放大可以看出，部分细胞有癌细胞的一些特点，因此预测概率为0.53略高于阈值0.5，因此误判为阳性。</p><hr><p>最后是对于本工作的总结与展望，</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2023/05/11/%E6%97%85%E8%A1%8C/%E8%AE%BA%E6%96%87%E4%BF%AE%E6%94%B9/"/>
      <url>/2023/05/11/%E6%97%85%E8%A1%8C/%E8%AE%BA%E6%96%87%E4%BF%AE%E6%94%B9/</url>
      
        <content type="html"><![CDATA[<p>英文字母大小保持一致</p><p>分割情况</p><p>弱监督的情况</p><p>淋巴结这块</p><h1 id="第一章"><a href="#第一章" class="headerlink" title="第一章"></a>第一章</h1><p>1.3 框架放大第三章，只写个贡献和意义目的（图要换一下，介绍完整的流程）</p><h1 id="第二章"><a href="#第二章" class="headerlink" title="第二章"></a>第二章</h1><p>先讲一下mask2former</p><p>然后backbone</p><ul><li>一般是做什么用的</li><li>标题不要写特征提取</li></ul><p>然后直接介绍MIL</p><p>本章总结</p><h1 id="第三章"><a href="#第三章" class="headerlink" title="第三章"></a>第三章</h1><p>强调第三章是具体怎么做的，核心部分。使用论文标题</p><p>数据标注，写一下，标注标准，简单写一下。</p><p>图3-2图打上马赛克</p><p>3.4小结中，</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>上海旅行规划</title>
      <link href="/2023/04/16/%E6%97%85%E8%A1%8C/2023-04-16-%E4%B8%8A%E6%B5%B7%E6%97%85%E8%A1%8C%E8%A7%84%E5%88%92/"/>
      <url>/2023/04/16/%E6%97%85%E8%A1%8C/2023-04-16-%E4%B8%8A%E6%B5%B7%E6%97%85%E8%A1%8C%E8%A7%84%E5%88%92/</url>
      
        <content type="html"><![CDATA[<h2 id="Day1："><a href="#Day1：" class="headerlink" title="Day1："></a>Day1：</h2><ul><li>南京路：主要是南京路步行街+外滩+东方明珠；外加渡轮+观光车+朵朵书店</li></ul><p>具体规划：</p><p>下午一点：汉庭酒店集合</p><p>下午两点半：豫园（城隍庙）</p><p>四点半：外滩，拍拍照，坐船</p><p>五点：陆家嘴（外滩观光隧道）</p><p>五点半：南京路步行街</p><p>六点半：饭店</p><p>八点半：朵朵书店、东方明珠</p><p>十点半回酒店（想从外滩走回去）<br><img src="https://minx-obsidian-1308153283.cos.ap-guangzhou.myqcloud.com/obsidian/pic/202304161924961.png" alt="image.png"></p><h2 id="Day2："><a href="#Day2：" class="headerlink" title="Day2："></a>Day2：</h2><p>武康路 一大会址（在黄埔附近） 豫园+城隍庙（下图也有挺近的）+ 世博园（在下面一点）</p><ul><li>早上随便吃点</li></ul><p>观光车 —— 一大会址（附近玩一玩）、上海新天地、复兴公园附近吃饭（附近也有很多玩的）</p><p>下午： 世博园</p><p>晚上：浦东新区<br><a href="https://zhuanlan.zhihu.com/p/385080188">沪上16个夜游好去处 - 知乎 (zhihu.com)</a></p><ul><li>船厂  浦东新区滨江大道1777号</li><li>还没搜到。。。可以去外滩再转转（不然马上放假了）</li></ul><p><img src="https://minx-obsidian-1308153283.cos.ap-guangzhou.myqcloud.com/obsidian/pic/202304161908267.png" alt="image.png"></p><h2 id="day-3"><a href="#day-3" class="headerlink" title="day 3"></a>day 3</h2><p>上午：上海博物馆</p><p>下午： 森林公园</p><p><img src="https://minx-obsidian-1308153283.cos.ap-guangzhou.myqcloud.com/obsidian/pic/202304161918034.png" alt="image.png"></p><h2 id="day4"><a href="#day4" class="headerlink" title="day4"></a>day4</h2><p>武康路<br>安福路<br>学校</p>]]></content>
      
      
      <categories>
          
          <category> 旅游 </category>
          
          <category> 上海 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 旅游 </tag>
            
            <tag> 上海 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2023/02/13/%E6%8A%80%E5%B7%A7/%E4%BD%8F%E6%A0%A1%EF%BC%9A%E5%AE%BF%E8%88%8D%E6%B2%A1%E6%9C%89%E4%BA%86%E3%80%82/"/>
      <url>/2023/02/13/%E6%8A%80%E5%B7%A7/%E4%BD%8F%E6%A0%A1%EF%BC%9A%E5%AE%BF%E8%88%8D%E6%B2%A1%E6%9C%89%E4%BA%86%E3%80%82/</url>
      
        <content type="html"><![CDATA[<p>住校：宿舍没有了。</p><p>师兄商量住哪，外面租房子。</p><p>培养处：程序</p><p>链接，申请进大门</p><p>师兄，联系住宿</p><p>几个文件</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>关于使用代理用于git</title>
      <link href="/2023/02/03/%E6%8A%80%E5%B7%A7/2023-01-25-%E5%85%B3%E4%BA%8E%E4%BD%BF%E7%94%A8%E4%BB%A3%E7%90%86%E7%94%A8%E4%BA%8Egit/"/>
      <url>/2023/02/03/%E6%8A%80%E5%B7%A7/2023-01-25-%E5%85%B3%E4%BA%8E%E4%BD%BF%E7%94%A8%E4%BB%A3%E7%90%86%E7%94%A8%E4%BA%8Egit/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.dazhuanlan.com/nan1999/topics/1485392">使用代理解决国内git clone速度慢的问题 ~ Unicorn’s blog · 大专栏 (dazhuanlan.com)</a></p><p>主要参考这个</p><p>因为我用的是clash for windows</p><p><img src="/../../images/image-20230203201419988.png" alt="image-20230203201419988"></p><p>它的端口在这里</p><p>输入以下内容</p><pre class="line-numbers language-none"><code class="language-none">git config --global http.proxy socks5:&#x2F;&#x2F;127.0.0.1:1080git config --global https.proxy socks5:&#x2F;&#x2F;127.0.0.1:1080<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>亲测有用！！</p><p>如果代理不可用，则需要关闭</p><pre class="line-numbers language-none"><code class="language-none">git config --global http.https:&#x2F;&#x2F;github.com.proxy socks5:&#x2F;&#x2F;127.0.0.1:1080git config --global https.https:&#x2F;&#x2F;github.com.proxy socks5:&#x2F;&#x2F;127.0.0.1:1080<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> obsidian </category>
          
          <category> git </category>
          
          <category> github </category>
          
      </categories>
      
      
        <tags>
            
            <tag> github </tag>
            
            <tag> 技巧 </tag>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>zotero显示应用数量(不会更新)/IF/分区/应用</title>
      <link href="/2023/02/03/%E6%8A%80%E5%B7%A7/2023-02-03-zotero%E6%98%BE%E7%A4%BA%E5%BA%94%E7%94%A8%E6%95%B0%E9%87%8F(%E4%B8%8D%E4%BC%9A%E6%9B%B4%E6%96%B0)/"/>
      <url>/2023/02/03/%E6%8A%80%E5%B7%A7/2023-02-03-zotero%E6%98%BE%E7%A4%BA%E5%BA%94%E7%94%A8%E6%95%B0%E9%87%8F(%E4%B8%8D%E4%BC%9A%E6%9B%B4%E6%96%B0)/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.cnblogs.com/mandy0428/p/15604339.html">Zotero|如何查看文献被引用次数 - Mandy曼蒂 - 博客园 (cnblogs.com)</a></p><p>主要参考这个</p><p>使用方法：</p><p><img src="/../../images/image-20230204114922097.png" alt="image-20230204114922097"></p><p>下载文档–全选–勾选Get Semantic…–等待查找即可</p><p><a href="https://github.com/qnscholar/zotero-if">qnscholar&#x2F;zotero-if: 一款可以为 Zotero 文献更新【影响因子】的效率工具，不过远不止于此。An efficient tool for updating JCR IF for Zotero Items, and far more than that. (github.com)</a></p><p><img src="/../../images/image-20230208180504962.png" alt="image-20230208180504962"></p>]]></content>
      
      
      <categories>
          
          <category> 技巧 </category>
          
          <category> 论文 </category>
          
          <category> zotero </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 技巧 </tag>
            
            <tag> 论文 </tag>
            
            <tag> zotero </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>icloud for windows无法实时更新</title>
      <link href="/2023/01/25/%E6%8A%80%E5%B7%A7/2022-12-25-icloud-for-windows%E6%97%A0%E6%B3%95%E5%AE%9E%E6%97%B6%E6%9B%B4%E6%96%B0/"/>
      <url>/2023/01/25/%E6%8A%80%E5%B7%A7/2022-12-25-icloud-for-windows%E6%97%A0%E6%B3%95%E5%AE%9E%E6%97%B6%E6%9B%B4%E6%96%B0/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.cnblogs.com/Coline1/p/16793434.html">icloud云盘无法同步解决办法 - Coline1 - 博客园 (cnblogs.com)</a></p><p>查了很久资料，把所有重启等方法都试了一遍还是没有作用，最后发现</p><p>原来是我开了代理（&#x2F;尴尬）。。。</p><p>关了，刷新一下就自动更新了</p>]]></content>
      
      
      <categories>
          
          <category> obsidian </category>
          
          <category> 技巧 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 技巧 </tag>
            
            <tag> obsidian </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20230106日常笔记</title>
      <link href="/2023/01/06/%E6%97%A5%E5%B8%B8%E7%AC%94%E8%AE%B0/202301/20230106%E6%97%A5%E5%B8%B8%E7%AC%94%E8%AE%B0/"/>
      <url>/2023/01/06/%E6%97%A5%E5%B8%B8%E7%AC%94%E8%AE%B0/202301/20230106%E6%97%A5%E5%B8%B8%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h2 id="常青藤学校"><a href="#常青藤学校" class="headerlink" title="常青藤学校"></a>常青藤学校</h2><p><a href="https://zhuanlan.zhihu.com/p/43648722">美国常青藤大学一览 - 知乎 (zhihu.com)</a></p><p>老常青藤：（Ivy League）</p><ul><li><p>宾夕法尼亚大学(University of Pennsylvania)</p></li><li><p>哈佛大学(Harvard U)</p></li><li><p>耶鲁大学(Yale U)</p></li><li><p>哥伦比亚大学(Columbia U)</p></li><li><p>普林斯顿大学(Princeton U)</p></li><li><p>布朗大学(Brown U)</p></li><li><p>康奈尔大学(Cornell U)</p></li><li><p>达特茅斯学院(Dartmouth College)</p></li></ul><h2 id="香港的几个大学"><a href="#香港的几个大学" class="headerlink" title="香港的几个大学"></a>香港的几个大学</h2><ul><li>香港大学</li><li>港科大</li><li>港中文</li><li>港城</li><li>香港理工</li></ul>]]></content>
      
      
      <categories>
          
          <category> 日常笔记 </category>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习 </tag>
            
            <tag> 日常笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>西北大杂烩</title>
      <link href="/2023/01/05/%E6%97%85%E8%A1%8C/%E9%9D%92%E6%B5%B7/%E8%A5%BF%E5%8C%97%E5%A4%A7%E7%8E%AF%E6%B8%B8%E5%A4%A7%E6%9D%82%E7%83%A9/"/>
      <url>/2023/01/05/%E6%97%85%E8%A1%8C/%E9%9D%92%E6%B5%B7/%E8%A5%BF%E5%8C%97%E5%A4%A7%E7%8E%AF%E6%B8%B8%E5%A4%A7%E6%9D%82%E7%83%A9/</url>
      
        <content type="html"><![CDATA[<p>这里主要记录我的第一次真正意义上的“旅游”，从规划到旅游途中遇到的种种问题，其中的感受，解决方法等都会在这里进行记录。以下是我的记录思路。</p><h1 id="出发前"><a href="#出发前" class="headerlink" title="出发前"></a>出发前</h1><h4 id="游玩方式"><a href="#游玩方式" class="headerlink" title="游玩方式"></a>游玩方式</h4><ul><li>旅行社</li></ul><p>这个就是最简单的方式了，基本上就是确定一些东西比如套餐包括内容（比如服务，行程，保险，赠送等）</p><ul><li>找领队</li></ul><p>相对来说也比较方便，主要在于甄别真假以及商量确认行程比较麻烦。真假这个当时司机师傅教我，有正规合同，定金只给一小部分的就行。</p><ul><li>包车</li></ul><p>相对来说比较自由，就是包车和司机，一般价钱在1200￥&#x2F;天左右（大车1600左右），青甘大环线可以不包司机饮食住宿但是可能其他要给。这个细节方面要确认清楚。行程需要自己定</p><ul><li>自驾游</li></ul><p>跟包车的差别就是不包师傅。价格在200￥&#x2F;天左右。</p><ul><li>总体对比</li></ul><table><thead><tr><th></th><th>旅行社</th><th>找领队</th><th>包车</th><th>自驾游</th></tr></thead><tbody><tr><td>格外价格</td><td>4</td><td>3</td><td>2</td><td>1</td></tr><tr><td>舒适程度</td><td>4</td><td>3</td><td>2</td><td>1</td></tr><tr><td>自己旅途规划</td><td>0</td><td>0</td><td>1</td><td>1</td></tr><tr><td>自由度</td><td>1</td><td>2</td><td>3</td><td>3</td></tr><tr><td>被坑概率</td><td>1</td><td>1</td><td>1</td><td>1</td></tr><tr><td>游玩程度</td><td>4</td><td>4</td><td>3</td><td>2</td></tr><tr><td>总体而言</td><td>适合新手</td><td>适合找不到团友+时间不充裕，推荐</td><td>适合老手，推荐</td><td>适合老手+一般路段</td></tr></tbody></table><p>注：程度上4&gt;3&gt;2&gt;1，相等即为相同程度，例如被坑概率每一个的程度都差不多。</p><h4 id="组队"><a href="#组队" class="headerlink" title="组队"></a>组队</h4><ul><li>找队友</li></ul><p>找队友一般可以从以下途径找</p><ul><li><input disabled="" type="checkbox"> 小红书（推荐）</li><li><input disabled="" type="checkbox"> 各旅游app（携程、马蜂窝、穷游等）</li><li><input disabled="" type="checkbox"> qq群聊等</li><li><input disabled="" type="checkbox"> 随机组队（领队或者旅行社帮忙组）</li></ul><p>注意：组队的队友其实变数很大，<strong>可能</strong>会因为各种各样的问题鸽你（因为我当时组队是刚好放开了一段时间很多人有阳性，加上高原，很多临阵退缩的），建议找一个信得过的朋友一起陪着玩会好很多</p><ul><li>团友关系</li></ul><p>一般来说4-6个人的这种小团管理或者协商起来都问题不大，只要大家都和善就行（一般现在的年轻人相处起来都还好，至少 ），很多东西都可以自己商量好然后和司机说，司机一般都会统一的。</p><p>大团嘛。。。要照顾每个人的感受，dddd。</p><h4 id="规划"><a href="#规划" class="headerlink" title="规划"></a>规划</h4><p>具体看那种形式吧。</p><ul><li>旅行社</li></ul><p>不需要自己规划，商量好具体细节等就行</p><ul><li>找领队</li></ul><p>也不需要自己规划，相对旅行社来说少了个抽成，其他差不多，但是重点在于看看正不正规，<strong>需要有正规合同</strong></p><ul><li>包车</li></ul><p>需要自己规划，这个小红书、美团、大众点评等都可以找到相关推荐。人数需要找多一点因为还挺贵的。师傅方面也需要确认到位</p><ul><li>自驾游</li></ul><p>哈哈能选择这个选项的肯定不需要看这个了吧</p><h1 id="旅途过程"><a href="#旅途过程" class="headerlink" title="旅途过程"></a>旅途过程</h1><h2 id="火车的两天（12-23-12-24）"><a href="#火车的两天（12-23-12-24）" class="headerlink" title="火车的两天（12.23-12.24）"></a>火车的两天（12.23-12.24）</h2><p><img src="F:\博客\floder\source\images\image-20221225163932160.png" alt="火车信息"></p><ul><li>各省的风景</li></ul><p>![Blank 4 Grids Collage](F:\博客\floder\source\images\Blank 4 Grids Collage.png)</p><p>哈哈很有很多的站没放上去，各省基本上也拍了段视频，后面再剪辑出来吧。</p><ul><li>发烧的兄弟</li></ul><p><img src="F:\博客\floder\source\images\IMG_6859.png" alt="IMG_6859"></p><p>像照顾女朋友一样照顾他。</p><ul><li>闲得蛋疼的面</li></ul><p><img src="F:\博客\floder\source\images\IMG_6860.jpg" alt="IMG_6860"></p><p>哈哈难得试了一下牛肉面，真的面不错，其他的已经要咸的蛋疼了</p><h2 id="到了的前两天（12-25-12-26）"><a href="#到了的前两天（12-25-12-26）" class="headerlink" title="到了的前两天（12.25-12.26）"></a>到了的前两天（12.25-12.26）</h2><p>一直在酒店照顾npy捏。</p><p>emm怎么说呢，没什么特别的所以也就没怎么拍照了，可能明天会去一些好看的地方，到时候去看看。</p><p>主要就是买药，买加湿器的路上</p><p>然后真的不想吃面了，已经要吃吐了！！！！</p><h2 id="到了的第三天（12-27）"><a href="#到了的第三天（12-27）" class="headerlink" title="到了的第三天（12.27）"></a>到了的第三天（12.27）</h2><p>终于可以出去玩了</p><p><img src="/../../../images/image-20230104234554814.png" alt="image-20230104234554814"></p><p>这个是最一开始的规划呢，然后因为病情，下面是阉割版行程（酒店-动物园-莫家街-酒店）</p><ul><li>动物园</li></ul><p>秃鹫</p><p><img src="/../../../images/DSC02173.JPG" alt="DSC02173"></p><p>雪豹！！！</p><p><img src="/../../../images/image-20230104234812954.png" alt="image-20230104234812954"></p><p>猫（稀有的）</p><p><img src="/../../../images/image-20230104234858127.png" alt="image-20230104234858127"></p><ul><li>莫家街</li></ul><p>莫家街就算了，至今还没摸清西宁吃特色的餐馆在哪。（马忠食府还可以，主要是听说价格口感这些有点欺负游客）不过旁边那个德禄酸奶还可以。</p><p>然后其实不建议去，因为全是买特产的。具体的小红书等找吧</p><h2 id="正式出发（12-28-1-2）"><a href="#正式出发（12-28-1-2）" class="headerlink" title="正式出发（12.28-1.2）"></a>正式出发（12.28-1.2）</h2><h3 id="第一天"><a href="#第一天" class="headerlink" title="第一天"></a>第一天</h3><p>总算开始出发了，我们已经离家5天，在西宁呆了三天了</p><ul><li>青海湖</li></ul><p><img src="/../../../images/image-20230104235512039.png" alt="image-20230104235512039"></p><p>青海湖真的值得一去，主要是结冰了，然后还有一个断崖山。作为中国最大的内陆湖，夏天的话是一个热闹的旅游胜地。</p><ul><li>日月山</li></ul><p>日月山景区关闭了！！！现在我们才知道疫情原因导致的景区关闭其实还没有完全恢复。</p><ul><li>茶卡盐湖</li></ul><p>也关了。。。</p><h3 id="第二天"><a href="#第二天" class="headerlink" title="第二天"></a>第二天</h3><ul><li>无人区公路</li></ul><p><img src="/../../../images/image-20230104235746434.png" alt="image-20230104235746434"></p><ul><li>丹霞地貌（小魔鬼城）</li></ul><p><img src="/../../../images/image-20230104235819790.png" alt="image-20230104235819790"></p><ul><li>水上丹霞</li></ul><p><img src="/../../../images/image-20230104235852025.png" alt="image-20230104235852025"></p><ul><li>”火星基地“</li></ul><p><img src="/../../../images/image-20230104235926170.png" alt="image-20230104235926170"></p><h3 id="第三天"><a href="#第三天" class="headerlink" title="第三天"></a>第三天</h3><ul><li>翡翠湖</li></ul><p>60元的门票（因为不开放，用了30元给向导就进去了）</p><p><img src="/../../../images/image-20230105090506943.png" alt="image-20230105090506943"></p><p><img src="/../../../images/image-20230105090719856.png" alt="image-20230105090719856"></p><ul><li>祁连山</li></ul><p>（就是穿越祁连山的路吧）</p><p><img src="/../../../images/image-20230105090850248.png" alt="image-20230105090850248"></p><p><img src="/../../../images/image-20230105090945641.png" alt="image-20230105090945641"></p><ul><li>石油小镇</li></ul><p>其实就是一个影视基地吧</p><p><img src="/../../../images/image-20230105091123153.png" alt="image-20230105091123153"></p><p><img src="/../../../images/image-20230105091210739.png" alt="image-20230105091210739"></p><ul><li>敦煌</li></ul><p>晚上就到敦煌了，来了个沙漠深度穿越（第一次去沙漠哈哈）</p><p>沙漠烟花</p><p><img src="/../../../images/image-20230105091357190.png" alt="image-20230105091357190"></p><p>第一次拍星空（真不会用相机捏）</p><p><img src="/../../../images/image-20230105091430366.png" alt="image-20230105091430366"></p><p>还是隔壁大佬拍的好看</p><p><img src="/../../../images/image-20230105091532329.png" alt="image-20230105091532329"></p><h3 id="第四天"><a href="#第四天" class="headerlink" title="第四天"></a>第四天</h3><ul><li>莫高窟</li></ul><p>这个应该是这里面最出名的了吧</p><p>这个记得提订票，不然会订不到</p><p><img src="/../../../images/image-20230105091642148.png" alt="image-20230105091642148"></p><p>（里面不让拍只放个外面的了）</p><p>浏览过程：看两部短片——摆渡车到主景区——一个讲解员带15个人依次逛洞窟——逛完自由活动（不过一般也是就走了）</p><p>有飞天票和普通票，飞天票会多逛几个洞窟，但是我个人感觉普通也已经足够了</p><ul><li>鸣沙山月牙泉</li></ul><p>鸣沙山就是月牙泉附近的一座沙山吧，主要是因为爬上去拍月牙泉好看</p><p><img src="/../../../images/image-20230105092028581.png" alt="image-20230105092028581"></p><p>月牙泉</p><p><img src="/../../../images/image-20230105092103132.png" alt="image-20230105092103132"></p><p>哈哈这个凭学生证免费</p><p>注：千万不要买滑沙板，不然你一路上只会多拿一块板</p><p>另外可以试一下骆驼，也是挺不错的</p><h3 id="第五天"><a href="#第五天" class="headerlink" title="第五天"></a>第五天</h3><ul><li>嘉峪关</li></ul><p>没时间进去了，只能在外面拍一张</p><p><img src="/../../../images/image-20230105092325546.png" alt="image-20230105092325546"></p><p>嘉峪关有三个景区，一般来说去主景区的最多，但是如果像我们那样时间不够的话，不建议游玩（主要是相对来说不建议）</p><ul><li>七彩丹霞</li></ul><p>这个墙裂推荐，然后一定要在日落前去！！！！不然就要自己p图了！！</p><p>我还没p图，就先把手机上带滤镜的放上来吧</p><p><img src="/../../../images/image-20230105092645164.png" alt="image-20230105092645164"></p><p><img src="/../../../images/image-20230105092719125.png" alt="image-20230105092719125"></p><h3 id="第六天"><a href="#第六天" class="headerlink" title="第六天"></a>第六天</h3><ul><li>祁连大草原</li></ul><p><img src="/../../../images/image-20230105092814555.png" alt="image-20230105092814555"></p><p>就是路过的时候拍一个吧</p><p>然后就到西宁，坐火车去兰州了（主要是西宁直达广州的机票太贵了）</p><ul><li>兰州中山桥</li></ul><p><img src="/../../../images/image-20230105093000121.png" alt="image-20230105093000121"></p><p>下面的是黄河哟</p><ul><li>三台阁</li></ul><p>还是二台阁拍的比较好，三台阁光污染太严重了</p><p>二台阁</p><p><img src="/../../../images/image-20230105093141135.png" alt="image-20230105093141135"></p><p>三台阁</p><p><img src="/../../../images/image-20230105093220713.png" alt="image-20230105093220713"></p><h3 id="第七天"><a href="#第七天" class="headerlink" title="第七天"></a>第七天</h3><ul><li>甘肃博物馆</li></ul><p>哈哈我觉得大部分来的都是来看这个的吧</p><p><img src="/../../../images/image-20230105093347968.png" alt="image-20230105093347968"></p><p>然后就没什么了，做动车去机场回家了</p><h2 id="美食专辑"><a href="#美食专辑" class="headerlink" title="美食专辑"></a>美食专辑</h2><p>哈哈青海的美食是在不敢恭维，主要是很多饭店都没开，然后我们找的店家可能也不是最正宗的，就只放在西宁的了。</p><ul><li>马忠食府</li></ul><p>羊杂面，挺不错（对面的是炒米粉，感觉没什么特色）</p><p><img src="/../../../images/image-20230105094749715.png" alt="image-20230105094749715"></p><p>德禄酸奶，这也是我们一路上的西北酸奶最好的了</p><p><img src="/../../../images/image-20230105094904676.png" alt="image-20230105094904676"></p><p>青稞饼和狗尿饼</p><p>emm看看就好</p><p><img src="/../../../images/image-20230105094931858.png" alt="image-20230105094931858"></p><p>牛奶鸡蛋醪糟</p><p>很值得一试</p><p><img src="/../../../images/image-20230105095003684.png" alt="image-20230105095003684"></p><ul><li>尕乃（敦煌夜市附近几公里，具体店名忘了反正很出名）</li></ul><p>烤羊排</p><p><img src="/../../../images/image-20230105095114968.png" alt="image-20230105095114968"></p><p>羊肉白条</p><p><img src="/../../../images/image-20230105095148831.png" alt="image-20230105095148831"></p><p>羊肉面皮</p><p><img src="/../../../images/image-20230105095210238.png" alt="image-20230105095210238"></p><p>这些都好吃，特别是烤羊排等</p><ul><li>甘州名吃</li></ul><p>张掖的特色美食</p><p><img src="/../../../images/image-20230105093708341.png" alt="image-20230105093708341"></p><p><img src="/../../../images/image-20230105093920241.png" alt="image-20230105093920241"></p><p>强烈推荐炒拨拉和油饼（主要是拨鱼子也可以但是就是面食太多了没吃完）</p><ul><li>西北妈妈（兰州）</li></ul><p><img src="/../../../images/image-20230105094158254.png" alt="image-20230105094158254"></p><p><img src="/../../../images/image-20230105094231184.png" alt="image-20230105094231184"></p><p>全部强烈推荐！！！这些绝对是吃过最好吃的一顿</p><ul><li>马子禄兰州牛肉面</li></ul><p><img src="/../../../images/image-20230105094415884.png" alt="image-20230105094415884"></p><p>这个也强烈推荐，来西北吃了这么多牛肉面，真的只有甘肃的，然后是兰州的最好吃。</p><h1 id="最终总结"><a href="#最终总结" class="headerlink" title="最终总结"></a>最终总结</h1><h2 id="景点总结"><a href="#景点总结" class="headerlink" title="景点总结"></a>景点总结</h2><p>这个去的都是4a，5a的，冬天的西北确实好看的没话说，优点我就不太加以描述了，我就说一下冬天去西北的缺点吧。</p><ul><li>缺点</li></ul><p>首先是景点有些没开，不过这个影响不大，司机们总有办法的（换一个类似的比如）。</p><p>然后饭店可能没开，这个在青海尤为突出，不过甘肃的基本没影响，这个只能忍一下了。</p><p>最后是有一些夏天才有的景色看不到。比如油菜花，天空之境（水结冰了）。哈哈那我可能在夏天会说你看不到冬天的景点呢。</p><ul><li>优点</li></ul><p>最大的优点就是人少，这个对于只喜欢看景色的人来说最合适不过了。</p><h2 id="美食总结"><a href="#美食总结" class="headerlink" title="美食总结"></a>美食总结</h2><p>主要是很多店没开，不过总结一下吧</p><p>一般来说大饭店（评分高的连锁店）很可以，贵是贵了一点，但是质量、水准都是杠杠的。不像一些小饭店，小饭店方差太大了，有时候虽然能找到性价比高的，但是也很容易踩坑。只能说很考验提前规划。</p><p>所以我们的打算就是，早上中午随便吃点，晚上大饭店吃特色大餐。</p><h2 id="规划总结"><a href="#规划总结" class="headerlink" title="规划总结"></a>规划总结</h2><p>主要分旅行前的规划和途中规划吧</p><h3 id="旅行前"><a href="#旅行前" class="headerlink" title="旅行前"></a>旅行前</h3><p>我们主要是报的旅行社，然后旅行社再给我们找领队向导包车这些。所以总的来说偏贵了一点，根据我们的经验主要需要注意的有以下几点</p><ul><li>行程规划：除了他提供的线路外，也可以自己根据网上攻略额外加，当然他会说额外收费，但是可以砍</li><li>服务保障：问清楚有哪些保障，比如住宿酒店级别，包机场接送，包头天晚上住宿，旅途过程中的服务（比如早上会给每个人准备酸奶等等）</li><li>安全保障：问清楚有哪些安全保障，比如保险级别，司机安全，意外情况等</li><li>其他：队内能想到的疑问都可以问</li></ul><p>注：不要吊死在一家上，货比三家，取其精华</p><p>物品准备的话，建议找攻略加问客服（领队）</p><h3 id="旅行中"><a href="#旅行中" class="headerlink" title="旅行中"></a>旅行中</h3><h4 id="景点"><a href="#景点" class="headerlink" title="景点"></a>景点</h4><p>跟别人的话其实不太用担心，一般需要关心以下几点</p><ul><li>门票（有没有优惠）</li><li>哪个时间点最好看，哪个地点是重点</li><li>别人游玩时遇到的坑</li></ul><h4 id="美食"><a href="#美食" class="headerlink" title="美食"></a>美食</h4><p>这个需要重点说一下，因为旅行社领队是不包吃饭的，然后吃饭一般都要自己找（虽然司机都会带你去一些地方，但是那些地方只能说很一般）</p><p>我的建议是早上中午简单吃，晚上大吃特吃（因为一般晚上时间比较自由，可以充分准备）</p><p>找的话就是小红书、大众、美团、高德（看距离）轮着看</p><p>我的建议是除非有充分把握，否则建议找大门店</p><p>毕竟坑确实不少，花点钱买质量我觉得还是挺值的</p><h4 id="特产"><a href="#特产" class="headerlink" title="特产"></a>特产</h4><p>这个因人而异吧，其实都大差不差，记得做好攻略，不要盲目跟从领队就行</p><h3 id="往返，住宿"><a href="#往返，住宿" class="headerlink" title="往返，住宿"></a>往返，住宿</h3><ul><li>火车高铁</li></ul><p>12306</p><ul><li>飞机</li></ul><p>智行旅行</p><ul><li>住宿</li></ul><p>携程就行吧，还可以</p><h2 id="All-in-all"><a href="#All-in-all" class="headerlink" title="All in all"></a>All in all</h2><p>新手训练营，下次开始打排位了（玩更高难度的去了哈哈）</p>]]></content>
      
      
      <categories>
          
          <category> 青海 </category>
          
          <category> 旅游 </category>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习 </tag>
            
            <tag> 青海 </tag>
            
            <tag> 旅游 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>青海旅行第一天</title>
      <link href="/2022/12/25/%E6%97%85%E8%A1%8C/%E9%9D%92%E6%B5%B7/2022-12-25-%E9%9D%92%E6%B5%B7%E6%97%85%E8%A1%8C%E7%AC%AC%E4%B8%80%E5%A4%A9/"/>
      <url>/2022/12/25/%E6%97%85%E8%A1%8C/%E9%9D%92%E6%B5%B7/2022-12-25-%E9%9D%92%E6%B5%B7%E6%97%85%E8%A1%8C%E7%AC%AC%E4%B8%80%E5%A4%A9/</url>
      
        <content type="html"><![CDATA[<h1 id="流水账"><a href="#流水账" class="headerlink" title="流水账"></a>流水账</h1><h2 id="火车的两天（12-23-12-24）"><a href="#火车的两天（12-23-12-24）" class="headerlink" title="火车的两天（12.23-12.24）"></a>火车的两天（12.23-12.24）</h2><p><img src="/../../../images/image-20221225163932160.png" alt="火车信息"></p><ul><li>各省的风景</li></ul><p>![Blank 4 Grids Collage](..&#x2F;..&#x2F;..&#x2F;images&#x2F;Blank 4 Grids Collage.png)</p><p>哈哈很有很多的站没放上去，各省基本上也拍了段视频，后面再剪辑出来吧。</p><ul><li>发烧的兄弟</li></ul><p><img src="/../../../images/IMG_6859.png" alt="IMG_6859"></p><p>像照顾女朋友一样照顾他。</p><ul><li>闲得蛋疼的面</li></ul><p><img src="/../../../images/IMG_6860.jpg" alt="IMG_6860"></p><p>哈哈难得试了一下牛肉面，真的面不错，其他的已经要咸的蛋疼了</p><h2 id="到了的第一天（12-25）"><a href="#到了的第一天（12-25）" class="headerlink" title="到了的第一天（12.25）"></a>到了的第一天（12.25）</h2><p>emm怎么说呢，没什么特别的所以也就没怎么拍照了，可能明天会去一些好看的地方，到时候去看看。</p><p>主要就是买药，买加湿器的路上</p><p>然后真的不想吃面了，已经要吃吐了！！！！</p><h1 id="第一段时间的感想"><a href="#第一段时间的感想" class="headerlink" title="第一段时间的感想"></a>第一段时间的感想</h1><h2 id="组队"><a href="#组队" class="headerlink" title="组队"></a>组队</h2><p>说真的，老妈一开始就说得对，不要吧人数定死，总有那么些人（我很理解，比较特殊时期现在）因为各种原因退出，所以一定要提前做好预计，然后相应的计划什么的也要规划好，有一个不太好的方法就是，先把定金给交了。</p><h2 id="规划"><a href="#规划" class="headerlink" title="规划"></a>规划</h2><p>应该是多准备几套方案的，多几个产品经理联系，到时候也会方便。比如鸽了一边，跟另一边吵架了，还有其他的给你服务。多留一手后路。</p><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><p>反正就是和朋友多问问情况吧，多收集资料多聊聊。然后多几家店问问，其实都差不多的，然后根据大概规划一下情况（和团友们规划一下合适的地方），和不同商家规划、砍价，他们其实也是愿意的。</p>]]></content>
      
      
      <categories>
          
          <category> 青海 </category>
          
          <category> 旅游 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 青海 </tag>
            
            <tag> 旅游 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>拍照学习</title>
      <link href="/2022/12/18/%E7%94%9F%E6%B4%BB/%E6%8B%8D%E7%85%A7%E5%AD%A6%E4%B9%A0/"/>
      <url>/2022/12/18/%E7%94%9F%E6%B4%BB/%E6%8B%8D%E7%85%A7%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<p>前言：</p><p>去青海旅游，没学过拍照的我被迫当起了摄影师哈哈（偷了我爸的摄像机）</p><p><img src="/../../images/image-20221218143544535.png" alt="image-20221218143544535"></p><h2 id="曝光"><a href="#曝光" class="headerlink" title="曝光"></a>曝光</h2><h3 id="光圈"><a href="#光圈" class="headerlink" title="光圈"></a>光圈</h3><p><img src="/../../images/image-20221218144948998.png" alt="image-20221218144948998"></p><p>数值越大，光圈越小（只有这个是反比）</p><h3 id="ISO"><a href="#ISO" class="headerlink" title="ISO"></a>ISO</h3><p><img src="/../../images/image-20221218145313380.png" alt="image-20221218145313380"></p><p>白天：一般用100就行了</p><h3 id="曝光补偿"><a href="#曝光补偿" class="headerlink" title="曝光补偿"></a>曝光补偿</h3><p>不符合自己的认知，就直接调</p><p>白+黑-；明暗</p><h2 id="实践"><a href="#实践" class="headerlink" title="实践"></a>实践</h2><h3 id="基本模式介绍"><a href="#基本模式介绍" class="headerlink" title="基本模式介绍"></a>基本模式介绍</h3><p><img src="/../../images/image-20221218150133605.png" alt="image-20221218150133605"></p><p>（傻瓜模式）</p><p><img src="/../../images/image-20221218150201804.png" alt="image-20221218150201804"></p><p>（好一点可以调一个，一般急着拍的时候用）</p><p><img src="/../../images/image-20221218150251500.png" alt="image-20221218150251500"></p><p>（适用于绝大多数场景）</p><p><img src="/../../images/image-20221218150633883.png" alt="image-20221218150633883"></p><p>（适合抓拍，运动的东西）</p><p><img src="/../../images/image-20221218150659396.png" alt="image-20221218150659396"></p><p>（全部自己调，已经超出EV的处理范围了，或者想要自己的效果）</p><h3 id="实战设置"><a href="#实战设置" class="headerlink" title="实战设置"></a>实战设置</h3><h4 id="风景"><a href="#风景" class="headerlink" title="风景"></a>风景</h4><p><img src="/../../images/image-20221218151659093.png" alt="image-20221218151659093"></p><p>光比就是被拍摄物与环境的差异（明亮差异）</p><h4 id="人像"><a href="#人像" class="headerlink" title="人像"></a>人像</h4><p><img src="/../../images/image-20221218155432873.png" alt="image-20221218155432873"></p><p>参考<a href="https://zhuanlan.zhihu.com/p/446891579">人像拍摄相机的参数设置6个关键点 - 知乎 (zhihu.com)</a></p><ul><li>光圈</li></ul><p>就是光圈越大，成像主体前后的物体就显得越模糊；光圈越小，成像主体前后的物体就显得越清晰。这也就是我们常常说到的“虚化”效果</p><p>要是要达到虚化背景的目的，则需要调大光圈（调小F值）</p><ul><li>ISO</li></ul><p>感光度。100即可，但是光线不足的时候调大，但是会导致出现颗粒感（快门-）</p><ul><li>白平衡</li></ul><p>白平衡可以用于控制照片的色调，它可以让实际环境中的白色物体在拍摄画面中得到基本的还原。</p><h4 id="夜晚"><a href="#夜晚" class="headerlink" title="夜晚"></a>夜晚</h4><p>13pro yyds</p>]]></content>
      
      
      <categories>
          
          <category> 生活 </category>
          
          <category> 拍照 </category>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生活 </tag>
            
            <tag> 拍照 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2022/12/15/%E6%97%85%E8%A1%8C/%E9%9D%92%E6%B5%B7/%E5%9F%BA%E6%9C%AC%E9%80%89%E6%8B%A9/"/>
      <url>/2022/12/15/%E6%97%85%E8%A1%8C/%E9%9D%92%E6%B5%B7/%E5%9F%BA%E6%9C%AC%E9%80%89%E6%8B%A9/</url>
      
        <content type="html"><![CDATA[<p>基本选择：a路线+尊享（不含票）</p><p>按照正常报价，a线 尊享+住&#x3D;（1642-1712）</p><p><img src="F:\博客\floder\source\images\image-20221215194451523.png" alt="image-20221215194451523"></p><p>4人</p><p>首先保证本来的都有。</p><p>额外细节：</p><p>+升级臻选</p><p>+升级7座（mpv等）</p><p>+去可可西里以及当天的住宿</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2022/12/13/%E6%97%85%E8%A1%8C/%E9%9D%92%E6%B5%B7/%E9%9C%80%E8%A6%81%E5%87%86%E5%A4%87%E7%9A%84%E4%B8%9C%E8%A5%BF/"/>
      <url>/2022/12/13/%E6%97%85%E8%A1%8C/%E9%9D%92%E6%B5%B7/%E9%9C%80%E8%A6%81%E5%87%86%E5%A4%87%E7%9A%84%E4%B8%9C%E8%A5%BF/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2022/12/13/%E6%97%85%E8%A1%8C/%E9%9D%92%E6%B5%B7/%E7%AC%AC%E4%BA%8C%E8%BD%AE%E9%97%AE%E7%9A%84%E9%97%AE%E9%A2%98/"/>
      <url>/2022/12/13/%E6%97%85%E8%A1%8C/%E9%9D%92%E6%B5%B7/%E7%AC%AC%E4%BA%8C%E8%BD%AE%E9%97%AE%E7%9A%84%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<h2 id="第二轮问的问题"><a href="#第二轮问的问题" class="headerlink" title="第二轮问的问题"></a>第二轮问的问题</h2><p>Q：<strong>第一天到的时候，住宿和接送</strong>。</p><p>A：接送包含，提前说明到达时间（联系方式）；住的因为是送的所以按照尊享的。如果早来，负责接送，订房可以给底价。</p><p>Q：其他景点（可可西里）</p><p>A：加了可可西里：1000，一天，在主干道附近。</p><p>​      梦珂冰川：3000，一天，在敦煌附近。</p><p>​注：价钱不包括住宿和饮食。</p><p>Q：票的问题（需要订的票）</p><p>A：大部分没问题，除了莫高窟需要注意一下</p><p>Q：保险的内容</p><p>A：自己买一个</p><p>Q：换景点、更换线路（原来的不太好看）</p><p>A：多了两个了，其他的主要是顺路的而已，没必要换了</p><p>Q：酒店的问题（没有暖气等，酒店的安全问题）</p><p>A：大概率有暖气，他们也会保障有。安全没问题</p><p>Q：换活动</p><p>A：忘问了，不过具体就是到时候再具体商量细节吧</p><p>Q：最后返程的问题。住宿和接送</p><p>A：负责接送，如果第二天走，底价房间</p><p>Q：需要带什么穿什么（鞋子等）</p><p>上身：防寒+毛衣+羽绒（厚一点的）；下身：防寒+外搭厚裤子就行；脚：厚袜子+厚鞋子（听说正常的像加绒的也可以了）；</p><p>其他必备：耳套、手套等</p><p>其他不必备：帽子、围巾、墨镜等</p><p>Q：无人机有就更好了</p><p>A：会提供，司机会用</p><p>Q：信号的问题</p><p>A：路上可能没有，但是其他会有的</p><p>Q：压压价</p><p>A：最后再压吧</p><p>Tips：</p><p>带大暖水瓶、热水袋</p><p>智行旅行</p><p>携程、飞猪、美团、</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>青海旅游规划与整理</title>
      <link href="/2022/12/12/%E6%97%85%E8%A1%8C/%E9%9D%92%E6%B5%B7/20221212%E9%A3%9E%E7%8C%AA%E9%97%AE%E7%AD%94/"/>
      <url>/2022/12/12/%E6%97%85%E8%A1%8C/%E9%9D%92%E6%B5%B7/20221212%E9%A3%9E%E7%8C%AA%E9%97%AE%E7%AD%94/</url>
      
        <content type="html"><![CDATA[<p>主要参考来源：</p><p><a href="https://traveldetail.fliggy.com/item.htm?spm=181.11197625.4973973.2.532d4a0aEb2tHM&id=590510884090">青海旅游青甘大环线7天6晚拼车跟团游西宁青海湖茶卡盐湖敦煌祁连-旅游度假-飞猪 (fliggy.com)</a></p><h2 id="飞猪"><a href="#飞猪" class="headerlink" title="飞猪"></a>飞猪</h2><p>A线和B线的区别</p><p>住宿可以升级，尊享可以升级臻选</p><p>Q：人不够怎么办？</p><p>A：不够也可以开</p><p>Q：吃的方面</p><p>A：不包早餐，和团友协商，</p><p>Q：和携程的不同</p><p>A：携程收佣金，</p><p>Q：冰川</p><p>A：梦柯冰川，多3000左右，要换车</p><p>Q：其他的景点</p><p>A：行程中单程不超过30公里的小道景点就可以包含进去的  您直接给司机说就行 </p><p>国际公法九宫格罚款</p><p>法九宫格罚款</p><p>国际公法九宫格罚款</p><p>法九宫格罚款</p>]]></content>
      
      
      <categories>
          
          <category> 旅游 </category>
          
          <category> 规划 </category>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 旅游 </tag>
            
            <tag> 规划 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2022/12/09/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%AD%A6%E4%B9%A0/ubuntu/ubuntu%E5%AD%A6%E4%B9%A0/"/>
      <url>/2022/12/09/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%AD%A6%E4%B9%A0/ubuntu/ubuntu%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<p><a href="https://blog.csdn.net/qq_37150711/article/details/121486113">(40条消息) Win10启动VMware虚拟机开机秒蓝屏问题完美解决_料理码王的博客-CSDN博客_win10打开虚拟机蓝屏</a></p><p>最终蓝屏的解决，更新到16.2就好了</p><p><a href="https://www.bilibili.com/video/BV1na4y1773c?p=16&spm_id_from=pageDriver&vd_source=6eec2f14c9cf0fcea00a0d29ba245c79">5.4 归档压缩_哔哩哔哩_bilibili</a></p><h2 id="常见的命令"><a href="#常见的命令" class="headerlink" title="常见的命令"></a>常见的命令</h2><h3 id="一般的操作"><a href="#一般的操作" class="headerlink" title="一般的操作"></a>一般的操作</h3><ul><li><p>cd</p></li><li><p>ls</p></li><li><p>rm，加 -rf</p></li><li><p>cp</p></li><li><p>mv</p></li></ul><h3 id="归档和压缩"><a href="#归档和压缩" class="headerlink" title="归档和压缩"></a>归档和压缩</h3><h4 id="归档"><a href="#归档" class="headerlink" title="归档"></a>归档</h4><pre class="line-numbers language-none"><code class="language-none">tar -cvf example.tar example<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>c,表示create创建档案<br>V,表示verbose显示详情<br>f,表示file<br>也可以多个目录打包 tar-cvf xxx.tar file1file2 file3</p><h4 id="还原"><a href="#还原" class="headerlink" title="还原"></a>还原</h4><pre class="line-numbers language-none"><code class="language-none">tar -xvf example.tar -C outdir<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>不用-C也可以，默认当前目录</p><h4 id="压缩"><a href="#压缩" class="headerlink" title="压缩"></a>压缩</h4><p>多一个z</p><pre class="line-numbers language-none"><code class="language-none">tar -zcvf example.tar.gz example<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="解压缩"><a href="#解压缩" class="headerlink" title="解压缩"></a>解压缩</h4><p>也是多一个z</p><pre class="line-numbers language-none"><code class="language-none">tar -zxvf example.tar.gz -C example2<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="软连接"><a href="#软连接" class="headerlink" title="软连接"></a>软连接</h3><p>快捷方式</p><pre class="line-numbers language-none"><code class="language-none">ln -s example example2<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="用户管理操作"><a href="#用户管理操作" class="headerlink" title="用户管理操作"></a>用户管理操作</h2><p>sudo 相当于用管理员权限</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2022/12/09/%E8%8B%B1%E8%AF%AD/%E7%BD%91%E6%98%93%E8%AF%BE%E7%A8%8B%E5%AD%A6%E4%B9%A0/"/>
      <url>/2022/12/09/%E8%8B%B1%E8%AF%AD/%E7%BD%91%E6%98%93%E8%AF%BE%E7%A8%8B%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<p>上课的主要目的是实用母语级。（85%虽然有不认识但是不影响理解）</p><p><img src="/../../images/image-20221209200601025.png" alt="image-20221209200601025"></p><p>不同的单词，主要是五类（蓝色的不重要）</p><p><img src="/../../images/image-20221209200924013.png" alt="image-20221209200924013"></p><ul><li>形容词。名词的状态性质特征</li><li>名词是最弱的词汇，永远学不完</li><li>动词。很重要，可以修饰很多名词</li><li>副词。超级重要，可以形容所有动词，只有几十个</li><li>介词。描述时间动作之间的关系。<strong>介词永远学不会</strong></li></ul><p>因此可以得出结论</p><p><img src="/../../images/image-20221209201903692.png" alt="image-20221209201903692"></p><p><strong>知识点永远不是技能</strong></p><p>介词很重要！！！真正日常的就几十个</p><p>如up（副词（出现），。。。）</p><p>如set up设置出来&#x3D;建立</p><p><img src="/../../images/image-20221209203858532.png" alt="image-20221209203858532"></p><p>美剧电影怎么看</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>特征融合笔记</title>
      <link href="/2022/12/04/%E5%A4%A7%E5%9B%9B%E4%B8%8A%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0/%E8%AE%BA%E6%96%87/%E7%89%B9%E5%BE%81%E8%9E%8D%E5%90%88%E7%AC%94%E8%AE%B0/"/>
      <url>/2022/12/04/%E5%A4%A7%E5%9B%9B%E4%B8%8A%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0/%E8%AE%BA%E6%96%87/%E7%89%B9%E5%BE%81%E8%9E%8D%E5%90%88%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h2 id="特征融合参考"><a href="#特征融合参考" class="headerlink" title="特征融合参考"></a>特征融合参考</h2><p><a href="https://zhuanlan.zhihu.com/p/141685352">盘点目标检测中的特征融合技巧（根据YOLO v4总结） - 知乎 (zhihu.com)</a></p>]]></content>
      
      
      <categories>
          
          <category> 深度学习 </category>
          
          <category> 目标检测 </category>
          
          <category> 论文 </category>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 深度学习 </tag>
            
            <tag> 学习 </tag>
            
            <tag> 目标检测 </tag>
            
            <tag> 论文 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>yolov5代码解读</title>
      <link href="/2022/12/04/%E5%A4%A7%E5%9B%9B%E4%B8%8A%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0/%E8%AE%BA%E6%96%87/yolov5%E4%BB%A3%E7%A0%81%E8%A7%A3%E8%AF%BB/"/>
      <url>/2022/12/04/%E5%A4%A7%E5%9B%9B%E4%B8%8A%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0/%E8%AE%BA%E6%96%87/yolov5%E4%BB%A3%E7%A0%81%E8%A7%A3%E8%AF%BB/</url>
      
        <content type="html"><![CDATA[<p>参考来源：</p><p><a href="https://www.bilibili.com/video/BV1Dt4y1x7Fz/?p=2&spm_id_from=pageDriver&vd_source=6eec2f14c9cf0fcea00a0d29ba245c79">推理部分之detect.py文件_哔哩哔哩_bilibili</a></p><p>代码：</p><p><a href="https://github.com/ultralytics/yolov5">ultralytics&#x2F;yolov5: YOLOv5 🚀 in PyTorch &gt; ONNX &gt; CoreML &gt; TFLite (github.com)</a></p><p><img src="/../../../images/image-20221206095700639.png" alt="image-20221206095700639"></p><p><img src="/../../../images/image-20221206100642783.png" alt="image-20221206100642783"></p><p>网络框架</p><h1 id="detect-py"><a href="#detect-py" class="headerlink" title="detect.py"></a>detect.py</h1><p>初始化一些路径</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">FILE <span class="token operator">=</span> Path<span class="token punctuation">(</span>__file__<span class="token punctuation">)</span><span class="token punctuation">.</span>resolve<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">#得到当前这个detect.py的绝对路径</span>ROOT <span class="token operator">=</span> FILE<span class="token punctuation">.</span>parents<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>  <span class="token comment"># YOLOv5 root directory FILE的父目录，就是yolov5的路径</span><span class="token keyword">if</span> <span class="token builtin">str</span><span class="token punctuation">(</span>ROOT<span class="token punctuation">)</span> <span class="token keyword">not</span> <span class="token keyword">in</span> sys<span class="token punctuation">.</span>path<span class="token punctuation">:</span><span class="token comment">#确保后面导入的包能够正常导入</span>    sys<span class="token punctuation">.</span>path<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token builtin">str</span><span class="token punctuation">(</span>ROOT<span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># add ROOT to PATH</span>ROOT <span class="token operator">=</span> Path<span class="token punctuation">(</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>relpath<span class="token punctuation">(</span>ROOT<span class="token punctuation">,</span> Path<span class="token punctuation">.</span>cwd<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># relative，讲ROOT转换为相对路径</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>解析命令行，如很多add_argument，主要是输入的参数，类型，<strong>默认值</strong></p><pre class="line-numbers language-python" data-language="python"><code class="language-python">opt <span class="token operator">=</span> parse_opt<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">#解析命令行，放在</span>parser<span class="token punctuation">.</span>add_argument<span class="token punctuation">(</span><span class="token string">'--weights'</span><span class="token punctuation">,</span> nargs<span class="token operator">=</span><span class="token string">'+'</span><span class="token punctuation">,</span> <span class="token builtin">type</span><span class="token operator">=</span><span class="token builtin">str</span><span class="token punctuation">,</span> default<span class="token operator">=</span>ROOT <span class="token operator">/</span> <span class="token string">'yolov5s.pt'</span><span class="token punctuation">,</span> <span class="token builtin">help</span><span class="token operator">=</span><span class="token string">'model path or triton URL'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h1 id="Kaggle运行yolov5并完成比赛"><a href="#Kaggle运行yolov5并完成比赛" class="headerlink" title="Kaggle运行yolov5并完成比赛"></a>Kaggle运行yolov5并完成比赛</h1><p><a href="https://www.kaggle.com/code/ultralytics/yolov5">YOLOv5 | Kaggle</a></p><p>明天的学习内容</p><p>[<a href="https://www.kaggle.com/code/sheepwang/training-cowboy-object-detection-yolov5">Training]cowboy_object_detection_YOLOv5🤠 | Kaggle</a></p><p>yolov5对于ClearML的使用</p><p><a href="https://github.com/ultralytics/yolov5/wiki/Train-Custom-Data">Train Custom Data · ultralytics&#x2F;yolov5 Wiki (github.com)</a></p>]]></content>
      
      
      <categories>
          
          <category> 深度学习 </category>
          
          <category> 目标检测 </category>
          
          <category> 论文 </category>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 深度学习 </tag>
            
            <tag> 学习 </tag>
            
            <tag> 目标检测 </tag>
            
            <tag> 论文 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>yolov3简单复现</title>
      <link href="/2022/12/02/%E5%A4%A7%E5%9B%9B%E4%B8%8A%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0/%E8%AE%BA%E6%96%87/yolov3%E7%AE%80%E5%8D%95%E5%A4%8D%E7%8E%B0/"/>
      <url>/2022/12/02/%E5%A4%A7%E5%9B%9B%E4%B8%8A%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0/%E8%AE%BA%E6%96%87/yolov3%E7%AE%80%E5%8D%95%E5%A4%8D%E7%8E%B0/</url>
      
        <content type="html"><![CDATA[<p>参考来源：</p><p><a href="https://zhuanlan.zhihu.com/p/107023995">目标检测之 YOLOv3 (Pytorch实现) - 知乎 (zhihu.com)</a></p><p><img src="/../../../images/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2hhaXlhbmd5dW5iYW84MTM=,size_16,color_FFFFFF,t_70.jpeg" alt="img"></p><p><img src="/../../../images/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2hhaXlhbmd5dW5iYW84MTM=,size_16,color_FFFFFF,t_70-16699643234633.jpeg" alt="img"></p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">#DarkNet网络</span><span class="token keyword">class</span> <span class="token class-name">Yolov3</span><span class="token punctuation">(</span>nn<span class="token punctuation">.</span>Module<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token builtin">super</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>__init__<span class="token punctuation">(</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>upsample <span class="token operator">=</span> nn<span class="token punctuation">.</span>Upsample<span class="token punctuation">(</span>scale_factor<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">,</span> mode<span class="token operator">=</span><span class="token string">'bilinear'</span><span class="token punctuation">,</span> align_corners <span class="token operator">=</span> <span class="token boolean">False</span><span class="token punctuation">)</span>        <span class="token comment">#layer0 -> layer4, input = (3, 416, 416), flow_out = (64, 208, 208)</span>        self<span class="token punctuation">.</span>blocks <span class="token operator">=</span> nn<span class="token punctuation">.</span>ModuleDict<span class="token punctuation">(</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>blocks<span class="token punctuation">[</span><span class="token string">'block0_4'</span><span class="token punctuation">]</span> <span class="token operator">=</span> DarknetBlock<span class="token punctuation">(</span><span class="token punctuation">[</span>            <span class="token punctuation">&#123;</span><span class="token string">'id'</span><span class="token punctuation">:</span> <span class="token string">'layer_0'</span><span class="token punctuation">,</span> <span class="token string">'in_channels'</span><span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token string">'out_channels'</span><span class="token punctuation">:</span> <span class="token number">32</span><span class="token punctuation">,</span> <span class="token string">'kernel_size'</span><span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token string">'stride'</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">'padding'</span> <span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">'bnorm'</span><span class="token punctuation">:</span> <span class="token boolean">True</span><span class="token punctuation">,</span> <span class="token string">'leaky'</span><span class="token punctuation">:</span> <span class="token boolean">True</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token punctuation">&#123;</span><span class="token string">'id'</span><span class="token punctuation">:</span> <span class="token string">'layer_1'</span><span class="token punctuation">,</span> <span class="token string">'in_channels'</span><span class="token punctuation">:</span> <span class="token number">32</span><span class="token punctuation">,</span> <span class="token string">'out_channels'</span><span class="token punctuation">:</span> <span class="token number">64</span><span class="token punctuation">,</span> <span class="token string">'kernel_size'</span><span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token string">'stride'</span><span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">'padding'</span> <span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">'bnorm'</span><span class="token punctuation">:</span> <span class="token boolean">True</span><span class="token punctuation">,</span> <span class="token string">'leaky'</span><span class="token punctuation">:</span> <span class="token boolean">True</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token punctuation">&#123;</span><span class="token string">'id'</span><span class="token punctuation">:</span> <span class="token string">'layer_2'</span><span class="token punctuation">,</span> <span class="token string">'in_channels'</span><span class="token punctuation">:</span> <span class="token number">64</span><span class="token punctuation">,</span> <span class="token string">'out_channels'</span><span class="token punctuation">:</span> <span class="token number">32</span><span class="token punctuation">,</span> <span class="token string">'kernel_size'</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">'stride'</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">'padding'</span> <span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">'bnorm'</span><span class="token punctuation">:</span> <span class="token boolean">True</span><span class="token punctuation">,</span> <span class="token string">'leaky'</span><span class="token punctuation">:</span> <span class="token boolean">True</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token punctuation">&#123;</span><span class="token string">'id'</span><span class="token punctuation">:</span> <span class="token string">'layer_3'</span><span class="token punctuation">,</span> <span class="token string">'in_channels'</span><span class="token punctuation">:</span> <span class="token number">32</span><span class="token punctuation">,</span> <span class="token string">'out_channels'</span><span class="token punctuation">:</span> <span class="token number">64</span><span class="token punctuation">,</span> <span class="token string">'kernel_size'</span><span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token string">'stride'</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">'padding'</span> <span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">'bnorm'</span><span class="token punctuation">:</span> <span class="token boolean">True</span><span class="token punctuation">,</span> <span class="token string">'leaky'</span><span class="token punctuation">:</span> <span class="token boolean">True</span><span class="token punctuation">&#125;</span>        <span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token comment">#layer5 -> layer8, input = (64, 208, 208), flow_out = (128, 104, 104)</span>        self<span class="token punctuation">.</span>blocks<span class="token punctuation">[</span><span class="token string">'block5_8'</span><span class="token punctuation">]</span> <span class="token operator">=</span> DarknetBlock<span class="token punctuation">(</span><span class="token punctuation">[</span>            <span class="token punctuation">&#123;</span><span class="token string">'id'</span><span class="token punctuation">:</span> <span class="token string">'layer_5'</span><span class="token punctuation">,</span> <span class="token string">'in_channels'</span><span class="token punctuation">:</span> <span class="token number">64</span><span class="token punctuation">,</span> <span class="token string">'out_channels'</span><span class="token punctuation">:</span> <span class="token number">128</span><span class="token punctuation">,</span> <span class="token string">'kernel_size'</span><span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token string">'stride'</span><span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">'padding'</span> <span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">'bnorm'</span><span class="token punctuation">:</span> <span class="token boolean">True</span><span class="token punctuation">,</span> <span class="token string">'leaky'</span><span class="token punctuation">:</span> <span class="token boolean">True</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token punctuation">&#123;</span><span class="token string">'id'</span><span class="token punctuation">:</span> <span class="token string">'layer_6'</span><span class="token punctuation">,</span> <span class="token string">'in_channels'</span><span class="token punctuation">:</span> <span class="token number">128</span><span class="token punctuation">,</span> <span class="token string">'out_channels'</span><span class="token punctuation">:</span> <span class="token number">64</span><span class="token punctuation">,</span> <span class="token string">'kernel_size'</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">'stride'</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">'padding'</span> <span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">'bnorm'</span><span class="token punctuation">:</span> <span class="token boolean">True</span><span class="token punctuation">,</span> <span class="token string">'leaky'</span><span class="token punctuation">:</span> <span class="token boolean">True</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token punctuation">&#123;</span><span class="token string">'id'</span><span class="token punctuation">:</span> <span class="token string">'layer_7'</span><span class="token punctuation">,</span> <span class="token string">'in_channels'</span><span class="token punctuation">:</span> <span class="token number">64</span><span class="token punctuation">,</span> <span class="token string">'out_channels'</span><span class="token punctuation">:</span> <span class="token number">128</span><span class="token punctuation">,</span> <span class="token string">'kernel_size'</span><span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token string">'stride'</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">'padding'</span> <span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">'bnorm'</span><span class="token punctuation">:</span> <span class="token boolean">True</span><span class="token punctuation">,</span> <span class="token string">'leaky'</span><span class="token punctuation">:</span> <span class="token boolean">True</span><span class="token punctuation">&#125;</span>        <span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token comment">#layer9 -> layer11, input = (128, 104, 104), flow_out = (128, 104, 104)</span>        self<span class="token punctuation">.</span>blocks<span class="token punctuation">[</span><span class="token string">'block9_11'</span><span class="token punctuation">]</span> <span class="token operator">=</span> DarknetBlock<span class="token punctuation">(</span><span class="token punctuation">[</span>            <span class="token punctuation">&#123;</span><span class="token string">'id'</span><span class="token punctuation">:</span> <span class="token string">'layer_9'</span><span class="token punctuation">,</span> <span class="token string">'in_channels'</span><span class="token punctuation">:</span> <span class="token number">128</span><span class="token punctuation">,</span> <span class="token string">'out_channels'</span><span class="token punctuation">:</span> <span class="token number">64</span><span class="token punctuation">,</span> <span class="token string">'kernel_size'</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">'stride'</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">'padding'</span> <span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">'bnorm'</span><span class="token punctuation">:</span> <span class="token boolean">True</span><span class="token punctuation">,</span> <span class="token string">'leaky'</span><span class="token punctuation">:</span> <span class="token boolean">True</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token punctuation">&#123;</span><span class="token string">'id'</span><span class="token punctuation">:</span> <span class="token string">'layer_10'</span><span class="token punctuation">,</span> <span class="token string">'in_channels'</span><span class="token punctuation">:</span> <span class="token number">64</span><span class="token punctuation">,</span> <span class="token string">'out_channels'</span><span class="token punctuation">:</span> <span class="token number">128</span><span class="token punctuation">,</span> <span class="token string">'kernel_size'</span><span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token string">'stride'</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">'padding'</span> <span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">'bnorm'</span><span class="token punctuation">:</span> <span class="token boolean">True</span><span class="token punctuation">,</span> <span class="token string">'leaky'</span><span class="token punctuation">:</span> <span class="token boolean">True</span><span class="token punctuation">&#125;</span>        <span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token comment">#layer12 -> layer15, input = (128, 104, 104), flow_out = (256, 52, 52)</span>        self<span class="token punctuation">.</span>blocks<span class="token punctuation">[</span><span class="token string">'block12_15'</span><span class="token punctuation">]</span> <span class="token operator">=</span> DarknetBlock<span class="token punctuation">(</span><span class="token punctuation">[</span>            <span class="token punctuation">&#123;</span><span class="token string">'id'</span><span class="token punctuation">:</span> <span class="token string">'layer_12'</span><span class="token punctuation">,</span> <span class="token string">'in_channels'</span><span class="token punctuation">:</span> <span class="token number">128</span><span class="token punctuation">,</span> <span class="token string">'out_channels'</span><span class="token punctuation">:</span> <span class="token number">256</span><span class="token punctuation">,</span> <span class="token string">'kernel_size'</span><span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token string">'stride'</span><span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">'padding'</span> <span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">'bnorm'</span><span class="token punctuation">:</span> <span class="token boolean">True</span><span class="token punctuation">,</span> <span class="token string">'leaky'</span><span class="token punctuation">:</span> <span class="token boolean">True</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token punctuation">&#123;</span><span class="token string">'id'</span><span class="token punctuation">:</span> <span class="token string">'layer_13'</span><span class="token punctuation">,</span> <span class="token string">'in_channels'</span><span class="token punctuation">:</span> <span class="token number">256</span><span class="token punctuation">,</span> <span class="token string">'out_channels'</span><span class="token punctuation">:</span> <span class="token number">128</span><span class="token punctuation">,</span> <span class="token string">'kernel_size'</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">'stride'</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">'padding'</span> <span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">'bnorm'</span><span class="token punctuation">:</span> <span class="token boolean">True</span><span class="token punctuation">,</span> <span class="token string">'leaky'</span><span class="token punctuation">:</span> <span class="token boolean">True</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token punctuation">&#123;</span><span class="token string">'id'</span><span class="token punctuation">:</span> <span class="token string">'layer_14'</span><span class="token punctuation">,</span> <span class="token string">'in_channels'</span><span class="token punctuation">:</span> <span class="token number">128</span><span class="token punctuation">,</span> <span class="token string">'out_channels'</span><span class="token punctuation">:</span> <span class="token number">256</span><span class="token punctuation">,</span> <span class="token string">'kernel_size'</span><span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token string">'stride'</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">'padding'</span> <span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">'bnorm'</span><span class="token punctuation">:</span> <span class="token boolean">True</span><span class="token punctuation">,</span> <span class="token string">'leaky'</span><span class="token punctuation">:</span> <span class="token boolean">True</span><span class="token punctuation">&#125;</span>        <span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token comment">#layer16 -> layer36, input = (256, 52, 52), flow_out = (256, 52, 52)</span>        self<span class="token punctuation">.</span>blocks<span class="token punctuation">[</span><span class="token string">'block16_18'</span><span class="token punctuation">]</span> <span class="token operator">=</span> DarknetBlock<span class="token punctuation">(</span><span class="token punctuation">[</span>            <span class="token punctuation">&#123;</span><span class="token string">'id'</span><span class="token punctuation">:</span> <span class="token string">'layer_16'</span><span class="token punctuation">,</span> <span class="token string">'in_channels'</span><span class="token punctuation">:</span> <span class="token number">256</span><span class="token punctuation">,</span> <span class="token string">'out_channels'</span><span class="token punctuation">:</span> <span class="token number">128</span><span class="token punctuation">,</span> <span class="token string">'kernel_size'</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">'stride'</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">'padding'</span> <span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">'bnorm'</span><span class="token punctuation">:</span> <span class="token boolean">True</span><span class="token punctuation">,</span> <span class="token string">'leaky'</span><span class="token punctuation">:</span> <span class="token boolean">True</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token punctuation">&#123;</span><span class="token string">'id'</span><span class="token punctuation">:</span> <span class="token string">'layer_17'</span><span class="token punctuation">,</span> <span class="token string">'in_channels'</span><span class="token punctuation">:</span> <span class="token number">128</span><span class="token punctuation">,</span> <span class="token string">'out_channels'</span><span class="token punctuation">:</span> <span class="token number">256</span><span class="token punctuation">,</span> <span class="token string">'kernel_size'</span><span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token string">'stride'</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">'padding'</span> <span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">'bnorm'</span><span class="token punctuation">:</span> <span class="token boolean">True</span><span class="token punctuation">,</span> <span class="token string">'leaky'</span><span class="token punctuation">:</span> <span class="token boolean">True</span><span class="token punctuation">&#125;</span>        <span class="token punctuation">]</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>blocks<span class="token punctuation">[</span><span class="token string">'block19_21'</span><span class="token punctuation">]</span> <span class="token operator">=</span> DarknetBlock<span class="token punctuation">(</span><span class="token punctuation">[</span>            <span class="token punctuation">&#123;</span><span class="token string">'id'</span><span class="token punctuation">:</span> <span class="token string">'layer_19'</span><span class="token punctuation">,</span> <span class="token string">'in_channels'</span><span class="token punctuation">:</span> <span class="token number">256</span><span class="token punctuation">,</span> <span class="token string">'out_channels'</span><span class="token punctuation">:</span> <span class="token number">128</span><span class="token punctuation">,</span> <span class="token string">'kernel_size'</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">'stride'</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">'padding'</span> <span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">'bnorm'</span><span class="token punctuation">:</span> <span class="token boolean">True</span><span class="token punctuation">,</span> <span class="token string">'leaky'</span><span class="token punctuation">:</span> <span class="token boolean">True</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token punctuation">&#123;</span><span class="token string">'id'</span><span class="token punctuation">:</span> <span class="token string">'layer_20'</span><span class="token punctuation">,</span> <span class="token string">'in_channels'</span><span class="token punctuation">:</span> <span class="token number">128</span><span class="token punctuation">,</span> <span class="token string">'out_channels'</span><span class="token punctuation">:</span> <span class="token number">256</span><span class="token punctuation">,</span> <span class="token string">'kernel_size'</span><span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token string">'stride'</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">'padding'</span> <span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">'bnorm'</span><span class="token punctuation">:</span> <span class="token boolean">True</span><span class="token punctuation">,</span> <span class="token string">'leaky'</span><span class="token punctuation">:</span> <span class="token boolean">True</span><span class="token punctuation">&#125;</span>        <span class="token punctuation">]</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>blocks<span class="token punctuation">[</span><span class="token string">'block22_24'</span><span class="token punctuation">]</span> <span class="token operator">=</span> DarknetBlock<span class="token punctuation">(</span><span class="token punctuation">[</span>            <span class="token punctuation">&#123;</span><span class="token string">'id'</span><span class="token punctuation">:</span> <span class="token string">'layer_22'</span><span class="token punctuation">,</span> <span class="token string">'in_channels'</span><span class="token punctuation">:</span> <span class="token number">256</span><span class="token punctuation">,</span> <span class="token string">'out_channels'</span><span class="token punctuation">:</span> <span class="token number">128</span><span class="token punctuation">,</span> <span class="token string">'kernel_size'</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">'stride'</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">'padding'</span> <span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">'bnorm'</span><span class="token punctuation">:</span> <span class="token boolean">True</span><span class="token punctuation">,</span> <span class="token string">'leaky'</span><span class="token punctuation">:</span> <span class="token boolean">True</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token punctuation">&#123;</span><span class="token string">'id'</span><span class="token punctuation">:</span> <span class="token string">'layer_23'</span><span class="token punctuation">,</span> <span class="token string">'in_channels'</span><span class="token punctuation">:</span> <span class="token number">128</span><span class="token punctuation">,</span> <span class="token string">'out_channels'</span><span class="token punctuation">:</span> <span class="token number">256</span><span class="token punctuation">,</span> <span class="token string">'kernel_size'</span><span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token string">'stride'</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">'padding'</span> <span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">'bnorm'</span><span class="token punctuation">:</span> <span class="token boolean">True</span><span class="token punctuation">,</span> <span class="token string">'leaky'</span><span class="token punctuation">:</span> <span class="token boolean">True</span><span class="token punctuation">&#125;</span>        <span class="token punctuation">]</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>blocks<span class="token punctuation">[</span><span class="token string">'block25_27'</span><span class="token punctuation">]</span> <span class="token operator">=</span> DarknetBlock<span class="token punctuation">(</span><span class="token punctuation">[</span>            <span class="token punctuation">&#123;</span><span class="token string">'id'</span><span class="token punctuation">:</span> <span class="token string">'layer_25'</span><span class="token punctuation">,</span> <span class="token string">'in_channels'</span><span class="token punctuation">:</span> <span class="token number">256</span><span class="token punctuation">,</span> <span class="token string">'out_channels'</span><span class="token punctuation">:</span> <span class="token number">128</span><span class="token punctuation">,</span> <span class="token string">'kernel_size'</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">'stride'</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">'padding'</span> <span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">'bnorm'</span><span class="token punctuation">:</span> <span class="token boolean">True</span><span class="token punctuation">,</span> <span class="token string">'leaky'</span><span class="token punctuation">:</span> <span class="token boolean">True</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token punctuation">&#123;</span><span class="token string">'id'</span><span class="token punctuation">:</span> <span class="token string">'layer_26'</span><span class="token punctuation">,</span> <span class="token string">'in_channels'</span><span class="token punctuation">:</span> <span class="token number">128</span><span class="token punctuation">,</span> <span class="token string">'out_channels'</span><span class="token punctuation">:</span> <span class="token number">256</span><span class="token punctuation">,</span> <span class="token string">'kernel_size'</span><span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token string">'stride'</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">'padding'</span> <span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">'bnorm'</span><span class="token punctuation">:</span> <span class="token boolean">True</span><span class="token punctuation">,</span> <span class="token string">'leaky'</span><span class="token punctuation">:</span> <span class="token boolean">True</span><span class="token punctuation">&#125;</span>        <span class="token punctuation">]</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>blocks<span class="token punctuation">[</span><span class="token string">'block28_30'</span><span class="token punctuation">]</span> <span class="token operator">=</span> DarknetBlock<span class="token punctuation">(</span><span class="token punctuation">[</span>            <span class="token punctuation">&#123;</span><span class="token string">'id'</span><span class="token punctuation">:</span> <span class="token string">'layer_28'</span><span class="token punctuation">,</span> <span class="token string">'in_channels'</span><span class="token punctuation">:</span> <span class="token number">256</span><span class="token punctuation">,</span> <span class="token string">'out_channels'</span><span class="token punctuation">:</span> <span class="token number">128</span><span class="token punctuation">,</span> <span class="token string">'kernel_size'</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">'stride'</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">'padding'</span> <span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">'bnorm'</span><span class="token punctuation">:</span> <span class="token boolean">True</span><span class="token punctuation">,</span> <span class="token string">'leaky'</span><span class="token punctuation">:</span> <span class="token boolean">True</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token punctuation">&#123;</span><span class="token string">'id'</span><span class="token punctuation">:</span> <span class="token string">'layer_29'</span><span class="token punctuation">,</span> <span class="token string">'in_channels'</span><span class="token punctuation">:</span> <span class="token number">128</span><span class="token punctuation">,</span> <span class="token string">'out_channels'</span><span class="token punctuation">:</span> <span class="token number">256</span><span class="token punctuation">,</span> <span class="token string">'kernel_size'</span><span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token string">'stride'</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">'padding'</span> <span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">'bnorm'</span><span class="token punctuation">:</span> <span class="token boolean">True</span><span class="token punctuation">,</span> <span class="token string">'leaky'</span><span class="token punctuation">:</span> <span class="token boolean">True</span><span class="token punctuation">&#125;</span>        <span class="token punctuation">]</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>blocks<span class="token punctuation">[</span><span class="token string">'block31_33'</span><span class="token punctuation">]</span> <span class="token operator">=</span> DarknetBlock<span class="token punctuation">(</span><span class="token punctuation">[</span>            <span class="token punctuation">&#123;</span><span class="token string">'id'</span><span class="token punctuation">:</span> <span class="token string">'layer_31'</span><span class="token punctuation">,</span> <span class="token string">'in_channels'</span><span class="token punctuation">:</span> <span class="token number">256</span><span class="token punctuation">,</span> <span class="token string">'out_channels'</span><span class="token punctuation">:</span> <span class="token number">128</span><span class="token punctuation">,</span> <span class="token string">'kernel_size'</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">'stride'</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">'padding'</span> <span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">'bnorm'</span><span class="token punctuation">:</span> <span class="token boolean">True</span><span class="token punctuation">,</span> <span class="token string">'leaky'</span><span class="token punctuation">:</span> <span class="token boolean">True</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token punctuation">&#123;</span><span class="token string">'id'</span><span class="token punctuation">:</span> <span class="token string">'layer_32'</span><span class="token punctuation">,</span> <span class="token string">'in_channels'</span><span class="token punctuation">:</span> <span class="token number">128</span><span class="token punctuation">,</span> <span class="token string">'out_channels'</span><span class="token punctuation">:</span> <span class="token number">256</span><span class="token punctuation">,</span> <span class="token string">'kernel_size'</span><span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token string">'stride'</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">'padding'</span> <span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">'bnorm'</span><span class="token punctuation">:</span> <span class="token boolean">True</span><span class="token punctuation">,</span> <span class="token string">'leaky'</span><span class="token punctuation">:</span> <span class="token boolean">True</span><span class="token punctuation">&#125;</span>        <span class="token punctuation">]</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>blocks<span class="token punctuation">[</span><span class="token string">'block34_36'</span><span class="token punctuation">]</span> <span class="token operator">=</span> DarknetBlock<span class="token punctuation">(</span><span class="token punctuation">[</span>            <span class="token punctuation">&#123;</span><span class="token string">'id'</span><span class="token punctuation">:</span> <span class="token string">'layer_34'</span><span class="token punctuation">,</span> <span class="token string">'in_channels'</span><span class="token punctuation">:</span> <span class="token number">256</span><span class="token punctuation">,</span> <span class="token string">'out_channels'</span><span class="token punctuation">:</span> <span class="token number">128</span><span class="token punctuation">,</span> <span class="token string">'kernel_size'</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">'stride'</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">'padding'</span> <span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">'bnorm'</span><span class="token punctuation">:</span> <span class="token boolean">True</span><span class="token punctuation">,</span> <span class="token string">'leaky'</span><span class="token punctuation">:</span> <span class="token boolean">True</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token punctuation">&#123;</span><span class="token string">'id'</span><span class="token punctuation">:</span> <span class="token string">'layer_35'</span><span class="token punctuation">,</span> <span class="token string">'in_channels'</span><span class="token punctuation">:</span> <span class="token number">128</span><span class="token punctuation">,</span> <span class="token string">'out_channels'</span><span class="token punctuation">:</span> <span class="token number">256</span><span class="token punctuation">,</span> <span class="token string">'kernel_size'</span><span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token string">'stride'</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">'padding'</span> <span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">'bnorm'</span><span class="token punctuation">:</span> <span class="token boolean">True</span><span class="token punctuation">,</span> <span class="token string">'leaky'</span><span class="token punctuation">:</span> <span class="token boolean">True</span><span class="token punctuation">&#125;</span>        <span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token comment">#layer37 -> layer40, input = (256, 52, 52), flow_out = (512, 26, 26)</span>        self<span class="token punctuation">.</span>blocks<span class="token punctuation">[</span><span class="token string">'block37_40'</span><span class="token punctuation">]</span> <span class="token operator">=</span> DarknetBlock<span class="token punctuation">(</span><span class="token punctuation">[</span>            <span class="token punctuation">&#123;</span><span class="token string">'id'</span><span class="token punctuation">:</span> <span class="token string">'layer_37'</span><span class="token punctuation">,</span> <span class="token string">'in_channels'</span><span class="token punctuation">:</span> <span class="token number">256</span><span class="token punctuation">,</span> <span class="token string">'out_channels'</span><span class="token punctuation">:</span> <span class="token number">512</span><span class="token punctuation">,</span> <span class="token string">'kernel_size'</span><span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token string">'stride'</span><span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">'padding'</span> <span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">'bnorm'</span><span class="token punctuation">:</span> <span class="token boolean">True</span><span class="token punctuation">,</span> <span class="token string">'leaky'</span><span class="token punctuation">:</span> <span class="token boolean">True</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token punctuation">&#123;</span><span class="token string">'id'</span><span class="token punctuation">:</span> <span class="token string">'layer_38'</span><span class="token punctuation">,</span> <span class="token string">'in_channels'</span><span class="token punctuation">:</span> <span class="token number">512</span><span class="token punctuation">,</span> <span class="token string">'out_channels'</span><span class="token punctuation">:</span> <span class="token number">256</span><span class="token punctuation">,</span> <span class="token string">'kernel_size'</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">'stride'</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">'padding'</span> <span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">'bnorm'</span><span class="token punctuation">:</span> <span class="token boolean">True</span><span class="token punctuation">,</span> <span class="token string">'leaky'</span><span class="token punctuation">:</span> <span class="token boolean">True</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token punctuation">&#123;</span><span class="token string">'id'</span><span class="token punctuation">:</span> <span class="token string">'layer_39'</span><span class="token punctuation">,</span> <span class="token string">'in_channels'</span><span class="token punctuation">:</span> <span class="token number">256</span><span class="token punctuation">,</span> <span class="token string">'out_channels'</span><span class="token punctuation">:</span> <span class="token number">512</span><span class="token punctuation">,</span> <span class="token string">'kernel_size'</span><span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token string">'stride'</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">'padding'</span> <span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">'bnorm'</span><span class="token punctuation">:</span> <span class="token boolean">True</span><span class="token punctuation">,</span> <span class="token string">'leaky'</span><span class="token punctuation">:</span> <span class="token boolean">True</span><span class="token punctuation">&#125;</span>        <span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token comment">#layer41 -> layer61, input = (512, 26, 26), flow_out = (512, 26, 26)</span>        self<span class="token punctuation">.</span>blocks<span class="token punctuation">[</span><span class="token string">'block41_43'</span><span class="token punctuation">]</span> <span class="token operator">=</span> DarknetBlock<span class="token punctuation">(</span><span class="token punctuation">[</span>            <span class="token punctuation">&#123;</span><span class="token string">'id'</span><span class="token punctuation">:</span> <span class="token string">'layer_41'</span><span class="token punctuation">,</span> <span class="token string">'in_channels'</span><span class="token punctuation">:</span> <span class="token number">512</span><span class="token punctuation">,</span> <span class="token string">'out_channels'</span><span class="token punctuation">:</span> <span class="token number">256</span><span class="token punctuation">,</span> <span class="token string">'kernel_size'</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">'stride'</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">'padding'</span> <span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">'bnorm'</span><span class="token punctuation">:</span> <span class="token boolean">True</span><span class="token punctuation">,</span> <span class="token string">'leaky'</span><span class="token punctuation">:</span> <span class="token boolean">True</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token punctuation">&#123;</span><span class="token string">'id'</span><span class="token punctuation">:</span> <span class="token string">'layer_42'</span><span class="token punctuation">,</span> <span class="token string">'in_channels'</span><span class="token punctuation">:</span> <span class="token number">256</span><span class="token punctuation">,</span> <span class="token string">'out_channels'</span><span class="token punctuation">:</span> <span class="token number">512</span><span class="token punctuation">,</span> <span class="token string">'kernel_size'</span><span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token string">'stride'</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">'padding'</span> <span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">'bnorm'</span><span class="token punctuation">:</span> <span class="token boolean">True</span><span class="token punctuation">,</span> <span class="token string">'leaky'</span><span class="token punctuation">:</span> <span class="token boolean">True</span><span class="token punctuation">&#125;</span>        <span class="token punctuation">]</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>blocks<span class="token punctuation">[</span><span class="token string">'block44_46'</span><span class="token punctuation">]</span> <span class="token operator">=</span> DarknetBlock<span class="token punctuation">(</span><span class="token punctuation">[</span>            <span class="token punctuation">&#123;</span><span class="token string">'id'</span><span class="token punctuation">:</span> <span class="token string">'layer_44'</span><span class="token punctuation">,</span> <span class="token string">'in_channels'</span><span class="token punctuation">:</span> <span class="token number">512</span><span class="token punctuation">,</span> <span class="token string">'out_channels'</span><span class="token punctuation">:</span> <span class="token number">256</span><span class="token punctuation">,</span> <span class="token string">'kernel_size'</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">'stride'</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">'padding'</span> <span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">'bnorm'</span><span class="token punctuation">:</span> <span class="token boolean">True</span><span class="token punctuation">,</span> <span class="token string">'leaky'</span><span class="token punctuation">:</span> <span class="token boolean">True</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token punctuation">&#123;</span><span class="token string">'id'</span><span class="token punctuation">:</span> <span class="token string">'layer_45'</span><span class="token punctuation">,</span> <span class="token string">'in_channels'</span><span class="token punctuation">:</span> <span class="token number">256</span><span class="token punctuation">,</span> <span class="token string">'out_channels'</span><span class="token punctuation">:</span> <span class="token number">512</span><span class="token punctuation">,</span> <span class="token string">'kernel_size'</span><span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token string">'stride'</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">'padding'</span> <span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">'bnorm'</span><span class="token punctuation">:</span> <span class="token boolean">True</span><span class="token punctuation">,</span> <span class="token string">'leaky'</span><span class="token punctuation">:</span> <span class="token boolean">True</span><span class="token punctuation">&#125;</span>        <span class="token punctuation">]</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>blocks<span class="token punctuation">[</span><span class="token string">'block47_49'</span><span class="token punctuation">]</span> <span class="token operator">=</span> DarknetBlock<span class="token punctuation">(</span><span class="token punctuation">[</span>            <span class="token punctuation">&#123;</span><span class="token string">'id'</span><span class="token punctuation">:</span> <span class="token string">'layer_47'</span><span class="token punctuation">,</span> <span class="token string">'in_channels'</span><span class="token punctuation">:</span> <span class="token number">512</span><span class="token punctuation">,</span> <span class="token string">'out_channels'</span><span class="token punctuation">:</span> <span class="token number">256</span><span class="token punctuation">,</span> <span class="token string">'kernel_size'</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">'stride'</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">'padding'</span> <span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">'bnorm'</span><span class="token punctuation">:</span> <span class="token boolean">True</span><span class="token punctuation">,</span> <span class="token string">'leaky'</span><span class="token punctuation">:</span> <span class="token boolean">True</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token punctuation">&#123;</span><span class="token string">'id'</span><span class="token punctuation">:</span> <span class="token string">'layer_48'</span><span class="token punctuation">,</span> <span class="token string">'in_channels'</span><span class="token punctuation">:</span> <span class="token number">256</span><span class="token punctuation">,</span> <span class="token string">'out_channels'</span><span class="token punctuation">:</span> <span class="token number">512</span><span class="token punctuation">,</span> <span class="token string">'kernel_size'</span><span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token string">'stride'</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">'padding'</span> <span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">'bnorm'</span><span class="token punctuation">:</span> <span class="token boolean">True</span><span class="token punctuation">,</span> <span class="token string">'leaky'</span><span class="token punctuation">:</span> <span class="token boolean">True</span><span class="token punctuation">&#125;</span>        <span class="token punctuation">]</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>blocks<span class="token punctuation">[</span><span class="token string">'block50_52'</span><span class="token punctuation">]</span> <span class="token operator">=</span> DarknetBlock<span class="token punctuation">(</span><span class="token punctuation">[</span>            <span class="token punctuation">&#123;</span><span class="token string">'id'</span><span class="token punctuation">:</span> <span class="token string">'layer_50'</span><span class="token punctuation">,</span> <span class="token string">'in_channels'</span><span class="token punctuation">:</span> <span class="token number">512</span><span class="token punctuation">,</span> <span class="token string">'out_channels'</span><span class="token punctuation">:</span> <span class="token number">256</span><span class="token punctuation">,</span> <span class="token string">'kernel_size'</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">'stride'</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">'padding'</span> <span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">'bnorm'</span><span class="token punctuation">:</span> <span class="token boolean">True</span><span class="token punctuation">,</span> <span class="token string">'leaky'</span><span class="token punctuation">:</span> <span class="token boolean">True</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token punctuation">&#123;</span><span class="token string">'id'</span><span class="token punctuation">:</span> <span class="token string">'layer_51'</span><span class="token punctuation">,</span> <span class="token string">'in_channels'</span><span class="token punctuation">:</span> <span class="token number">256</span><span class="token punctuation">,</span> <span class="token string">'out_channels'</span><span class="token punctuation">:</span> <span class="token number">512</span><span class="token punctuation">,</span> <span class="token string">'kernel_size'</span><span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token string">'stride'</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">'padding'</span> <span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">'bnorm'</span><span class="token punctuation">:</span> <span class="token boolean">True</span><span class="token punctuation">,</span> <span class="token string">'leaky'</span><span class="token punctuation">:</span> <span class="token boolean">True</span><span class="token punctuation">&#125;</span>        <span class="token punctuation">]</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>blocks<span class="token punctuation">[</span><span class="token string">'block53_55'</span><span class="token punctuation">]</span> <span class="token operator">=</span> DarknetBlock<span class="token punctuation">(</span><span class="token punctuation">[</span>            <span class="token punctuation">&#123;</span><span class="token string">'id'</span><span class="token punctuation">:</span> <span class="token string">'layer_53'</span><span class="token punctuation">,</span> <span class="token string">'in_channels'</span><span class="token punctuation">:</span> <span class="token number">512</span><span class="token punctuation">,</span> <span class="token string">'out_channels'</span><span class="token punctuation">:</span> <span class="token number">256</span><span class="token punctuation">,</span> <span class="token string">'kernel_size'</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">'stride'</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">'padding'</span> <span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">'bnorm'</span><span class="token punctuation">:</span> <span class="token boolean">True</span><span class="token punctuation">,</span> <span class="token string">'leaky'</span><span class="token punctuation">:</span> <span class="token boolean">True</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token punctuation">&#123;</span><span class="token string">'id'</span><span class="token punctuation">:</span> <span class="token string">'layer_54'</span><span class="token punctuation">,</span> <span class="token string">'in_channels'</span><span class="token punctuation">:</span> <span class="token number">256</span><span class="token punctuation">,</span> <span class="token string">'out_channels'</span><span class="token punctuation">:</span> <span class="token number">512</span><span class="token punctuation">,</span> <span class="token string">'kernel_size'</span><span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token string">'stride'</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">'padding'</span> <span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">'bnorm'</span><span class="token punctuation">:</span> <span class="token boolean">True</span><span class="token punctuation">,</span> <span class="token string">'leaky'</span><span class="token punctuation">:</span> <span class="token boolean">True</span><span class="token punctuation">&#125;</span>        <span class="token punctuation">]</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>blocks<span class="token punctuation">[</span><span class="token string">'block56_58'</span><span class="token punctuation">]</span> <span class="token operator">=</span> DarknetBlock<span class="token punctuation">(</span><span class="token punctuation">[</span>            <span class="token punctuation">&#123;</span><span class="token string">'id'</span><span class="token punctuation">:</span> <span class="token string">'layer_56'</span><span class="token punctuation">,</span> <span class="token string">'in_channels'</span><span class="token punctuation">:</span> <span class="token number">512</span><span class="token punctuation">,</span> <span class="token string">'out_channels'</span><span class="token punctuation">:</span> <span class="token number">256</span><span class="token punctuation">,</span> <span class="token string">'kernel_size'</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">'stride'</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">'padding'</span> <span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">'bnorm'</span><span class="token punctuation">:</span> <span class="token boolean">True</span><span class="token punctuation">,</span> <span class="token string">'leaky'</span><span class="token punctuation">:</span> <span class="token boolean">True</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token punctuation">&#123;</span><span class="token string">'id'</span><span class="token punctuation">:</span> <span class="token string">'layer_57'</span><span class="token punctuation">,</span> <span class="token string">'in_channels'</span><span class="token punctuation">:</span> <span class="token number">256</span><span class="token punctuation">,</span> <span class="token string">'out_channels'</span><span class="token punctuation">:</span> <span class="token number">512</span><span class="token punctuation">,</span> <span class="token string">'kernel_size'</span><span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token string">'stride'</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">'padding'</span> <span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">'bnorm'</span><span class="token punctuation">:</span> <span class="token boolean">True</span><span class="token punctuation">,</span> <span class="token string">'leaky'</span><span class="token punctuation">:</span> <span class="token boolean">True</span><span class="token punctuation">&#125;</span>        <span class="token punctuation">]</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>blocks<span class="token punctuation">[</span><span class="token string">'block59_61'</span><span class="token punctuation">]</span> <span class="token operator">=</span> DarknetBlock<span class="token punctuation">(</span><span class="token punctuation">[</span>            <span class="token punctuation">&#123;</span><span class="token string">'id'</span><span class="token punctuation">:</span> <span class="token string">'layer_59'</span><span class="token punctuation">,</span> <span class="token string">'in_channels'</span><span class="token punctuation">:</span> <span class="token number">512</span><span class="token punctuation">,</span> <span class="token string">'out_channels'</span><span class="token punctuation">:</span> <span class="token number">256</span><span class="token punctuation">,</span> <span class="token string">'kernel_size'</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">'stride'</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">'padding'</span> <span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">'bnorm'</span><span class="token punctuation">:</span> <span class="token boolean">True</span><span class="token punctuation">,</span> <span class="token string">'leaky'</span><span class="token punctuation">:</span> <span class="token boolean">True</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token punctuation">&#123;</span><span class="token string">'id'</span><span class="token punctuation">:</span> <span class="token string">'layer_60'</span><span class="token punctuation">,</span> <span class="token string">'in_channels'</span><span class="token punctuation">:</span> <span class="token number">256</span><span class="token punctuation">,</span> <span class="token string">'out_channels'</span><span class="token punctuation">:</span> <span class="token number">512</span><span class="token punctuation">,</span> <span class="token string">'kernel_size'</span><span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token string">'stride'</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">'padding'</span> <span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">'bnorm'</span><span class="token punctuation">:</span> <span class="token boolean">True</span><span class="token punctuation">,</span> <span class="token string">'leaky'</span><span class="token punctuation">:</span> <span class="token boolean">True</span><span class="token punctuation">&#125;</span>        <span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token comment">#layer62 -> layer65, input = (512, 26, 26), flow_out = (1024, 13, 13)</span>        self<span class="token punctuation">.</span>blocks<span class="token punctuation">[</span><span class="token string">'block62_65'</span><span class="token punctuation">]</span> <span class="token operator">=</span> DarknetBlock<span class="token punctuation">(</span><span class="token punctuation">[</span>            <span class="token punctuation">&#123;</span><span class="token string">'id'</span><span class="token punctuation">:</span> <span class="token string">'layer_62'</span><span class="token punctuation">,</span> <span class="token string">'in_channels'</span><span class="token punctuation">:</span> <span class="token number">512</span><span class="token punctuation">,</span> <span class="token string">'out_channels'</span><span class="token punctuation">:</span> <span class="token number">1024</span><span class="token punctuation">,</span> <span class="token string">'kernel_size'</span><span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token string">'stride'</span><span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">'padding'</span> <span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">'bnorm'</span><span class="token punctuation">:</span> <span class="token boolean">True</span><span class="token punctuation">,</span> <span class="token string">'leaky'</span><span class="token punctuation">:</span> <span class="token boolean">True</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token punctuation">&#123;</span><span class="token string">'id'</span><span class="token punctuation">:</span> <span class="token string">'layer_63'</span><span class="token punctuation">,</span> <span class="token string">'in_channels'</span><span class="token punctuation">:</span> <span class="token number">1024</span><span class="token punctuation">,</span> <span class="token string">'out_channels'</span><span class="token punctuation">:</span> <span class="token number">512</span><span class="token punctuation">,</span> <span class="token string">'kernel_size'</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">'stride'</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">'padding'</span> <span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">'bnorm'</span><span class="token punctuation">:</span> <span class="token boolean">True</span><span class="token punctuation">,</span> <span class="token string">'leaky'</span><span class="token punctuation">:</span> <span class="token boolean">True</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token punctuation">&#123;</span><span class="token string">'id'</span><span class="token punctuation">:</span> <span class="token string">'layer_64'</span><span class="token punctuation">,</span> <span class="token string">'in_channels'</span><span class="token punctuation">:</span> <span class="token number">512</span><span class="token punctuation">,</span> <span class="token string">'out_channels'</span><span class="token punctuation">:</span> <span class="token number">1024</span><span class="token punctuation">,</span> <span class="token string">'kernel_size'</span><span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token string">'stride'</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">'padding'</span> <span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">'bnorm'</span><span class="token punctuation">:</span> <span class="token boolean">True</span><span class="token punctuation">,</span> <span class="token string">'leaky'</span><span class="token punctuation">:</span> <span class="token boolean">True</span><span class="token punctuation">&#125;</span>        <span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token comment">#layer66 -> layer74, input = (1024, 13, 13), flow_out = (1024, 13, 13)</span>        self<span class="token punctuation">.</span>blocks<span class="token punctuation">[</span><span class="token string">'block66_68'</span><span class="token punctuation">]</span> <span class="token operator">=</span> DarknetBlock<span class="token punctuation">(</span><span class="token punctuation">[</span>            <span class="token punctuation">&#123;</span><span class="token string">'id'</span><span class="token punctuation">:</span> <span class="token string">'layer_66'</span><span class="token punctuation">,</span> <span class="token string">'in_channels'</span><span class="token punctuation">:</span> <span class="token number">1024</span><span class="token punctuation">,</span> <span class="token string">'out_channels'</span><span class="token punctuation">:</span> <span class="token number">512</span><span class="token punctuation">,</span> <span class="token string">'kernel_size'</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">'stride'</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">'padding'</span> <span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">'bnorm'</span><span class="token punctuation">:</span> <span class="token boolean">True</span><span class="token punctuation">,</span> <span class="token string">'leaky'</span><span class="token punctuation">:</span> <span class="token boolean">True</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token punctuation">&#123;</span><span class="token string">'id'</span><span class="token punctuation">:</span> <span class="token string">'layer_67'</span><span class="token punctuation">,</span> <span class="token string">'in_channels'</span><span class="token punctuation">:</span> <span class="token number">512</span><span class="token punctuation">,</span> <span class="token string">'out_channels'</span><span class="token punctuation">:</span> <span class="token number">1024</span><span class="token punctuation">,</span> <span class="token string">'kernel_size'</span><span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token string">'stride'</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">'padding'</span> <span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">'bnorm'</span><span class="token punctuation">:</span> <span class="token boolean">True</span><span class="token punctuation">,</span> <span class="token string">'leaky'</span><span class="token punctuation">:</span> <span class="token boolean">True</span><span class="token punctuation">&#125;</span>        <span class="token punctuation">]</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>blocks<span class="token punctuation">[</span><span class="token string">'block69_71'</span><span class="token punctuation">]</span> <span class="token operator">=</span> DarknetBlock<span class="token punctuation">(</span><span class="token punctuation">[</span>            <span class="token punctuation">&#123;</span><span class="token string">'id'</span><span class="token punctuation">:</span> <span class="token string">'layer_69'</span><span class="token punctuation">,</span> <span class="token string">'in_channels'</span><span class="token punctuation">:</span> <span class="token number">1024</span><span class="token punctuation">,</span> <span class="token string">'out_channels'</span><span class="token punctuation">:</span> <span class="token number">512</span><span class="token punctuation">,</span> <span class="token string">'kernel_size'</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">'stride'</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">'padding'</span> <span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">'bnorm'</span><span class="token punctuation">:</span> <span class="token boolean">True</span><span class="token punctuation">,</span> <span class="token string">'leaky'</span><span class="token punctuation">:</span> <span class="token boolean">True</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token punctuation">&#123;</span><span class="token string">'id'</span><span class="token punctuation">:</span> <span class="token string">'layer_70'</span><span class="token punctuation">,</span> <span class="token string">'in_channels'</span><span class="token punctuation">:</span> <span class="token number">512</span><span class="token punctuation">,</span> <span class="token string">'out_channels'</span><span class="token punctuation">:</span> <span class="token number">1024</span><span class="token punctuation">,</span> <span class="token string">'kernel_size'</span><span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token string">'stride'</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">'padding'</span> <span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">'bnorm'</span><span class="token punctuation">:</span> <span class="token boolean">True</span><span class="token punctuation">,</span> <span class="token string">'leaky'</span><span class="token punctuation">:</span> <span class="token boolean">True</span><span class="token punctuation">&#125;</span>        <span class="token punctuation">]</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>blocks<span class="token punctuation">[</span><span class="token string">'block72_74'</span><span class="token punctuation">]</span> <span class="token operator">=</span> DarknetBlock<span class="token punctuation">(</span><span class="token punctuation">[</span>            <span class="token punctuation">&#123;</span><span class="token string">'id'</span><span class="token punctuation">:</span> <span class="token string">'layer_72'</span><span class="token punctuation">,</span> <span class="token string">'in_channels'</span><span class="token punctuation">:</span> <span class="token number">1024</span><span class="token punctuation">,</span> <span class="token string">'out_channels'</span><span class="token punctuation">:</span> <span class="token number">512</span><span class="token punctuation">,</span> <span class="token string">'kernel_size'</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">'stride'</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">'padding'</span> <span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">'bnorm'</span><span class="token punctuation">:</span> <span class="token boolean">True</span><span class="token punctuation">,</span> <span class="token string">'leaky'</span><span class="token punctuation">:</span> <span class="token boolean">True</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token punctuation">&#123;</span><span class="token string">'id'</span><span class="token punctuation">:</span> <span class="token string">'layer_73'</span><span class="token punctuation">,</span> <span class="token string">'in_channels'</span><span class="token punctuation">:</span> <span class="token number">512</span><span class="token punctuation">,</span> <span class="token string">'out_channels'</span><span class="token punctuation">:</span> <span class="token number">1024</span><span class="token punctuation">,</span> <span class="token string">'kernel_size'</span><span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token string">'stride'</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">'padding'</span> <span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">'bnorm'</span><span class="token punctuation">:</span> <span class="token boolean">True</span><span class="token punctuation">,</span> <span class="token string">'leaky'</span><span class="token punctuation">:</span> <span class="token boolean">True</span><span class="token punctuation">&#125;</span>        <span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token comment">#layer75 -> layer79, input = (1024, 13, 13), flow_out = (512, 13, 13)</span>        self<span class="token punctuation">.</span>blocks<span class="token punctuation">[</span><span class="token string">'block75_79'</span><span class="token punctuation">]</span> <span class="token operator">=</span> DarknetBlock<span class="token punctuation">(</span><span class="token punctuation">[</span>            <span class="token punctuation">&#123;</span><span class="token string">'id'</span><span class="token punctuation">:</span> <span class="token string">'layer_75'</span><span class="token punctuation">,</span> <span class="token string">'in_channels'</span><span class="token punctuation">:</span> <span class="token number">1024</span><span class="token punctuation">,</span> <span class="token string">'out_channels'</span><span class="token punctuation">:</span> <span class="token number">512</span><span class="token punctuation">,</span> <span class="token string">'kernel_size'</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">'stride'</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">'padding'</span> <span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">'bnorm'</span><span class="token punctuation">:</span> <span class="token boolean">True</span><span class="token punctuation">,</span> <span class="token string">'leaky'</span><span class="token punctuation">:</span> <span class="token boolean">True</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token punctuation">&#123;</span><span class="token string">'id'</span><span class="token punctuation">:</span> <span class="token string">'layer_76'</span><span class="token punctuation">,</span> <span class="token string">'in_channels'</span><span class="token punctuation">:</span> <span class="token number">512</span><span class="token punctuation">,</span> <span class="token string">'out_channels'</span><span class="token punctuation">:</span> <span class="token number">1024</span><span class="token punctuation">,</span> <span class="token string">'kernel_size'</span><span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token string">'stride'</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">'padding'</span> <span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">'bnorm'</span><span class="token punctuation">:</span> <span class="token boolean">True</span><span class="token punctuation">,</span> <span class="token string">'leaky'</span><span class="token punctuation">:</span> <span class="token boolean">True</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token punctuation">&#123;</span><span class="token string">'id'</span><span class="token punctuation">:</span> <span class="token string">'layer_77'</span><span class="token punctuation">,</span> <span class="token string">'in_channels'</span><span class="token punctuation">:</span> <span class="token number">1024</span><span class="token punctuation">,</span> <span class="token string">'out_channels'</span><span class="token punctuation">:</span> <span class="token number">512</span><span class="token punctuation">,</span> <span class="token string">'kernel_size'</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">'stride'</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">'padding'</span> <span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">'bnorm'</span><span class="token punctuation">:</span> <span class="token boolean">True</span><span class="token punctuation">,</span> <span class="token string">'leaky'</span><span class="token punctuation">:</span> <span class="token boolean">True</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token punctuation">&#123;</span><span class="token string">'id'</span><span class="token punctuation">:</span> <span class="token string">'layer_78'</span><span class="token punctuation">,</span> <span class="token string">'in_channels'</span><span class="token punctuation">:</span> <span class="token number">512</span><span class="token punctuation">,</span> <span class="token string">'out_channels'</span><span class="token punctuation">:</span> <span class="token number">1024</span><span class="token punctuation">,</span> <span class="token string">'kernel_size'</span><span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token string">'stride'</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">'padding'</span> <span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">'bnorm'</span><span class="token punctuation">:</span> <span class="token boolean">True</span><span class="token punctuation">,</span> <span class="token string">'leaky'</span><span class="token punctuation">:</span> <span class="token boolean">True</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token punctuation">&#123;</span><span class="token string">'id'</span><span class="token punctuation">:</span> <span class="token string">'layer_79'</span><span class="token punctuation">,</span> <span class="token string">'in_channels'</span><span class="token punctuation">:</span> <span class="token number">1024</span><span class="token punctuation">,</span> <span class="token string">'out_channels'</span><span class="token punctuation">:</span> <span class="token number">512</span><span class="token punctuation">,</span> <span class="token string">'kernel_size'</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">'stride'</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">'padding'</span> <span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">'bnorm'</span><span class="token punctuation">:</span> <span class="token boolean">True</span><span class="token punctuation">,</span> <span class="token string">'leaky'</span><span class="token punctuation">:</span> <span class="token boolean">True</span><span class="token punctuation">&#125;</span>        <span class="token punctuation">]</span><span class="token punctuation">,</span> skip <span class="token operator">=</span> <span class="token boolean">False</span><span class="token punctuation">)</span>        <span class="token comment">#layer80 -> layer82, input = (512, 13, 13), yolo_out = (255, 13, 13)</span>        self<span class="token punctuation">.</span>blocks<span class="token punctuation">[</span><span class="token string">'yolo_82'</span><span class="token punctuation">]</span> <span class="token operator">=</span> DarknetBlock<span class="token punctuation">(</span><span class="token punctuation">[</span>            <span class="token punctuation">&#123;</span><span class="token string">'id'</span><span class="token punctuation">:</span> <span class="token string">'layer_80'</span><span class="token punctuation">,</span> <span class="token string">'in_channels'</span><span class="token punctuation">:</span> <span class="token number">512</span><span class="token punctuation">,</span> <span class="token string">'out_channels'</span><span class="token punctuation">:</span> <span class="token number">1024</span><span class="token punctuation">,</span> <span class="token string">'kernel_size'</span><span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token string">'stride'</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">'padding'</span> <span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">'bnorm'</span><span class="token punctuation">:</span> <span class="token boolean">True</span><span class="token punctuation">,</span> <span class="token string">'leaky'</span><span class="token punctuation">:</span> <span class="token boolean">True</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token punctuation">&#123;</span><span class="token string">'id'</span><span class="token punctuation">:</span> <span class="token string">'layer_81'</span><span class="token punctuation">,</span> <span class="token string">'in_channels'</span><span class="token punctuation">:</span> <span class="token number">1024</span><span class="token punctuation">,</span> <span class="token string">'out_channels'</span><span class="token punctuation">:</span> <span class="token number">255</span><span class="token punctuation">,</span> <span class="token string">'kernel_size'</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">'stride'</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">'padding'</span> <span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">'bnorm'</span><span class="token punctuation">:</span> <span class="token boolean">False</span><span class="token punctuation">,</span> <span class="token string">'leaky'</span><span class="token punctuation">:</span> <span class="token boolean">False</span><span class="token punctuation">&#125;</span>        <span class="token punctuation">]</span><span class="token punctuation">,</span> skip <span class="token operator">=</span> <span class="token boolean">False</span><span class="token punctuation">)</span>        <span class="token comment">#layer83 -> layer86, input = (512, 13, 13), -> (256, 13, 13) -> upsample and concate layer61(512, 26, 26), flow_out = (768, 26, 26)</span>        self<span class="token punctuation">.</span>blocks<span class="token punctuation">[</span><span class="token string">'block83_86'</span><span class="token punctuation">]</span> <span class="token operator">=</span> DarknetBlock<span class="token punctuation">(</span><span class="token punctuation">[</span>            <span class="token punctuation">&#123;</span><span class="token string">'id'</span><span class="token punctuation">:</span> <span class="token string">'layer_84'</span><span class="token punctuation">,</span> <span class="token string">'in_channels'</span><span class="token punctuation">:</span> <span class="token number">512</span><span class="token punctuation">,</span> <span class="token string">'out_channels'</span><span class="token punctuation">:</span> <span class="token number">256</span><span class="token punctuation">,</span> <span class="token string">'kernel_size'</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">'stride'</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">'padding'</span> <span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">'bnorm'</span><span class="token punctuation">:</span> <span class="token boolean">True</span><span class="token punctuation">,</span> <span class="token string">'leaky'</span><span class="token punctuation">:</span> <span class="token boolean">True</span><span class="token punctuation">&#125;</span>        <span class="token punctuation">]</span><span class="token punctuation">,</span> skip <span class="token operator">=</span> <span class="token boolean">False</span><span class="token punctuation">)</span>        <span class="token comment">#layer87 -> layer91, input = (768, 26, 26), flow_out = (256, 26, 26)</span>        self<span class="token punctuation">.</span>blocks<span class="token punctuation">[</span><span class="token string">'block87_91'</span><span class="token punctuation">]</span> <span class="token operator">=</span> DarknetBlock<span class="token punctuation">(</span><span class="token punctuation">[</span>            <span class="token punctuation">&#123;</span><span class="token string">'id'</span><span class="token punctuation">:</span> <span class="token string">'layer_87'</span><span class="token punctuation">,</span> <span class="token string">'in_channels'</span><span class="token punctuation">:</span> <span class="token number">768</span><span class="token punctuation">,</span> <span class="token string">'out_channels'</span><span class="token punctuation">:</span> <span class="token number">256</span><span class="token punctuation">,</span> <span class="token string">'kernel_size'</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">'stride'</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">'padding'</span> <span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">'bnorm'</span><span class="token punctuation">:</span> <span class="token boolean">True</span><span class="token punctuation">,</span> <span class="token string">'leaky'</span><span class="token punctuation">:</span> <span class="token boolean">True</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token punctuation">&#123;</span><span class="token string">'id'</span><span class="token punctuation">:</span> <span class="token string">'layer_88'</span><span class="token punctuation">,</span> <span class="token string">'in_channels'</span><span class="token punctuation">:</span> <span class="token number">256</span><span class="token punctuation">,</span> <span class="token string">'out_channels'</span><span class="token punctuation">:</span> <span class="token number">512</span><span class="token punctuation">,</span> <span class="token string">'kernel_size'</span><span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token string">'stride'</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">'padding'</span> <span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">'bnorm'</span><span class="token punctuation">:</span> <span class="token boolean">True</span><span class="token punctuation">,</span> <span class="token string">'leaky'</span><span class="token punctuation">:</span> <span class="token boolean">True</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token punctuation">&#123;</span><span class="token string">'id'</span><span class="token punctuation">:</span> <span class="token string">'layer_89'</span><span class="token punctuation">,</span> <span class="token string">'in_channels'</span><span class="token punctuation">:</span> <span class="token number">512</span><span class="token punctuation">,</span> <span class="token string">'out_channels'</span><span class="token punctuation">:</span> <span class="token number">256</span><span class="token punctuation">,</span> <span class="token string">'kernel_size'</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">'stride'</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">'padding'</span> <span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">'bnorm'</span><span class="token punctuation">:</span> <span class="token boolean">True</span><span class="token punctuation">,</span> <span class="token string">'leaky'</span><span class="token punctuation">:</span> <span class="token boolean">True</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token punctuation">&#123;</span><span class="token string">'id'</span><span class="token punctuation">:</span> <span class="token string">'layer_90'</span><span class="token punctuation">,</span> <span class="token string">'in_channels'</span><span class="token punctuation">:</span> <span class="token number">256</span><span class="token punctuation">,</span> <span class="token string">'out_channels'</span><span class="token punctuation">:</span> <span class="token number">512</span><span class="token punctuation">,</span> <span class="token string">'kernel_size'</span><span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token string">'stride'</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">'padding'</span> <span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">'bnorm'</span><span class="token punctuation">:</span> <span class="token boolean">True</span><span class="token punctuation">,</span> <span class="token string">'leaky'</span><span class="token punctuation">:</span> <span class="token boolean">True</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token punctuation">&#123;</span><span class="token string">'id'</span><span class="token punctuation">:</span> <span class="token string">'layer_91'</span><span class="token punctuation">,</span> <span class="token string">'in_channels'</span><span class="token punctuation">:</span> <span class="token number">512</span><span class="token punctuation">,</span> <span class="token string">'out_channels'</span><span class="token punctuation">:</span> <span class="token number">256</span><span class="token punctuation">,</span> <span class="token string">'kernel_size'</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">'stride'</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">'padding'</span> <span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">'bnorm'</span><span class="token punctuation">:</span> <span class="token boolean">True</span><span class="token punctuation">,</span> <span class="token string">'leaky'</span><span class="token punctuation">:</span> <span class="token boolean">True</span><span class="token punctuation">&#125;</span>        <span class="token punctuation">]</span><span class="token punctuation">,</span> skip <span class="token operator">=</span> <span class="token boolean">False</span><span class="token punctuation">)</span>        <span class="token comment">#layer92 -> layer94, input = (256, 26, 26), yolo_out = (255, 26, 26)</span>        self<span class="token punctuation">.</span>blocks<span class="token punctuation">[</span><span class="token string">'yolo_94'</span><span class="token punctuation">]</span> <span class="token operator">=</span> DarknetBlock<span class="token punctuation">(</span><span class="token punctuation">[</span>            <span class="token punctuation">&#123;</span><span class="token string">'id'</span><span class="token punctuation">:</span> <span class="token string">'layer_92'</span><span class="token punctuation">,</span> <span class="token string">'in_channels'</span><span class="token punctuation">:</span> <span class="token number">256</span><span class="token punctuation">,</span> <span class="token string">'out_channels'</span><span class="token punctuation">:</span> <span class="token number">512</span><span class="token punctuation">,</span> <span class="token string">'kernel_size'</span><span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token string">'stride'</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">'padding'</span> <span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">'bnorm'</span><span class="token punctuation">:</span> <span class="token boolean">True</span><span class="token punctuation">,</span> <span class="token string">'leaky'</span><span class="token punctuation">:</span> <span class="token boolean">True</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token punctuation">&#123;</span><span class="token string">'id'</span><span class="token punctuation">:</span> <span class="token string">'layer_93'</span><span class="token punctuation">,</span> <span class="token string">'in_channels'</span><span class="token punctuation">:</span> <span class="token number">512</span><span class="token punctuation">,</span> <span class="token string">'out_channels'</span><span class="token punctuation">:</span> <span class="token number">255</span><span class="token punctuation">,</span> <span class="token string">'kernel_size'</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">'stride'</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">'padding'</span> <span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">'bnorm'</span><span class="token punctuation">:</span> <span class="token boolean">False</span><span class="token punctuation">,</span> <span class="token string">'leaky'</span><span class="token punctuation">:</span> <span class="token boolean">False</span><span class="token punctuation">&#125;</span>        <span class="token punctuation">]</span><span class="token punctuation">,</span> skip <span class="token operator">=</span> <span class="token boolean">False</span><span class="token punctuation">)</span>        <span class="token comment">#layer95 -> layer98, input = (256, 26, 26), -> (128, 26, 26) -> upsample and concate layer36(256, 52, 52), flow_out = (384, 52, 52)</span>        self<span class="token punctuation">.</span>blocks<span class="token punctuation">[</span><span class="token string">'block95_98'</span><span class="token punctuation">]</span> <span class="token operator">=</span> DarknetBlock<span class="token punctuation">(</span><span class="token punctuation">[</span>            <span class="token punctuation">&#123;</span><span class="token string">'id'</span><span class="token punctuation">:</span> <span class="token string">'layer_96'</span><span class="token punctuation">,</span> <span class="token string">'in_channels'</span><span class="token punctuation">:</span> <span class="token number">256</span><span class="token punctuation">,</span> <span class="token string">'out_channels'</span><span class="token punctuation">:</span> <span class="token number">128</span><span class="token punctuation">,</span> <span class="token string">'kernel_size'</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">'stride'</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">'padding'</span> <span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">'bnorm'</span><span class="token punctuation">:</span> <span class="token boolean">True</span><span class="token punctuation">,</span> <span class="token string">'leaky'</span><span class="token punctuation">:</span> <span class="token boolean">True</span><span class="token punctuation">&#125;</span>        <span class="token punctuation">]</span><span class="token punctuation">,</span> skip <span class="token operator">=</span> <span class="token boolean">False</span><span class="token punctuation">)</span>        <span class="token comment">#layer99 -> layer106, input = (384, 52, 52), yolo_out = (255, 52, 52)</span>        self<span class="token punctuation">.</span>blocks<span class="token punctuation">[</span><span class="token string">'yolo_106'</span><span class="token punctuation">]</span> <span class="token operator">=</span> DarknetBlock<span class="token punctuation">(</span><span class="token punctuation">[</span>            <span class="token punctuation">&#123;</span><span class="token string">'id'</span><span class="token punctuation">:</span> <span class="token string">'layer_99'</span><span class="token punctuation">,</span> <span class="token string">'in_channels'</span><span class="token punctuation">:</span> <span class="token number">384</span><span class="token punctuation">,</span> <span class="token string">'out_channels'</span><span class="token punctuation">:</span> <span class="token number">128</span><span class="token punctuation">,</span> <span class="token string">'kernel_size'</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">'stride'</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">'padding'</span> <span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">'bnorm'</span><span class="token punctuation">:</span> <span class="token boolean">True</span><span class="token punctuation">,</span> <span class="token string">'leaky'</span><span class="token punctuation">:</span> <span class="token boolean">True</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token punctuation">&#123;</span><span class="token string">'id'</span><span class="token punctuation">:</span> <span class="token string">'layer_100'</span><span class="token punctuation">,</span> <span class="token string">'in_channels'</span><span class="token punctuation">:</span> <span class="token number">128</span><span class="token punctuation">,</span> <span class="token string">'out_channels'</span><span class="token punctuation">:</span> <span class="token number">256</span><span class="token punctuation">,</span> <span class="token string">'kernel_size'</span><span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token string">'stride'</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">'padding'</span> <span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">'bnorm'</span><span class="token punctuation">:</span> <span class="token boolean">True</span><span class="token punctuation">,</span> <span class="token string">'leaky'</span><span class="token punctuation">:</span> <span class="token boolean">True</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token punctuation">&#123;</span><span class="token string">'id'</span><span class="token punctuation">:</span> <span class="token string">'layer_101'</span><span class="token punctuation">,</span> <span class="token string">'in_channels'</span><span class="token punctuation">:</span> <span class="token number">256</span><span class="token punctuation">,</span> <span class="token string">'out_channels'</span><span class="token punctuation">:</span> <span class="token number">128</span><span class="token punctuation">,</span> <span class="token string">'kernel_size'</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">'stride'</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">'padding'</span> <span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">'bnorm'</span><span class="token punctuation">:</span> <span class="token boolean">True</span><span class="token punctuation">,</span> <span class="token string">'leaky'</span><span class="token punctuation">:</span> <span class="token boolean">True</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token punctuation">&#123;</span><span class="token string">'id'</span><span class="token punctuation">:</span> <span class="token string">'layer_102'</span><span class="token punctuation">,</span> <span class="token string">'in_channels'</span><span class="token punctuation">:</span> <span class="token number">128</span><span class="token punctuation">,</span> <span class="token string">'out_channels'</span><span class="token punctuation">:</span> <span class="token number">256</span><span class="token punctuation">,</span> <span class="token string">'kernel_size'</span><span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token string">'stride'</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">'padding'</span> <span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">'bnorm'</span><span class="token punctuation">:</span> <span class="token boolean">True</span><span class="token punctuation">,</span> <span class="token string">'leaky'</span><span class="token punctuation">:</span> <span class="token boolean">True</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token punctuation">&#123;</span><span class="token string">'id'</span><span class="token punctuation">:</span> <span class="token string">'layer_103'</span><span class="token punctuation">,</span> <span class="token string">'in_channels'</span><span class="token punctuation">:</span> <span class="token number">256</span><span class="token punctuation">,</span> <span class="token string">'out_channels'</span><span class="token punctuation">:</span> <span class="token number">128</span><span class="token punctuation">,</span> <span class="token string">'kernel_size'</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">'stride'</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">'padding'</span> <span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">'bnorm'</span><span class="token punctuation">:</span> <span class="token boolean">True</span><span class="token punctuation">,</span> <span class="token string">'leaky'</span><span class="token punctuation">:</span> <span class="token boolean">True</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token punctuation">&#123;</span><span class="token string">'id'</span><span class="token punctuation">:</span> <span class="token string">'layer_104'</span><span class="token punctuation">,</span> <span class="token string">'in_channels'</span><span class="token punctuation">:</span> <span class="token number">128</span><span class="token punctuation">,</span> <span class="token string">'out_channels'</span><span class="token punctuation">:</span> <span class="token number">256</span><span class="token punctuation">,</span> <span class="token string">'kernel_size'</span><span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token string">'stride'</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">'padding'</span> <span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">'bnorm'</span><span class="token punctuation">:</span> <span class="token boolean">True</span><span class="token punctuation">,</span> <span class="token string">'leaky'</span><span class="token punctuation">:</span> <span class="token boolean">True</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token punctuation">&#123;</span><span class="token string">'id'</span><span class="token punctuation">:</span> <span class="token string">'layer_105'</span><span class="token punctuation">,</span> <span class="token string">'in_channels'</span><span class="token punctuation">:</span> <span class="token number">256</span><span class="token punctuation">,</span> <span class="token string">'out_channels'</span><span class="token punctuation">:</span> <span class="token number">255</span><span class="token punctuation">,</span> <span class="token string">'kernel_size'</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">'stride'</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">'padding'</span> <span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">'bnorm'</span><span class="token punctuation">:</span> <span class="token boolean">False</span><span class="token punctuation">,</span> <span class="token string">'leaky'</span><span class="token punctuation">:</span> <span class="token boolean">False</span><span class="token punctuation">&#125;</span>        <span class="token punctuation">]</span><span class="token punctuation">,</span> skip <span class="token operator">=</span> <span class="token boolean">False</span><span class="token punctuation">)</span>            <span class="token keyword">def</span> <span class="token function">forward</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> x<span class="token punctuation">)</span><span class="token punctuation">:</span>        x <span class="token operator">=</span> self<span class="token punctuation">.</span>blocks<span class="token punctuation">[</span><span class="token string">'block0_4'</span><span class="token punctuation">]</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span>        x <span class="token operator">=</span> self<span class="token punctuation">.</span>blocks<span class="token punctuation">[</span><span class="token string">'block5_8'</span><span class="token punctuation">]</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span>        x <span class="token operator">=</span> self<span class="token punctuation">.</span>blocks<span class="token punctuation">[</span><span class="token string">'block9_11'</span><span class="token punctuation">]</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span>        x <span class="token operator">=</span> self<span class="token punctuation">.</span>blocks<span class="token punctuation">[</span><span class="token string">'block12_15'</span><span class="token punctuation">]</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span>        x <span class="token operator">=</span> self<span class="token punctuation">.</span>blocks<span class="token punctuation">[</span><span class="token string">'block16_18'</span><span class="token punctuation">]</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span>        x <span class="token operator">=</span> self<span class="token punctuation">.</span>blocks<span class="token punctuation">[</span><span class="token string">'block19_21'</span><span class="token punctuation">]</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span>        x <span class="token operator">=</span> self<span class="token punctuation">.</span>blocks<span class="token punctuation">[</span><span class="token string">'block22_24'</span><span class="token punctuation">]</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span>        x <span class="token operator">=</span> self<span class="token punctuation">.</span>blocks<span class="token punctuation">[</span><span class="token string">'block25_27'</span><span class="token punctuation">]</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span>        x <span class="token operator">=</span> self<span class="token punctuation">.</span>blocks<span class="token punctuation">[</span><span class="token string">'block28_30'</span><span class="token punctuation">]</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span>        x <span class="token operator">=</span> self<span class="token punctuation">.</span>blocks<span class="token punctuation">[</span><span class="token string">'block31_33'</span><span class="token punctuation">]</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span>        x <span class="token operator">=</span> self<span class="token punctuation">.</span>blocks<span class="token punctuation">[</span><span class="token string">'block34_36'</span><span class="token punctuation">]</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span>        skip36 <span class="token operator">=</span> x        x <span class="token operator">=</span> self<span class="token punctuation">.</span>blocks<span class="token punctuation">[</span><span class="token string">'block37_40'</span><span class="token punctuation">]</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span>        x <span class="token operator">=</span> self<span class="token punctuation">.</span>blocks<span class="token punctuation">[</span><span class="token string">'block41_43'</span><span class="token punctuation">]</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span>        x <span class="token operator">=</span> self<span class="token punctuation">.</span>blocks<span class="token punctuation">[</span><span class="token string">'block44_46'</span><span class="token punctuation">]</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span>        x <span class="token operator">=</span> self<span class="token punctuation">.</span>blocks<span class="token punctuation">[</span><span class="token string">'block47_49'</span><span class="token punctuation">]</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span>        x <span class="token operator">=</span> self<span class="token punctuation">.</span>blocks<span class="token punctuation">[</span><span class="token string">'block50_52'</span><span class="token punctuation">]</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span>        x <span class="token operator">=</span> self<span class="token punctuation">.</span>blocks<span class="token punctuation">[</span><span class="token string">'block53_55'</span><span class="token punctuation">]</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span>        x <span class="token operator">=</span> self<span class="token punctuation">.</span>blocks<span class="token punctuation">[</span><span class="token string">'block56_58'</span><span class="token punctuation">]</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span>        x <span class="token operator">=</span> self<span class="token punctuation">.</span>blocks<span class="token punctuation">[</span><span class="token string">'block59_61'</span><span class="token punctuation">]</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span>        skip61 <span class="token operator">=</span> x        x <span class="token operator">=</span> self<span class="token punctuation">.</span>blocks<span class="token punctuation">[</span><span class="token string">'block62_65'</span><span class="token punctuation">]</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span>        x <span class="token operator">=</span> self<span class="token punctuation">.</span>blocks<span class="token punctuation">[</span><span class="token string">'block66_68'</span><span class="token punctuation">]</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span>        x <span class="token operator">=</span> self<span class="token punctuation">.</span>blocks<span class="token punctuation">[</span><span class="token string">'block69_71'</span><span class="token punctuation">]</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span>        x <span class="token operator">=</span> self<span class="token punctuation">.</span>blocks<span class="token punctuation">[</span><span class="token string">'block72_74'</span><span class="token punctuation">]</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span>        x <span class="token operator">=</span> self<span class="token punctuation">.</span>blocks<span class="token punctuation">[</span><span class="token string">'block75_79'</span><span class="token punctuation">]</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span>        yolo_82 <span class="token operator">=</span> self<span class="token punctuation">.</span>blocks<span class="token punctuation">[</span><span class="token string">'yolo_82'</span><span class="token punctuation">]</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span>        x <span class="token operator">=</span> self<span class="token punctuation">.</span>blocks<span class="token punctuation">[</span><span class="token string">'block83_86'</span><span class="token punctuation">]</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span>        x <span class="token operator">=</span> self<span class="token punctuation">.</span>upsample<span class="token punctuation">(</span>x<span class="token punctuation">)</span>        x <span class="token operator">=</span> torch<span class="token punctuation">.</span>cat<span class="token punctuation">(</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> skip61<span class="token punctuation">)</span><span class="token punctuation">,</span> dim <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">)</span>        x <span class="token operator">=</span> self<span class="token punctuation">.</span>blocks<span class="token punctuation">[</span><span class="token string">'block87_91'</span><span class="token punctuation">]</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span>        yolo_94 <span class="token operator">=</span> self<span class="token punctuation">.</span>blocks<span class="token punctuation">[</span><span class="token string">'yolo_94'</span><span class="token punctuation">]</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span>        x <span class="token operator">=</span> self<span class="token punctuation">.</span>blocks<span class="token punctuation">[</span><span class="token string">'block95_98'</span><span class="token punctuation">]</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span>        x <span class="token operator">=</span> self<span class="token punctuation">.</span>upsample<span class="token punctuation">(</span>x<span class="token punctuation">)</span>        x <span class="token operator">=</span> torch<span class="token punctuation">.</span>cat<span class="token punctuation">(</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> skip36<span class="token punctuation">)</span><span class="token punctuation">,</span> dim <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">)</span>        yolo_106 <span class="token operator">=</span> self<span class="token punctuation">.</span>blocks<span class="token punctuation">[</span><span class="token string">'yolo_106'</span><span class="token punctuation">]</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span>        <span class="token keyword">return</span> yolo_82<span class="token punctuation">,</span> yolo_94<span class="token punctuation">,</span> yolo_106  <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="Weidht-File的读取"><a href="#Weidht-File的读取" class="headerlink" title="Weidht File的读取"></a>Weidht File的读取</h2><p>官方给出的预训练权重文件中去掉前 5 个数值，剩下的才是可以加载到模型里面的。需要注意权重文件中参数的保存格式，这里给出官方提供的一张图：</p><p><img src="/../../../images/v2-9b9a6369a946a4307c56b446a34427c5_720w.webp" alt="img"></p><p>它是按照层的前向传播顺序来存储参数数值的。如果 DarkNet 层中有 BN 层，则依次存储 BN 的偏置，权重，均值，方差以及卷积层的权重。如果 DarkNet 层中没有 BN 层，则依次存储卷积层的偏置，卷积层的权重。</p><hr><p>对于 BN 层，它的偏置和权重是可训练参数，而均值和方差是不可训练参数，但都需要加载到网络里</p><hr>]]></content>
      
      
      <categories>
          
          <category> 深度学习 </category>
          
          <category> 目标检测 </category>
          
          <category> 论文 </category>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 深度学习 </tag>
            
            <tag> 学习 </tag>
            
            <tag> 目标检测 </tag>
            
            <tag> 论文 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2022/11/28/%E5%A4%A7%E5%9B%9B%E4%B8%8A%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0/%E7%9F%A5%E8%AF%86%E7%82%B9%E5%AD%A6%E4%B9%A0/%E9%9D%A2%E8%AF%95%E5%AE%89%E6%8E%92/"/>
      <url>/2022/11/28/%E5%A4%A7%E5%9B%9B%E4%B8%8A%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0/%E7%9F%A5%E8%AF%86%E7%82%B9%E5%AD%A6%E4%B9%A0/%E9%9D%A2%E8%AF%95%E5%AE%89%E6%8E%92/</url>
      
        <content type="html"><![CDATA[<p>南区 新区！！10个左右</p><p>面试：是否在群里面，约他面试</p><p>数学成绩等</p><p>1、自我介绍：围绕报名表的内容进行自我介绍（3分钟以内，主要是数学成绩、语言表达能力和综合素质方面）</p><p>2、题目讲解（2-3分钟）</p><p><img src="F:\博客\floder\source\images@W0@}4VTK{Q3AH6]DY}T8D.png" alt="img"></p><p>3、简单问答环节</p><ul><li>周五周六晚上一般有时间吗</li><li>有教书的经验吗，觉得讲题目比较清楚吗</li><li>高数的知识现在掌握的怎么样</li><li>会服从学院管理安排吗</li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>目标检测mAP和ROI</title>
      <link href="/2022/11/27/%E5%A4%A7%E5%9B%9B%E4%B8%8A%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0/%E7%9F%A5%E8%AF%86%E7%82%B9%E5%AD%A6%E4%B9%A0/%E7%9B%AE%E6%A0%87%E6%A3%80%E6%B5%8BmAP/"/>
      <url>/2022/11/27/%E5%A4%A7%E5%9B%9B%E4%B8%8A%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0/%E7%9F%A5%E8%AF%86%E7%82%B9%E5%AD%A6%E4%B9%A0/%E7%9B%AE%E6%A0%87%E6%A3%80%E6%B5%8BmAP/</url>
      
        <content type="html"><![CDATA[<p>参考来源：</p><p><a href="https://www.zhihu.com/question/53405779">(55 封私信 &#x2F; 80 条消息) 目标检测中的mAP是什么含义？ - 知乎 (zhihu.com)</a></p>]]></content>
      
      
      <categories>
          
          <category> 深度学习 </category>
          
          <category> 目标检测 </category>
          
          <category> 论文 </category>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 深度学习 </tag>
            
            <tag> 学习 </tag>
            
            <tag> 目标检测 </tag>
            
            <tag> 论文 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>反卷积</title>
      <link href="/2022/11/24/%E5%A4%A7%E5%9B%9B%E4%B8%8A%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0/%E7%9F%A5%E8%AF%86%E7%82%B9%E5%AD%A6%E4%B9%A0/%E8%BD%AC%E7%BD%AE%E5%8D%B7%E7%A7%AF%E7%9A%84%E7%90%86%E8%A7%A3/"/>
      <url>/2022/11/24/%E5%A4%A7%E5%9B%9B%E4%B8%8A%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0/%E7%9F%A5%E8%AF%86%E7%82%B9%E5%AD%A6%E4%B9%A0/%E8%BD%AC%E7%BD%AE%E5%8D%B7%E7%A7%AF%E7%9A%84%E7%90%86%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<p>前提：在李沐中运用到了转置卷积有些不太理解，因此来研究一下。</p><p><a href="https://zh-v2.d2l.ai/chapter_computer-vision/fcn.html">13.11. 全卷积网络 — 动手学深度学习 2.0.0-beta1 documentation (d2l.ai)</a></p><p>参考：</p><p><a href="https://zhuanlan.zhihu.com/p/115070523">转置卷积(Transpose Convolution) - 知乎 (zhihu.com)</a></p><p>计算公式推导，其实很简单，因为反卷积相当于是卷积的逆过程，因此只需要把公式逆推就行了</p><p>$$ o &#x3D; (i +2p-k)&#x2F;s+1$$</p><p>$$i&#x3D;(o+1)*s+k-2p$$</p>]]></content>
      
      
      <categories>
          
          <category> 深度学习 </category>
          
          <category> 目标检测 </category>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 深度学习 </tag>
            
            <tag> 学习 </tag>
            
            <tag> 目标检测 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网站视频下载方法</title>
      <link href="/2022/11/19/%E6%8A%80%E5%B7%A7/%E7%BD%91%E7%AB%99%E8%A7%86%E9%A2%91%E4%B8%8B%E8%BD%BD%E6%96%B9%E6%B3%95/"/>
      <url>/2022/11/19/%E6%8A%80%E5%B7%A7/%E7%BD%91%E7%AB%99%E8%A7%86%E9%A2%91%E4%B8%8B%E8%BD%BD%E6%96%B9%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<p>参考链接：</p><p>[(55 封私信 &#x2F; 80 条消息) 如何把网页视频下载到电脑上？ - 知乎 (zhihu.com)](<a href="https://www.zhihu.com/question/427720670#:~:text=%E5%A6%82%E4%BD%95%E6%8A%8A%E7%BD%91%E9%A1%B5%E8%A7%86%E9%A2%91%E4%B8%8B%E8%BD%BD%E5%88%B0%E7%94%B5%E8%84%91%E4%B8%8A%EF%BC%9F">https://www.zhihu.com/question/427720670#:~:text=如何把网页视频下载到电脑上？</a> 1 1、审查元素下载 2 2、硕鼠,3 3、插件工具-flash video downloader 4 4、迅捷屏幕录像工具-录制视频)</p>]]></content>
      
      
      <categories>
          
          <category> 生活 </category>
          
          <category> 技巧 </category>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生活 </tag>
            
            <tag> 技巧 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>吉他和弦</title>
      <link href="/2022/11/19/%E7%94%9F%E6%B4%BB/%E5%90%89%E4%BB%96%E5%92%8C%E5%BC%A6/"/>
      <url>/2022/11/19/%E7%94%9F%E6%B4%BB/%E5%90%89%E4%BB%96%E5%92%8C%E5%BC%A6/</url>
      
        <content type="html"><![CDATA[<p>参考链接：</p><p><a href="https://www.bilibili.com/video/BV1534y1v729/?spm_id_from=333.337.search-card.all.click&vd_source=6eec2f14c9cf0fcea00a0d29ba245c79">【超详细-入门必看防弯路】吉他如何正确按和弦 左手和弦基础姿势16种常用和弦具体按法练习 提高练琴效率 吉他和弦怎么按教学 吉他基本功正确爬格子手型姿势 进步快_哔哩哔哩_bilibili</a></p><h3 id="C和弦"><a href="#C和弦" class="headerlink" title="C和弦"></a>C和弦</h3><p><img src="/../../images/image-20221122170725324.png" alt="image-20221122170725324"></p><ul><li>食指中指靠在一起</li></ul><h3 id="Cmaj7"><a href="#Cmaj7" class="headerlink" title="Cmaj7"></a>Cmaj7</h3><p><img src="/../../images/image-20221122170759830.png" alt="image-20221122170759830"></p><ul><li>中指无名指靠在一起</li></ul><h3 id="Cadd9"><a href="#Cadd9" class="headerlink" title="Cadd9"></a>Cadd9</h3><p><img src="/../../images/image-20221122171158708.png" alt="image-20221122171158708"></p><ul><li>三手指靠在一起</li></ul><h3 id="Dm"><a href="#Dm" class="headerlink" title="Dm"></a>Dm</h3><p><img src="/../../images/image-20221122171434077.png" alt="image-20221122171434077"></p><ul><li>小指可换成无名指</li><li>三个靠在一起，食指可以不靠</li></ul><h3 id="D"><a href="#D" class="headerlink" title="D"></a>D</h3><p><img src="/../../images/image-20221122185900379.png" alt="image-20221122185900379"></p><p>三指靠在一起，如果食指指肚碰到了，立起来一点</p><h3 id="D7"><a href="#D7" class="headerlink" title="D7"></a>D7</h3><p><img src="/../../images/image-20221122190141720.png" alt="image-20221122190141720"></p><p>整个往左移，</p>]]></content>
      
      
      <categories>
          
          <category> 生活 </category>
          
          <category> 吉他 </category>
          
          <category> 和弦 </category>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生活 </tag>
            
            <tag> 吉他 </tag>
            
            <tag> 和弦 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>目标检测论文阅读</title>
      <link href="/2022/11/19/%E5%A4%A7%E5%9B%9B%E4%B8%8A%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0/%E8%AE%BA%E6%96%87/%E7%9B%AE%E6%A0%87%E6%A3%80%E6%B5%8B%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/"/>
      <url>/2022/11/19/%E5%A4%A7%E5%9B%9B%E4%B8%8A%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0/%E8%AE%BA%E6%96%87/%E7%9B%AE%E6%A0%87%E6%A3%80%E6%B5%8B%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/</url>
      
        <content type="html"><![CDATA[<p>参考文献：</p><p><a href="https://cloud.tencent.com/developer/article/1685055">入门分享 | 12篇深度学习目标检测必读论文 - 腾讯云开发者社区-腾讯云 (tencent.com)</a></p><p><a href="https://laptrinhx.com/10-papers-you-should-read-to-understand-image-classification-in-the-deep-learning-era-787400114/">10 Papers You Should Read to Understand Image Classification in the Deep Learning Era | LaptrinhX</a></p><p>阅读顺序：</p><h2 id="2013：OverFeat"><a href="#2013：OverFeat" class="headerlink" title="2013：OverFeat"></a><strong>2013：OverFeat</strong></h2><h2 id="OverFeat-使用卷积网络集成识别、定位和检测"><a href="#OverFeat-使用卷积网络集成识别、定位和检测" class="headerlink" title="OverFeat: 使用卷积网络集成识别、定位和检测"></a><strong>OverFeat: 使用卷积网络集成识别、定位和检测</strong></h2><p>OverFeat: Integrated Recognition, Localization and Detection using Convolutional Networks</p><h2 id="2013-R-CNN"><a href="#2013-R-CNN" class="headerlink" title="2013: R-CNN"></a><strong>2013: R-CNN</strong></h2><h2 id="基于区域卷积网络的精确目标检测和分割"><a href="#基于区域卷积网络的精确目标检测和分割" class="headerlink" title="基于区域卷积网络的精确目标检测和分割"></a><strong>基于区域卷积网络的精确目标检测和分割</strong></h2><p>Region-based Convolutional Networks for Accurate Object Detection and Segmentation</p><h2 id="2015-Fast-R-CNN"><a href="#2015-Fast-R-CNN" class="headerlink" title="2015: Fast R-CNN"></a><strong>2015: Fast R-CNN</strong></h2><h2 id="Fast-R-CNN"><a href="#Fast-R-CNN" class="headerlink" title="Fast R-CNN"></a><strong>Fast R-CNN</strong></h2><p>Spatial Pyramid Pooling in Deep Convolutional Networks for Visual Recognition</p><h2 id="2015-YOLO-v1"><a href="#2015-YOLO-v1" class="headerlink" title="2015: YOLO v1"></a><strong>2015: YOLO v1</strong></h2><h2 id="你只看一次-统一，实时的目标检测"><a href="#你只看一次-统一，实时的目标检测" class="headerlink" title="你只看一次: 统一，实时的目标检测"></a><strong>你只看一次: 统一，实时的目标检测</strong></h2><p>You Only Look Once: Unified, Real-Time Object Detection</p><h2 id="2015-SSD"><a href="#2015-SSD" class="headerlink" title="2015: SSD"></a><strong>2015: SSD</strong></h2><h2 id="SSD-单发多框检测器"><a href="#SSD-单发多框检测器" class="headerlink" title="SSD: 单发多框检测器"></a><strong>SSD: 单发多框检测器</strong></h2><p>SSD: Single Shot MultiBox Detector</p><h2 id="2016-FPN"><a href="#2016-FPN" class="headerlink" title="2016: FPN"></a><strong>2016: FPN</strong></h2><h2 id="目标检测的特色金字塔网络"><a href="#目标检测的特色金字塔网络" class="headerlink" title="目标检测的特色金字塔网络"></a><strong>目标检测的特色金字塔网络</strong></h2><p>“Feature Pyramid Networks for Object Detection”</p><h2 id="2016-YOLO-v2"><a href="#2016-YOLO-v2" class="headerlink" title="2016: YOLO v2"></a><strong>2016: YOLO v2</strong></h2><h2 id="YOLO9000-更好，更快，更强"><a href="#YOLO9000-更好，更快，更强" class="headerlink" title="YOLO9000: 更好，更快，更强"></a><strong>YOLO9000: 更好，更快，更强</strong></h2><p>Batch Normalization: Accelerating Deep Network Training by Reducing Internal Covariate Shift</p><h2 id="2017-RetinaNet"><a href="#2017-RetinaNet" class="headerlink" title="2017: RetinaNet"></a><strong>2017: RetinaNet</strong></h2><h2 id="针对密集目标检测的Focal-Loss"><a href="#针对密集目标检测的Focal-Loss" class="headerlink" title="针对密集目标检测的Focal Loss"></a><strong>针对密集目标检测的Focal Loss</strong></h2><p>Focal Loss for Dense Object Detection</p><h2 id="2018-YOLO-v3"><a href="#2018-YOLO-v3" class="headerlink" title="2018: YOLO v3"></a><strong>2018: YOLO v3</strong></h2><h2 id="YOLOv3-渐进式改进"><a href="#YOLOv3-渐进式改进" class="headerlink" title="YOLOv3: 渐进式改进"></a><strong>YOLOv3: 渐进式改进</strong></h2><p>Dive Really Deep into YOLO v3: A Beginner’s Guide</p>]]></content>
      
      
      <categories>
          
          <category> 深度学习 </category>
          
          <category> 目标检测 </category>
          
          <category> 论文 </category>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 深度学习 </tag>
            
            <tag> 学习 </tag>
            
            <tag> 目标检测 </tag>
            
            <tag> 论文 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>yolo笔记</title>
      <link href="/2022/11/19/%E5%A4%A7%E5%9B%9B%E4%B8%8A%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0/%E8%AE%BA%E6%96%87/yolo%E7%AC%94%E8%AE%B0/"/>
      <url>/2022/11/19/%E5%A4%A7%E5%9B%9B%E4%B8%8A%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0/%E8%AE%BA%E6%96%87/yolo%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<p>参考来源：</p><p><a href="https://blog.csdn.net/weixin_39524959/article/details/111136986">(40条消息) yolov5论文_YOLO算法最全综述：从YOLOv1到YOLOv5_weixin_39524959的博客-CSDN博客</a></p><h1 id="yolo"><a href="#yolo" class="headerlink" title="yolo"></a>yolo</h1><h2 id="作者的方法、创新点"><a href="#作者的方法、创新点" class="headerlink" title="作者的方法、创新点"></a>作者的方法、创新点</h2><p>核心思想：</p><p>将整张图片作为网络的输入（类似于Faster-RCNN），直接在输出层对BBox的位置和类别进行回归。</p><p>训练的方法</p><p>S*S个网格，每个网格预测B个bounding boxes 和 置信度</p><h3 id="实现方法"><a href="#实现方法" class="headerlink" title="实现方法"></a><strong>实现方法</strong></h3><ul><li><p>将一幅图像分成SxS个网格(grid cell)，如果某个object的中心 落在这个网格中，则这个网格就负责预测这个object。</p></li><li><p>每个网络需要预测B个BBox的位置信息和confidence（置信度）信息，一个BBox对应着四个位置信息和一个confidence信息。confidence代表了所预测的box中含有object的置信度和这个box预测的有多准两重信息：</p></li></ul><p><img src="/../../../images/image-20221130110929050.png" alt="image-20221130110929050"></p><p>其中如果有object落在一个grid cell里，第一项取1，否则取0。第二项是预测的bounding box和实际的groundtruth之间的IoU值。</p><ul><li>每个bounding box要预测(x, y, w, h)和confidence共5个值，每个网格还要预测一个类别信息，记为C类。则SxS个网格，每个网格要预测B个bounding box还要预测C个categories。输出就是S x S x (5*B+C)的一个tensor。（<strong>注意：class信息是针对每个网格的，confidence信息是针对每个bounding box的。</strong>）</li><li>举例说明: 在PASCAL VOC中，图像输入为448x448，取S&#x3D;7，B&#x3D;2，一共有20个类别(C&#x3D;20)。则输出就是7x7x30的一个tensor。整个网络结构如下图所示：</li></ul><p><img src="/../../../images/image-20221130111115833.png" alt="image-20221130111115833"></p><ul><li>在test的时候，每个网格预测的class信息和bounding box预测的confidence信息相乘，就得到每个bounding box的class-specific confidence score:</li></ul><p><img src="/../../../images/image-20221130111214240.png" alt="image-20221130111214240"></p><ul><li>得到每个box的class-specific confidence score以后，设置阈值，滤掉得分低的boxes，对保留的boxes进行NMS处理，就得到最终的检测结果。</li></ul><p>非极大抑制李沐老师有讲过</p><p><a href="https://zh-v2.d2l.ai/chapter_computer-vision/anchor.html">13.4. 锚框 — 动手学深度学习 2.0.0-beta1 documentation (d2l.ai)</a></p><h3 id="损失函数"><a href="#损失函数" class="headerlink" title="损失函数"></a><strong>损失函数</strong></h3><p>作者简单粗暴的全部采用了<strong>sum-squared error loss</strong>来做这件事。</p><p><img src="/../../../images/7611cb9d2f002c54170d6b88027a9cd4.png" alt="7611cb9d2f002c54170d6b88027a9cd4.png"></p><p>这个损失函数中：</p><ul><li>只有当某个网格中有object的时候才对classification error进行惩罚。</li><li>只有当某个box predictor对某个ground truth box负责的时候，才会对box的coordinate error进行惩罚，而对哪个ground truth box负责就看其预测值和ground truth box的IoU是不是在那个cell的所有box中最大。</li></ul><h1 id="yolov2"><a href="#yolov2" class="headerlink" title="yolov2"></a>yolov2</h1><h2 id="创新点"><a href="#创新点" class="headerlink" title="创新点"></a>创新点</h2><p><a href="https://blog.csdn.net/qq_40716944/article/details/114822515">(40条消息) YOLO系列详解：YOLOv1、YOLOv2、YOLOv3、YOLOv4、YOLOv5_AI小白一枚的博客-CSDN博客_yolo</a></p><h3 id="Batch-Normalization"><a href="#Batch-Normalization" class="headerlink" title="Batch Normalization"></a><strong>Batch Normalization</strong></h3><p>YOLOv2不再使用dropout，使用Batch Normalization来解决梯度消失和梯度爆炸问题。</p><p>去掉Dropout，而不会产生过拟合。</p><h3 id="High-resolution-classifier"><a href="#High-resolution-classifier" class="headerlink" title="High resolution classifier"></a><strong>High resolution classifier</strong></h3><p>所以目标检测模型通常都<strong>先用图像分类样本训练卷积层，提取图像特征</strong>，但这引出另一个问题，就是图像分类样本的分辨率不是很高。</p><p>所以YOLOv2在采用 224<em>224 图像进行分类模型预训练后，再采用 448</em>448 高分辨率样本对分类模型进行微调（10个epoch），使网络特征逐渐适应 448<em>448 的分辨率。然后再使用 448</em>448 的检测样本进行训练，缓解了分辨率突然切换造成的影响，最终通过使用高分辨率，mAP提升了4%。</p><h3 id="Convolution-with-anchor-boxes"><a href="#Convolution-with-anchor-boxes" class="headerlink" title="Convolution with anchor boxes"></a><strong>Convolution with anchor boxes</strong></h3><p>YOLOv1包含有全连接层，从而能直接预测Bounding Boxes的坐标值。Faster R-CNN算法只用卷积层与Region Proposal Network来预测Anchor Box的偏移值与置信度，而不是直接预测坐标值，YOLOv2作者发现通过预测偏移量而不是坐标值能够简化问题，让神经网络学习起来更容易。</p><p>借鉴Faster RCNN的做法，YOLOv2也尝试采用先验框（anchor）。在每个grid预先设定一组不同大小和宽高比的边框，来覆盖整个图像的不同位置和多种尺度，这些先验框作为预定义的候选区在神经网络中将检测其中是否存在对象，以及微调边框的位置。</p><hr><h3 id="3-2-4-Dimension-clusters"><a href="#3-2-4-Dimension-clusters" class="headerlink" title="3.2.4 Dimension clusters"></a><strong>3.2.4 Dimension clusters</strong></h3><p>之前Anchor Box的尺寸是手动选择的，所以尺寸还有优化的余地。YOLOv2尝试统计出更符合样本中对象尺寸的先验框，这样就可以减少网络微调先验框到实际位置的难度。YOLOv2的做法是对训练集中标注的边框进行K-means聚类分析，以寻找尽可能匹配样本的边框尺寸。</p><h3 id="Direct-location-prediction"><a href="#Direct-location-prediction" class="headerlink" title="Direct location prediction"></a>Direct location prediction</h3><p>用Anchor Box的方法，会让model变得不稳定，尤其是在最开始几次迭代的时候。大多数不稳定因素产生自预测Box的(x,y)位置的时候。按照之前YOLOv1的方法，网络不会预测偏移量，而是根据YOLOv1中的网格单元的位置来直接预测坐标，这就让Ground Truth的值介于0到1之间。而为了让网络的结果能落在这一范围内，网络使用一个 Logistic Activation来对于网络预测结果进行限制，让结果介于0到1之间。 网络在每一个网格单元中预测出5个Bounding Boxes，每个Bounding Boxes有五个坐标值tx，ty，tw，th，t0，他们的关系见下图。假设一个网格单元对于图片左上角的偏移量是cx，cy，Bounding Boxes Prior的宽度和高度是pw，ph，那么预测的结果见下图右面的公式：<br><img src="/../../../images/image-20221201205011105.png" alt="image-20221201205011105"></p><p>反正就是用偏移的方法来实现原来的直接用坐标。</p><h3 id="Fine-Grained-Features"><a href="#Fine-Grained-Features" class="headerlink" title="Fine-Grained Features"></a><strong>Fine-Grained Features</strong></h3><p>目标检测面临的一个问题是图像中的需要检测的目标会有大有小，输入图像经过多层网络提取特征，最后输出的特征图中（比如YOLOv2中输入416<em>416经过卷积网络下采样最后输出是13</em>13），较小的对象可能特征已经不明显甚至被忽略掉了。为了更好的检测出一些比较小的对象，最后输出的特征图需要保留一些更细节的信息。于是YOLOv2引入一种称为passthrough层的方法在特征图中保留一些细节信息。<br><img src="/../../../images/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNzE2OTQ0,size_16,color_FFFFFF,t_70.png" alt="img"></p><h3 id="Multi-ScaleTraining"><a href="#Multi-ScaleTraining" class="headerlink" title="Multi-ScaleTraining"></a><strong>Multi-ScaleTraining</strong></h3><p>作者希望YOLOv2能健壮的运行于不同尺寸的图片之上，所以把这一想法用于训练model中。区别于之前的补全图片的尺寸的方法，YOLOv2每迭代几次都会改变网络参数。每10个Batch，网络会随机地选择一个新的图片尺寸，由于使用了下采样参数是32，所以不同的尺寸大小也选择为32的倍数{320，352…..608}，最小320<em>320，最大608</em>608，网络会自动改变尺寸，并继续训练的过程。这一政策让网络在不同的输入尺寸上都能达到一个很好的预测效果，同一网络能在不同分辨率上进行检测。当输入图片尺寸比较小的时候跑的比较快，输入图片尺寸比较大的时候精度高，所以你可以在YOLOv2的速度和精度上进行权衡。</p><h2 id="YOLOv4"><a href="#YOLOv4" class="headerlink" title="YOLOv4"></a>YOLOv4</h2><p><a href="https://zhuanlan.zhihu.com/p/342570549">YOLOv4 介绍及其模型优化方法 - 知乎 (zhihu.com)</a></p>]]></content>
      
      
      <categories>
          
          <category> 深度学习 </category>
          
          <category> 目标检测 </category>
          
          <category> 论文 </category>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 深度学习 </tag>
            
            <tag> 学习 </tag>
            
            <tag> 目标检测 </tag>
            
            <tag> 论文 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2022/11/17/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%AD%A6%E4%B9%A0/github/github%E6%9C%AC%E5%9C%B0%E5%AF%BC%E5%85%A5/"/>
      <url>/2022/11/17/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%AD%A6%E4%B9%A0/github/github%E6%9C%AC%E5%9C%B0%E5%AF%BC%E5%85%A5/</url>
      
        <content type="html"><![CDATA[<p>参考来源：</p><p><a href="https://www.bilibili.com/video/BV1qp411R7md/?spm_id_from=333.337.search-card.all.click&vd_source=6eec2f14c9cf0fcea00a0d29ba245c79">【github】本地文件上传到github_哔哩哔哩_bilibili</a></p><p>git学习的网站</p><p><a href="https://www.liaoxuefeng.com/wiki/896043488029600/896202780297248">集中式vs分布式 - 廖雪峰的官方网站 (liaoxuefeng.com)</a></p><p>首先默认已经下载好git和github desktop</p><h1 id="本地建立自己的仓库并上传"><a href="#本地建立自己的仓库并上传" class="headerlink" title="本地建立自己的仓库并上传"></a>本地建立自己的仓库并上传</h1><p>打开github desktop，创建一个新的仓库</p><p><img src="/../../../images/image-20221117191919145.png" alt="image-20221117191919145"></p><p>然后输入信息，path就是本地仓库的位置。一般来说README也勾上。</p><p><img src="/../../../images/image-20221117192011620.png" alt="image-20221117192011620"></p><p>接下来找到对应创建的文件夹，加入想要放进去的文件，可以的话也修改一下readme。</p><p><img src="/../../../images/image-20221117192112859.png" alt="image-20221117192112859"></p><p>接下来输入一些信息，按commit就可以把本地的文件提交到本地的github desktop</p><p><img src="/../../../images/image-20221117192200360.png" alt="image-20221117192200360"></p><p>然后点击，提交</p><p><img src="/../../../images/image-20221117192253933.png" alt="image-20221117192253933"></p><h1 id="本地修改后更新"><a href="#本地修改后更新" class="headerlink" title="本地修改后更新"></a>本地修改后更新</h1><h2 id="在github-desktop修改"><a href="#在github-desktop修改" class="headerlink" title="在github desktop修改"></a>在github desktop修改</h2><p>在本地的文件修改完后，这里会显示changes，然后点击上面的fetch（如上图）即可。</p><p><img src="/../../../images/image-20221117192416802.png" alt="image-20221117192416802"></p><h2 id="用git修改"><a href="#用git修改" class="headerlink" title="用git修改"></a>用git修改</h2><p>具体参见这篇博客。</p><p><a href="https://zhuanlan.zhihu.com/p/407966596">如何使用git 把本地代码更新到GitHub上 - 知乎 (zhihu.com)</a></p>]]></content>
      
      
      <categories>
          
          <category> github </category>
          
          <category> 计算机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计算机 </tag>
            
            <tag> github </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2022/11/09/%E7%94%9F%E6%B4%BB/%E5%AD%90%E5%BC%B9%E7%AC%94%E8%AE%B0%E5%AD%A6%E4%B9%A0/"/>
      <url>/2022/11/09/%E7%94%9F%E6%B4%BB/%E5%AD%90%E5%BC%B9%E7%AC%94%E8%AE%B0%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<p>官网：</p><p><a href="https://bulletjournal.com/">Bullet Journal</a></p><p><img src="/../../images/%E8%87%AA%E5%BE%8B%E7%94%B7%E4%BA%BA%E7%9A%84%E5%85%BB%E6%88%90%E8%AE%A1%E5%88%92.png" alt="自律男人的养成计划"></p>]]></content>
      
      
      <categories>
          
          <category> 生活 </category>
          
          <category> 学习 </category>
          
          <category> 子弹笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生活 </tag>
            
            <tag> 学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2022/11/09/%E7%94%9F%E6%B4%BB/%E8%87%AA%E5%B7%B1%E7%9A%84%E6%94%B6%E8%97%8F/"/>
      <url>/2022/11/09/%E7%94%9F%E6%B4%BB/%E8%87%AA%E5%B7%B1%E7%9A%84%E6%94%B6%E8%97%8F/</url>
      
        <content type="html"><![CDATA[<p>官网：</p><h1 id="学习"><a href="#学习" class="headerlink" title="学习"></a>学习</h1><h2 id="资料"><a href="#资料" class="headerlink" title="资料"></a>资料</h2><p><a href="https://www.kkdaxue.com/">首页 - 框框大学 (kkdaxue.com)</a></p><ul><li>各大高校的评论信息</li></ul><p><a href="https://github.com/XiangLinPro/IT_book#Linux">XiangLinPro&#x2F;IT_book: 本项目收藏这些年来看过或者听过的一些不错的常用的上千本书籍，没准你想找的书就在这里呢，包含了互联网行业大多数书籍和面试经验题目等等。有人工智能系列（常用深度学习框架TensorFlow、pytorch、keras。NLP、机器学习，深度学习等等），大数据系列(Spark,Hadoop,Scala,kafka等)，程序员必修系列（C、C++、java、数据结构、linux，设计模式、数据库等等） (github.com)</a></p><ul><li><p>一堆书</p></li><li><p>清华ppt模板</p></li></ul><p><a href="https://github.com/atomiechen/THU-PPT-Theme">atomiechen&#x2F;THU-PPT-Theme: 清华主题PPT模板 (github.com)</a></p>]]></content>
      
      
      <categories>
          
          <category> 生活 </category>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生活 </tag>
            
            <tag> 学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2022/11/09/%E5%A4%A7%E5%9B%9B%E4%B8%8A%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0/cs231n&amp;lecture10/"/>
      <url>/2022/11/09/%E5%A4%A7%E5%9B%9B%E4%B8%8A%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0/cs231n&amp;lecture10/</url>
      
        <content type="html"><![CDATA[<p>参考来源：</p><p><a href="https://www.bilibili.com/video/BV1nJ411z7fe?p=15&spm_id_from=pageDriver&vd_source=6eec2f14c9cf0fcea00a0d29ba245c79">【15】7 训练神经网络(下)-更好地优化_哔哩哔哩_bilibili</a></p><p><a href="http://cs231n.stanford.edu/slides/2017/cs231n_2017_lecture10.pdf">cs231n_2017_lecture10.pdf (stanford.edu)</a></p>]]></content>
      
      
      <categories>
          
          <category> 深度学习 </category>
          
          <category> cs231n </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 深度学习 </tag>
            
            <tag> cs231n </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2022/11/09/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%AD%A6%E4%B9%A0/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/"/>
      <url>/2022/11/09/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%AD%A6%E4%B9%A0/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/</url>
      
        <content type="html"><![CDATA[<p>参考来源：</p><p><a href="https://www.bilibili.com/video/BV1cW4y1q7ua?p=1&vd_source=6eec2f14c9cf0fcea00a0d29ba245c79">1.1+1.2 计算机图形学、其研究内容及其相关领域与学科_哔哩哔哩_bilibili</a></p><h1 id="绪论"><a href="#绪论" class="headerlink" title="绪论"></a>绪论</h1><ul><li>计算机图形学</li></ul><p>是研究怎么用计算机<strong>输入、生成、存储、显示、输出</strong>图形的一门学科</p><ul><li><p>构成图形的要素</p><p>几何要素：形状</p><p>非几何要素：纹理、颜色</p></li><li><p>图形在计算机中的表示：</p><p>点阵法（图像）</p><p>参数法（图形），用图形的<strong>图像参数</strong>和<strong>属性参数</strong>来表示图形</p></li><li><p>具体的研究内容：</p><p>图形硬件、计算机动画、虚拟现实、光栅图形生成算法、图形交互技术</p></li><li><p>应用：</p><p>计算机辅助设计与制造（CAD、CAM）</p><p>计算机动画</p><p>游戏</p></li><li><p>相关的领域学科：</p><ol><li>数字图像处理</li><li>模式识别</li><li>计算机视觉</li><li>计算机辅助几何设计</li></ol></li></ul><p><img src="/../../images/image-20221115201331537.png" alt="image-20221115201331537"></p><h3 id="图形的显示设备（CRT）"><a href="#图形的显示设备（CRT）" class="headerlink" title="图形的显示设备（CRT）"></a>图形的显示设备（CRT）</h3><p>CRT是光栅扫描显示器的显示部件，其功能与电视机的显像管类似，主要是由<strong>电子枪</strong>、聚焦系统、<strong>偏转系统</strong>、<strong>荧光粉层（荧光屏）</strong>和玻璃外壳五大部分组成</p><p><img src="/../../images/image-20221115203324896.png" alt="image-20221115203324896"></p><p>注意单位<strong>位</strong>，1B（Byte）&#x3D;8bit（位），1MB&#x3D;1024<em>1024*<em>B</em></em></p><p>光栅扫描显示器是画点设备，可看作是一个点阵单元发生器，并可控制每个点阵单元的亮度，这些点阵单元被称为<strong>像素</strong></p><p><strong>扫描线</strong>光栅显示器为了在能整个屏幕上显示出图形，电子束需要从屏幕的左上角开始，沿着水平方向从左至右匀速地扫描，一直扫描到屏幕的右下角，显示出一帧图像。</p><p>每个像素的颜色只用一位（Bit）此时帧缓冲器只有一个<strong>位面</strong>。<strong>黑白显示器</strong></p><p>如果每个像素的颜色可以用一个字节（Byte）表示，帧缓冲器需要用八个位面，可表示256种灰度，称为<strong>灰度显示器</strong>。</p><p>计算公式$V \leq M<em>N</em>q,q&#x3D;1 ,8,24$</p><p>R、G、B三原色混合表示各对应一把电子枪，每种颜色可有256种亮度,组合起来就是$2^{24}$<strong>彩色显示器</strong></p><p><strong>帧缓冲</strong>：射进来的位置（位面的位置），储存像素点的颜色信息</p><p><strong>索引表</strong>:可把帧缓冲中的位面号作为颜色索引表的索引号，为每组原色配置一个颜色索引表，颜色索引表有256项。存储像素色彩的代码。</p><p><strong>显示控制器</strong>：读出像素的位置坐标（x，y）和颜色值Color，地址寄存器-&gt;翻译为模拟信号</p><p>将电子束偏转到像素x，y的地址，并以Color指定的颜色强度轰击荧光屏，生成图像</p><h3 id="图形软件标准的形成"><a href="#图形软件标准的形成" class="headerlink" title="图形软件标准的形成"></a>图形软件标准的形成</h3><table><thead><tr><th>年份</th><th>公司</th><th>名称</th><th>特点</th></tr></thead><tbody><tr><td>1974</td><td>ISO</td><td>图形核心系统GKS</td><td>二维图形软件标准</td></tr><tr><td>1988</td><td>ISO</td><td>图形软件标准软件GKS3D</td><td>三维</td></tr><tr><td>1986</td><td>ISO</td><td>程序员级的分层结构交互图形系统</td><td>对象建模、彩色设定、表面绘制和图形管理</td></tr><tr><td>90年代</td><td>SGI</td><td>OpenGL</td><td>开放式三维图形标准</td></tr></tbody></table><h3 id="硬件"><a href="#硬件" class="headerlink" title="硬件"></a>硬件</h3><p>输入设备：</p><p>向量型：随着图形的输出形状而移动并成像</p><p>光栅扫描型：作画机构按光栅矩阵方式扫描整张图面</p><h3 id="第一章练习题"><a href="#第一章练习题" class="headerlink" title="第一章练习题"></a>第一章练习题</h3><p>图像和图形的区别：</p><p>点阵法（图像）指用计算机绘制的画面，如直线、圆、圆弧、任意曲线和图表等</p><p>参数法（图形），用图形的<strong>图像参数</strong>和<strong>属性参数</strong>来表示图形，数字化形式存储的任意画面。</p><p>计算机图形学是什么：</p><p>是研究怎么用计算机<strong>输入、生成、存储、显示、输出</strong>图形的一门学科</p><p>像素是什么：</p><p>可看作是一个点阵单元发生器，并可控制每个点阵单元的亮度，这些<strong>点阵单元</strong>被称为像素</p><p>扫描线是什么：</p><p>帧缓冲：</p><p>储存像素点的颜色信息</p><p>走样：</p><p>用离散量表示连续量引起的失真现象称 之为<strong>走样</strong>(aliasing)</p><p>位面：</p><p>储存像素点的颜色信息</p><p>CRT的显示原理：</p><p>用电子束激发屏幕内表面的荧光粉来显示图像</p><p>计算机图形学等的区别：</p><p><strong>计算机图形学</strong>实现了数据模型到图像生成的过程，<strong>图形处理</strong>主要研究图形变换 方法，<strong>计算几何</strong>研究数据模型变换，<strong>模式识别</strong>实现了数据模型的特征提取</p>]]></content>
      
      
      <categories>
          
          <category> 深度学习 </category>
          
          <category> cs231n </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计算机 </tag>
            
            <tag> 计算机图形学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2022/11/08/%E5%A4%A7%E5%9B%9B%E4%B8%8A%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0/cs231n&amp;lecture9/"/>
      <url>/2022/11/08/%E5%A4%A7%E5%9B%9B%E4%B8%8A%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0/cs231n&amp;lecture9/</url>
      
        <content type="html"><![CDATA[<p>参考来源：</p><p><a href="https://www.bilibili.com/video/BV1nJ411z7fe?p=15&spm_id_from=pageDriver&vd_source=6eec2f14c9cf0fcea00a0d29ba245c79">【15】7 训练神经网络(下)-更好地优化_哔哩哔哩_bilibili</a></p><p><a href="http://cs231n.stanford.edu/slides/2017/cs231n_2017_lecture9.pdf">cs231n_2017_lecture9.pdf (stanford.edu)</a></p>]]></content>
      
      
      <categories>
          
          <category> 深度学习 </category>
          
          <category> cs231n </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 深度学习 </tag>
            
            <tag> cs231n </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2022/11/07/%E5%A4%A7%E5%9B%9B%E4%B8%8A%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0/%E6%9D%8E%E6%B2%90%E5%8A%A8%E6%89%8B%E5%AD%A6%E4%B9%A0%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/%E6%9D%8E%E6%B2%90%E7%AC%AC%E5%8D%81%E4%B8%89%E7%AB%A0/"/>
      <url>/2022/11/07/%E5%A4%A7%E5%9B%9B%E4%B8%8A%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0/%E6%9D%8E%E6%B2%90%E5%8A%A8%E6%89%8B%E5%AD%A6%E4%B9%A0%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/%E6%9D%8E%E6%B2%90%E7%AC%AC%E5%8D%81%E4%B8%89%E7%AB%A0/</url>
      
        <content type="html"><![CDATA[<p>参考来源：</p><p><a href="https://zh-v2.d2l.ai/chapter_computer-vision/image-augmentation.html">13.1. 图像增广 — 动手学深度学习 2.0.0-beta1 documentation (d2l.ai)</a></p><h2 id="图像增广（数据增强）"><a href="#图像增广（数据增强）" class="headerlink" title="图像增广（数据增强）"></a>图像增广（数据增强）</h2><p>图像增广在对训练图像进行一系列的随机变化之后，生成相似但不同的训练样本，从而扩大了训练集的规模。 此外，应用图像增广的原因是，随机改变训练样本可以减少模型对某些属性的依赖，从而提高模型的泛化能力。（<strong>AlexNet</strong>用到了）</p><h3 id="常用的图像增广方法"><a href="#常用的图像增广方法" class="headerlink" title="常用的图像增广方法"></a>常用的图像增广方法</h3><h4 id="翻转和裁剪"><a href="#翻转和裁剪" class="headerlink" title="翻转和裁剪"></a>翻转和裁剪</h4><p>各有50%的几率使图像向左或向右翻转</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token builtin">apply</span><span class="token punctuation">(</span>img<span class="token punctuation">,</span> torchvision<span class="token punctuation">.</span>transforms<span class="token punctuation">.</span>RandomHorizontalFlip<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment">#左右翻转</span><span class="token builtin">apply</span><span class="token punctuation">(</span>img<span class="token punctuation">,</span> torchvision<span class="token punctuation">.</span>transforms<span class="token punctuation">.</span>RandomVerticalFlip<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment"># 上下翻转，但是会妨碍识别</span>torchvision<span class="token punctuation">.</span>transforms<span class="token punctuation">.</span>RandomResizedCrop<span class="token punctuation">(</span>    <span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">,</span> scale<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">0.1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> ratio<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">0.5</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment"># 一个面积为原始面积10%到100%的区域，该区域的宽高比从0.5到2之间随机取值。</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="改变颜色"><a href="#改变颜色" class="headerlink" title="改变颜色"></a>改变颜色</h4><p> 我们可以改变图像颜色的四个方面：亮度、对比度、饱和度和色调。</p><p>随机值为原始图像的50%（1−0.5）到150%（1+0.5）之间</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token builtin">apply</span><span class="token punctuation">(</span>img<span class="token punctuation">,</span> torchvision<span class="token punctuation">.</span>transforms<span class="token punctuation">.</span>ColorJitter<span class="token punctuation">(</span>    brightness<span class="token operator">=</span><span class="token number">0.5</span><span class="token punctuation">,</span> contrast<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span> saturation<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span> hue<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>注意，以上属性分别代表亮度、对比度、饱和度、色调。数值为上下50%。</p><h4 id="结合多种图像增广方法"><a href="#结合多种图像增广方法" class="headerlink" title="结合多种图像增广方法"></a>结合多种图像增广方法</h4><p>过使用一个<code>Compose</code>实例来综合上面定义的不同的图像增广方法，并将它们应用到每个图像。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">augs <span class="token operator">=</span> torchvision<span class="token punctuation">.</span>transforms<span class="token punctuation">.</span>Compose<span class="token punctuation">(</span><span class="token punctuation">[</span>    torchvision<span class="token punctuation">.</span>transforms<span class="token punctuation">.</span>RandomHorizontalFlip<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> color_aug<span class="token punctuation">,</span> shape_aug<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token builtin">apply</span><span class="token punctuation">(</span>img<span class="token punctuation">,</span> augs<span class="token punctuation">)</span><span class="token comment">#上面就是应用了左右翻转+颜色+形状</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="应用来训练"><a href="#应用来训练" class="headerlink" title="应用来训练"></a>应用来训练</h3><p>我们通常对训练样本只进行图像增广，且在预测过程中不使用随机操作的图像增广。 此外，我们使用<code>ToTensor</code>实例将一批图像转换为深度学习框架所要求的格式，即形状为（批量大小，通道数，高度，宽度）的32位浮点数，取值范围为0到1。比如255，就是全部都除以255，使得在0~1之间。</p><h2 id="微调（迁移学习、transformer）"><a href="#微调（迁移学习、transformer）" class="headerlink" title="微调（迁移学习、transformer）"></a>微调（迁移学习、transformer）</h2><p>另一种解决方案是应用<em>迁移学习</em>（transfer learning）将从<em>源数据集</em>学到的知识迁移到<em>目标数据集</em>。 例如，尽管ImageNet数据集中的大多数图像与椅子无关，但在此数据集上训练的模型可能会提取更通用的图像特征，这有助于识别边缘、纹理、形状和对象组合。 这些类似的特征也可能有效地识别椅子。</p><h3 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h3><ol><li>在源数据集（例如ImageNet数据集）上预训练神经网络模型，即<em>源模型</em>。</li><li>创建一个新的神经网络模型，即<em>目标模型</em>。这将复制源模型上的所有模型设计及其参数（输出层除外）。我们假定这些模型参数包含从源数据集中学到的知识，这些知识也将适用于目标数据集。我们还假设源模型的输出层与源数据集的标签密切相关；因此不在目标模型中使用该层。<strong>因为高层网络跟标签更相关，因此需要重新学习高层（输出层），底层和特征提取有关，因此不必过多修改</strong></li><li>向目标模型添加输出层，其输出数是目标数据集中的类别数。然后随机初始化该层的模型参数。</li><li>在目标数据集（如椅子数据集）上训练目标模型。输出层将从头开始进行训练，而所有其他层的参数将根据源模型的参数进行微调。<strong>设置不同的学习率，高层变化的更大，底层更小</strong></li></ol><p><img src="/../../../images/image-20221107163220725.png" alt="image-20221107163220725"></p><h3 id="识别"><a href="#识别" class="headerlink" title="识别"></a>识别</h3><p>在ResNet的全局平均汇聚层后，全连接层转换为ImageNet数据集的1000个类输出。 之后，我们构建一个新的神经网络作为目标模型。 它的定义方式与预训练源模型的定义方式相同，只是最终层中的输出数量被设置为目标数据集中的类数（而不是1000个）。</p><p>核心代码：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">train_fine_tuning</span><span class="token punctuation">(</span>net<span class="token punctuation">,</span> learning_rate<span class="token punctuation">,</span> batch_size<span class="token operator">=</span><span class="token number">128</span><span class="token punctuation">,</span> num_epochs<span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">,</span>                      param_group<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    train_iter <span class="token operator">=</span> torch<span class="token punctuation">.</span>utils<span class="token punctuation">.</span>data<span class="token punctuation">.</span>DataLoader<span class="token punctuation">(</span>torchvision<span class="token punctuation">.</span>datasets<span class="token punctuation">.</span>ImageFolder<span class="token punctuation">(</span>        os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>data_dir<span class="token punctuation">,</span> <span class="token string">'train'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> transform<span class="token operator">=</span>train_augs<span class="token punctuation">)</span><span class="token punctuation">,</span>        batch_size<span class="token operator">=</span>batch_size<span class="token punctuation">,</span> shuffle<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>    test_iter <span class="token operator">=</span> torch<span class="token punctuation">.</span>utils<span class="token punctuation">.</span>data<span class="token punctuation">.</span>DataLoader<span class="token punctuation">(</span>torchvision<span class="token punctuation">.</span>datasets<span class="token punctuation">.</span>ImageFolder<span class="token punctuation">(</span>        os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>data_dir<span class="token punctuation">,</span> <span class="token string">'test'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> transform<span class="token operator">=</span>test_augs<span class="token punctuation">)</span><span class="token punctuation">,</span>        batch_size<span class="token operator">=</span>batch_size<span class="token punctuation">)</span>    devices <span class="token operator">=</span> d2l<span class="token punctuation">.</span>try_all_gpus<span class="token punctuation">(</span><span class="token punctuation">)</span>    loss <span class="token operator">=</span> nn<span class="token punctuation">.</span>CrossEntropyLoss<span class="token punctuation">(</span>reduction<span class="token operator">=</span><span class="token string">"none"</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> param_group<span class="token punctuation">:</span>        params_1x <span class="token operator">=</span> <span class="token punctuation">[</span>param <span class="token keyword">for</span> name<span class="token punctuation">,</span> param <span class="token keyword">in</span> net<span class="token punctuation">.</span>named_parameters<span class="token punctuation">(</span><span class="token punctuation">)</span>             <span class="token keyword">if</span> name <span class="token keyword">not</span> <span class="token keyword">in</span> <span class="token punctuation">[</span><span class="token string">"fc.weight"</span><span class="token punctuation">,</span> <span class="token string">"fc.bias"</span><span class="token punctuation">]</span><span class="token punctuation">]</span>        trainer <span class="token operator">=</span> torch<span class="token punctuation">.</span>optim<span class="token punctuation">.</span>SGD<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">&#123;</span><span class="token string">'params'</span><span class="token punctuation">:</span> params_1x<span class="token punctuation">&#125;</span><span class="token punctuation">,</span>                                   <span class="token punctuation">&#123;</span><span class="token string">'params'</span><span class="token punctuation">:</span> net<span class="token punctuation">.</span>fc<span class="token punctuation">.</span>parameters<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                                    <span class="token string">'lr'</span><span class="token punctuation">:</span> learning_rate <span class="token operator">*</span> <span class="token number">10</span><span class="token punctuation">&#125;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>                                lr<span class="token operator">=</span>learning_rate<span class="token punctuation">,</span> weight_decay<span class="token operator">=</span><span class="token number">0.001</span><span class="token punctuation">)</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        trainer <span class="token operator">=</span> torch<span class="token punctuation">.</span>optim<span class="token punctuation">.</span>SGD<span class="token punctuation">(</span>net<span class="token punctuation">.</span>parameters<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> lr<span class="token operator">=</span>learning_rate<span class="token punctuation">,</span>                                  weight_decay<span class="token operator">=</span><span class="token number">0.001</span><span class="token punctuation">)</span>    d2l<span class="token punctuation">.</span>train_ch13<span class="token punctuation">(</span>net<span class="token punctuation">,</span> train_iter<span class="token punctuation">,</span> test_iter<span class="token punctuation">,</span> loss<span class="token punctuation">,</span> trainer<span class="token punctuation">,</span> num_epochs<span class="token punctuation">,</span>                   devices<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="目标检测和边界框"><a href="#目标检测和边界框" class="headerlink" title="目标检测和边界框"></a>目标检测和边界框</h2><p>我们不仅想知道它们的类别，还想得到它们在图像中的具体位置。 在计算机视觉里，我们将这类任务称为<em>目标检测</em>（object detection）或<em>目标识别</em>（object recognition）。</p><h3 id="锚框"><a href="#锚框" class="headerlink" title="锚框"></a>锚框</h3><p>anchor的概念。</p><p><img src="/../../../images/image-20221107165628211.png" alt="image-20221107165628211"></p><p>评价anchor的好坏</p><p><img src="/../../../images/image-20221107165855652.png" alt="image-20221107165855652"></p>]]></content>
      
      
      <categories>
          
          <category> 深度学习 </category>
          
          <category> 李沐 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 深度学习 </tag>
            
            <tag> 李沐 </tag>
            
            <tag> 计算机视觉 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2022/11/05/%E5%A4%A7%E5%9B%9B%E4%B8%8A%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0/%E6%9D%8E%E6%B2%90%E5%8A%A8%E6%89%8B%E5%AD%A6%E4%B9%A0%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/%E6%9D%8E%E6%B2%90%E7%AC%AC%E4%B8%83%E7%AB%A0/"/>
      <url>/2022/11/05/%E5%A4%A7%E5%9B%9B%E4%B8%8A%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0/%E6%9D%8E%E6%B2%90%E5%8A%A8%E6%89%8B%E5%AD%A6%E4%B9%A0%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/%E6%9D%8E%E6%B2%90%E7%AC%AC%E4%B8%83%E7%AB%A0/</url>
      
        <content type="html"><![CDATA[<p>参考来源：</p><p><a href="https://www.bilibili.com/video/BV1Ao4y117Pd/?spm_id_from=autoNext&vd_source=6eec2f14c9cf0fcea00a0d29ba245c79">25 使用块的网络 VGG【动手学深度学习v2】_哔哩哔哩_bilibili</a></p><h2 id="LENet"><a href="#LENet" class="headerlink" title="LENet"></a>LENet</h2><p>1989提出的</p><p><img src="/../../../images/image-20221106095858103.png" alt="image-20221106095858103"></p><p><img src="/../../../images/image-20221106100355722.png" alt="image-20221106100355722"></p><h2 id="AlexNet"><a href="#AlexNet" class="headerlink" title="AlexNet"></a>AlexNet</h2><p><img src="/../../../images/image-20221106101659425.png" alt="image-20221106101659425"></p><p>激活函数从sigmoid变到了ReLu(减缓梯度消失)</p><p>隐藏全连接层后加入了丢弃层（dropout）</p><p>数据增强（变颜色，亮度等）</p><p><img src="/../../../images/image-20221106105630681.png" alt="image-20221106105630681"></p><p><img src="/../../../images/image-20221106105647286.png" alt="image-20221106105647286"></p><p>参数个数按照公式就可以计算，但是有个问题就是<strong>最后一层的参数为什么没有算</strong>（就是4096到1000层的参数量）</p><p>计算量按照那个公式算就行。</p><h2 id="VGG"><a href="#VGG" class="headerlink" title="VGG"></a>VGG</h2><p>与AlexNet的区别：AlexNet事实上就是对于LeNet的加强版，没有什么实质上的解释和区别。而VGG第一次引入了块的概念。</p><p><img src="/../../../images/image-20221106111118724.png" alt="image-20221106111118724"></p><p>其实就是把AlexNet多的那三个快打包起来变成一个块，然后用的时候可以用更多的块组合起来一起用。</p><p><img src="/../../../images/image-20221106111209802.png" alt="image-20221106111209802"></p><p>16就是指16层，19应该就是中间多了一个块多了三层。</p><p>核心构建过程（重点在于VGG除了pooling，其他层都是高宽不变的，通道数只有第一次发生变化，其它都不发生变化）</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">conv_arch <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">64</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">128</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">256</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">512</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">512</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">vgg_block</span><span class="token punctuation">(</span>num_convs<span class="token punctuation">,</span> in_channels<span class="token punctuation">,</span> out_channels<span class="token punctuation">)</span><span class="token punctuation">:</span>    layers <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    <span class="token keyword">for</span> _ <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>num_convs<span class="token punctuation">)</span><span class="token punctuation">:</span>        layers<span class="token punctuation">.</span>append<span class="token punctuation">(</span>nn<span class="token punctuation">.</span>Conv2d<span class="token punctuation">(</span>in_channels<span class="token punctuation">,</span> out_channels<span class="token punctuation">,</span>                                kernel_size<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">,</span> padding<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        layers<span class="token punctuation">.</span>append<span class="token punctuation">(</span>nn<span class="token punctuation">.</span>ReLU<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        in_channels <span class="token operator">=</span> out_channels    layers<span class="token punctuation">.</span>append<span class="token punctuation">(</span>nn<span class="token punctuation">.</span>MaxPool2d<span class="token punctuation">(</span>kernel_size<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">,</span>stride<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> nn<span class="token punctuation">.</span>Sequential<span class="token punctuation">(</span><span class="token operator">*</span>layers<span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">vgg</span><span class="token punctuation">(</span>conv_arch<span class="token punctuation">)</span><span class="token punctuation">:</span>    conv_blks <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    in_channels <span class="token operator">=</span> <span class="token number">1</span>    <span class="token comment"># 卷积层部分</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span>num_convs<span class="token punctuation">,</span> out_channels<span class="token punctuation">)</span> <span class="token keyword">in</span> conv_arch<span class="token punctuation">:</span>        conv_blks<span class="token punctuation">.</span>append<span class="token punctuation">(</span>vgg_block<span class="token punctuation">(</span>num_convs<span class="token punctuation">,</span> in_channels<span class="token punctuation">,</span> out_channels<span class="token punctuation">)</span><span class="token punctuation">)</span>        in_channels <span class="token operator">=</span> out_channels    <span class="token keyword">return</span> nn<span class="token punctuation">.</span>Sequential<span class="token punctuation">(</span>        <span class="token operator">*</span>conv_blks<span class="token punctuation">,</span> nn<span class="token punctuation">.</span>Flatten<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token comment"># 全连接层部分</span>        nn<span class="token punctuation">.</span>Linear<span class="token punctuation">(</span>out_channels <span class="token operator">*</span> <span class="token number">7</span> <span class="token operator">*</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">4096</span><span class="token punctuation">)</span><span class="token punctuation">,</span> nn<span class="token punctuation">.</span>ReLU<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> nn<span class="token punctuation">.</span>Dropout<span class="token punctuation">(</span><span class="token number">0.5</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        nn<span class="token punctuation">.</span>Linear<span class="token punctuation">(</span><span class="token number">4096</span><span class="token punctuation">,</span> <span class="token number">4096</span><span class="token punctuation">)</span><span class="token punctuation">,</span> nn<span class="token punctuation">.</span>ReLU<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> nn<span class="token punctuation">.</span>Dropout<span class="token punctuation">(</span><span class="token number">0.5</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        nn<span class="token punctuation">.</span>Linear<span class="token punctuation">(</span><span class="token number">4096</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">)</span>net <span class="token operator">=</span> vgg<span class="token punctuation">(</span>conv_arch<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>总结：</p><ul><li><p>VGG使用可重复使用的卷积块来构建深度卷积神经网络</p></li><li><p>不同的卷积块个数和超参数可以得到不同复杂度的变种</p></li></ul><h2 id="NiN"><a href="#NiN" class="headerlink" title="NiN"></a>NiN</h2><p> NiN的想法是在每个像素位置（针对每个高度和宽度）应用一个全连接层。从另一个角度看，即将空间维度中的每个像素视为单个样本，将通道维度视为不同特征（feature）。</p><p>NiN块以一个普通卷积层开始，后面是两个1×1的卷积层。这两个1×1卷积层充当带有ReLU激活函数的逐像素全连接层。 第一层的卷积窗口形状通常由用户设置。 随后的卷积窗口形状固定为1×1。</p><p><img src="/../../../images/image-20221106113512569.png" alt="image-20221106113512569"></p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">nin_block</span><span class="token punctuation">(</span>in_channels<span class="token punctuation">,</span> out_channels<span class="token punctuation">,</span> kernel_size<span class="token punctuation">,</span> strides<span class="token punctuation">,</span> padding<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">return</span> nn<span class="token punctuation">.</span>Sequential<span class="token punctuation">(</span>        nn<span class="token punctuation">.</span>Conv2d<span class="token punctuation">(</span>in_channels<span class="token punctuation">,</span> out_channels<span class="token punctuation">,</span> kernel_size<span class="token punctuation">,</span> strides<span class="token punctuation">,</span> padding<span class="token punctuation">)</span><span class="token punctuation">,</span>        nn<span class="token punctuation">.</span>ReLU<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        nn<span class="token punctuation">.</span>Conv2d<span class="token punctuation">(</span>out_channels<span class="token punctuation">,</span> out_channels<span class="token punctuation">,</span> kernel_size<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> nn<span class="token punctuation">.</span>ReLU<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        nn<span class="token punctuation">.</span>Conv2d<span class="token punctuation">(</span>out_channels<span class="token punctuation">,</span> out_channels<span class="token punctuation">,</span> kernel_size<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> nn<span class="token punctuation">.</span>ReLU<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>特点：</p><p>无全连接层</p><p>交替使用NN块和步幅为2的最大池化层</p><p>逐步减小高宽和增大通道数</p><p>最后使用全局平均池化层得到输出（多少类就池化多少个通道，然后再flatten）</p><p>其输入通道数是类别数</p><h2 id="GoodLeNet"><a href="#GoodLeNet" class="headerlink" title="GoodLeNet"></a>GoodLeNet</h2><p>本文的一个观点是，有时使用不同大小的卷积核组合是有利的。就是什么块都用一下。主要就是控制每一种方法出来的高宽都是一样的，所以能够合在一起继续下一步。</p><p><img src="/../../../images/image-20221106113622499.png" alt="image-20221106113622499"></p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">Inception</span><span class="token punctuation">(</span>nn<span class="token punctuation">.</span>Module<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment"># c1--c4是每条路径的输出通道数</span>    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> in_channels<span class="token punctuation">,</span> c1<span class="token punctuation">,</span> c2<span class="token punctuation">,</span> c3<span class="token punctuation">,</span> c4<span class="token punctuation">,</span> <span class="token operator">**</span>kwargs<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token builtin">super</span><span class="token punctuation">(</span>Inception<span class="token punctuation">,</span> self<span class="token punctuation">)</span><span class="token punctuation">.</span>__init__<span class="token punctuation">(</span><span class="token operator">**</span>kwargs<span class="token punctuation">)</span>        <span class="token comment"># 线路1，单1x1卷积层</span>        self<span class="token punctuation">.</span>p1_1 <span class="token operator">=</span> nn<span class="token punctuation">.</span>Conv2d<span class="token punctuation">(</span>in_channels<span class="token punctuation">,</span> c1<span class="token punctuation">,</span> kernel_size<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span>        <span class="token comment"># 线路2，1x1卷积层后接3x3卷积层</span>        self<span class="token punctuation">.</span>p2_1 <span class="token operator">=</span> nn<span class="token punctuation">.</span>Conv2d<span class="token punctuation">(</span>in_channels<span class="token punctuation">,</span> c2<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> kernel_size<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>p2_2 <span class="token operator">=</span> nn<span class="token punctuation">.</span>Conv2d<span class="token punctuation">(</span>c2<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> c2<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> kernel_size<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">,</span> padding<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span>        <span class="token comment"># 线路3，1x1卷积层后接5x5卷积层</span>        self<span class="token punctuation">.</span>p3_1 <span class="token operator">=</span> nn<span class="token punctuation">.</span>Conv2d<span class="token punctuation">(</span>in_channels<span class="token punctuation">,</span> c3<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> kernel_size<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>p3_2 <span class="token operator">=</span> nn<span class="token punctuation">.</span>Conv2d<span class="token punctuation">(</span>c3<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> c3<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> kernel_size<span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">,</span> padding<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">)</span>        <span class="token comment"># 线路4，3x3最大汇聚层后接1x1卷积层</span>        self<span class="token punctuation">.</span>p4_1 <span class="token operator">=</span> nn<span class="token punctuation">.</span>MaxPool2d<span class="token punctuation">(</span>kernel_size<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">,</span> stride<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> padding<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>p4_2 <span class="token operator">=</span> nn<span class="token punctuation">.</span>Conv2d<span class="token punctuation">(</span>in_channels<span class="token punctuation">,</span> c4<span class="token punctuation">,</span> kernel_size<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">forward</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> x<span class="token punctuation">)</span><span class="token punctuation">:</span>        p1 <span class="token operator">=</span> F<span class="token punctuation">.</span>relu<span class="token punctuation">(</span>self<span class="token punctuation">.</span>p1_1<span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span>        p2 <span class="token operator">=</span> F<span class="token punctuation">.</span>relu<span class="token punctuation">(</span>self<span class="token punctuation">.</span>p2_2<span class="token punctuation">(</span>F<span class="token punctuation">.</span>relu<span class="token punctuation">(</span>self<span class="token punctuation">.</span>p2_1<span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        p3 <span class="token operator">=</span> F<span class="token punctuation">.</span>relu<span class="token punctuation">(</span>self<span class="token punctuation">.</span>p3_2<span class="token punctuation">(</span>F<span class="token punctuation">.</span>relu<span class="token punctuation">(</span>self<span class="token punctuation">.</span>p3_1<span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        p4 <span class="token operator">=</span> F<span class="token punctuation">.</span>relu<span class="token punctuation">(</span>self<span class="token punctuation">.</span>p4_2<span class="token punctuation">(</span>self<span class="token punctuation">.</span>p4_1<span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token comment"># 在通道维度上连结输出</span>        <span class="token keyword">return</span> torch<span class="token punctuation">.</span>cat<span class="token punctuation">(</span><span class="token punctuation">(</span>p1<span class="token punctuation">,</span> p2<span class="token punctuation">,</span> p3<span class="token punctuation">,</span> p4<span class="token punctuation">)</span><span class="token punctuation">,</span> dim<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>其中c1，c2，c3，c4就是超参数，各方法所需要的通道数，最后再cat在一起。</p><p>网络框架：</p><p><img src="/../../../images/image-20221106114005645.png" alt="image-20221106114005645"></p><p>反正就是每个stage的inception是一样的超参数，不是的理论上是不一样的。</p><p>然后也有很多的变种版本（现在仍然在使用，v3）</p><p><img src="/../../../images/image-20221106114108765.png" alt="image-20221106114108765"></p><p>它的一个主要优点是模型参数小，计算复杂度低。</p><h2 id="BN"><a href="#BN" class="headerlink" title="BN"></a>BN</h2><p><img src="/../../../images/image-20221106120427581.png" alt="image-20221106120427581"></p><p>这两个参数都是可以学习的参数，作用在层的输出后，激活函数前。</p><ul><li>全连接层，特征就是列向量，所以对行向量（n）进行bn</li><li>卷积层，特征是每一个通道（比如一开始是3），进行bn。假设我们的小批量包含m个样本，并且对于每个通道，卷积的输出具有高度p和宽度q。 那么对于卷积层，我们在每个输出通道的m⋅p⋅q个元素上同时执行每个批量规范化。</li></ul><p>需要注意的点：预测过程中的批量规范化</p><p>如我们前面提到的，批量规范化在训练模式和预测模式下的行为通常不同。 首先，将训练好的模型用于预测时，我们不再需要样本均值中的噪声以及在微批次上估计每个小批次产生的样本方差了。 其次，例如，我们可能需要使用我们的模型对逐个样本进行预测。 一种常用的方法是通过移动平均估算整个训练数据集的样本均值和方差，并在预测时使用它们得到确定的输出。 可见，和暂退法一样，批量规范化层在训练模式和预测模式下的计算结果也是不一样的。</p><p>主要思想：后续有论文指出它可能就是通过在每个小批量里加入噪音来控制模型复杂度</p><p>所以需要<strong>训练的时候计算整体均值和方差</strong>，测试的时候直接代入计算。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">batch_norm</span><span class="token punctuation">(</span>X<span class="token punctuation">,</span> gamma<span class="token punctuation">,</span> beta<span class="token punctuation">,</span> moving_mean<span class="token punctuation">,</span> moving_var<span class="token punctuation">,</span> eps<span class="token punctuation">,</span> momentum<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment"># 通过autograd来判断当前模式是训练模式还是预测模式</span>    <span class="token keyword">if</span> <span class="token keyword">not</span> autograd<span class="token punctuation">.</span>is_training<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token comment"># 如果是在预测模式下，直接使用传入的移动平均所得的均值和方差</span>        X_hat <span class="token operator">=</span> <span class="token punctuation">(</span>X <span class="token operator">-</span> moving_mean<span class="token punctuation">)</span> <span class="token operator">/</span> np<span class="token punctuation">.</span>sqrt<span class="token punctuation">(</span>moving_var <span class="token operator">+</span> eps<span class="token punctuation">)</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        <span class="token keyword">assert</span> <span class="token builtin">len</span><span class="token punctuation">(</span>X<span class="token punctuation">.</span>shape<span class="token punctuation">)</span> <span class="token keyword">in</span> <span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span>        <span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span>X<span class="token punctuation">.</span>shape<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">2</span><span class="token punctuation">:</span>            <span class="token comment"># 使用全连接层的情况，计算特征维上的均值和方差</span>            mean <span class="token operator">=</span> X<span class="token punctuation">.</span>mean<span class="token punctuation">(</span>axis<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span>            var <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>X <span class="token operator">-</span> mean<span class="token punctuation">)</span> <span class="token operator">**</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">.</span>mean<span class="token punctuation">(</span>axis<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span>        <span class="token keyword">else</span><span class="token punctuation">:</span>            <span class="token comment"># 使用二维卷积层的情况，计算通道维上（axis=1）的均值和方差。</span>            <span class="token comment"># 这里我们需要保持X的形状以便后面可以做广播运算</span>            mean <span class="token operator">=</span> X<span class="token punctuation">.</span>mean<span class="token punctuation">(</span>axis<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span> keepdims<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>            var <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>X <span class="token operator">-</span> mean<span class="token punctuation">)</span> <span class="token operator">**</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">.</span>mean<span class="token punctuation">(</span>axis<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span> keepdims<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>        <span class="token comment"># 训练模式下，用当前的均值和方差做标准化</span>        X_hat <span class="token operator">=</span> <span class="token punctuation">(</span>X <span class="token operator">-</span> mean<span class="token punctuation">)</span> <span class="token operator">/</span> np<span class="token punctuation">.</span>sqrt<span class="token punctuation">(</span>var <span class="token operator">+</span> eps<span class="token punctuation">)</span>        <span class="token comment"># 更新移动平均的均值和方差</span>        moving_mean <span class="token operator">=</span> momentum <span class="token operator">*</span> moving_mean <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token number">1.0</span> <span class="token operator">-</span> momentum<span class="token punctuation">)</span> <span class="token operator">*</span> mean        moving_var <span class="token operator">=</span> momentum <span class="token operator">*</span> moving_var <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token number">1.0</span> <span class="token operator">-</span> momentum<span class="token punctuation">)</span> <span class="token operator">*</span> var    Y <span class="token operator">=</span> gamma <span class="token operator">*</span> X_hat <span class="token operator">+</span> beta  <span class="token comment"># 缩放和移位</span>    <span class="token keyword">return</span> Y<span class="token punctuation">,</span> moving_mean<span class="token punctuation">,</span> moving_var    <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="ResNet"><a href="#ResNet" class="headerlink" title="ResNet"></a>ResNet</h2><p>核心思想：残差块</p><p>让我们聚焦于神经网络局部：如图 <a href="https://zh-v2.d2l.ai/chapter_convolutional-modern/resnet.html#fig-residual-block">图7.6.2</a>所示，假设我们的原始输入为x，而希望学出的理想映射为f(x)（作为 <a href="https://zh-v2.d2l.ai/chapter_convolutional-modern/resnet.html#fig-residual-block">图7.6.2</a>上方激活函数的输入）。 <a href="https://zh-v2.d2l.ai/chapter_convolutional-modern/resnet.html#fig-residual-block">图7.6.2</a>左图虚线框中的部分需要直接拟合出该映射f(x)，而右图虚线框中的部分则需要拟合出残差映射f(x)−x。 残差映射在现实中往往更容易优化。 以本节开头提到的恒等映射作为我们希望学出的理想映射f(x)，我们只需将 <a href="https://zh-v2.d2l.ai/chapter_convolutional-modern/resnet.html#fig-residual-block">图7.6.2</a>中右图虚线框内上方的加权运算（如仿射）的权重和偏置参数设成0，那么f(x)即为恒等映射。 实际中，当理想映射f(x)极接近于恒等映射时，残差映射也易于捕捉恒等映射的细微波动。 <a href="https://zh-v2.d2l.ai/chapter_convolutional-modern/resnet.html#fig-residual-block">图7.6.2</a>右图是ResNet的基础架构–<em>残差块</em>（residual block）。 在残差块中，输入可通过跨层数据线路更快地向前传播。</p><p><img src="/../../../images/image-20221106121703301.png" alt="image-20221106121703301"></p><p><img src="/../../../images/image-20221106121905960.png" alt="image-20221106121905960"></p>]]></content>
      
      
      <categories>
          
          <category> 深度学习 </category>
          
          <category> 李沐 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 深度学习 </tag>
            
            <tag> 李沐 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>英语六级听力技巧</title>
      <link href="/2022/11/03/%E8%8B%B1%E8%AF%AD/%E8%8B%B1%E8%AF%AD%E5%85%AD%E7%BA%A7%E6%8A%80%E5%B7%A7/"/>
      <url>/2022/11/03/%E8%8B%B1%E8%AF%AD/%E8%8B%B1%E8%AF%AD%E5%85%AD%E7%BA%A7%E6%8A%80%E5%B7%A7/</url>
      
        <content type="html"><![CDATA[<h1 id="听力答题技巧"><a href="#听力答题技巧" class="headerlink" title="听力答题技巧"></a>听力答题技巧</h1><p>参考来源：</p><p><a href="https://www.hjenglish.com/new/p1317871/">六级听力核心技巧，看这一篇就够了~_沪江英语学习网 (hjenglish.com)</a></p><p><a href="https://zhuanlan.zhihu.com/p/380675880">六级听力200+最强应试技巧+备考攻略 - 知乎 (zhihu.com)</a></p><h3 id="六级听力划选项神技（主要技巧）"><a href="#六级听力划选项神技（主要技巧）" class="headerlink" title="六级听力划选项神技（主要技巧）"></a>六级听力划选项神技（主要技巧）</h3><ul><li>【主题词】：4个选项都有的词，是提示进入这道题的<strong>标志词</strong>，用<strong>圆圈</strong>划出来；<ul><li>用于判断进入这道题</li></ul></li><li>【定位词】：<strong>关键信息</strong>时间&#x2F;地点&#x2F;大写&#x2F;数字，用<strong>横线</strong>；<ul><li>用于判断哪个选项</li></ul></li><li>【判定词】：动词，形容词，副词，<strong>波浪线</strong><ul><li>用于判断对错，常出现<strong>同义词替换</strong></li></ul></li></ul><h3 id="次要技巧"><a href="#次要技巧" class="headerlink" title="次要技巧"></a>次要技巧</h3><h4 id="命题规律"><a href="#命题规律" class="headerlink" title="命题规律"></a>命题规律</h4><ul><li>顺序原则</li><li>同义替换</li><li>首尾</li><li>转折、强调</li><li>比较</li><li>年份价钱等数字</li><li>综合</li></ul><h4 id="答题规律"><a href="#答题规律" class="headerlink" title="答题规律"></a>答题规律</h4><ul><li><p>相近原则</p><p>当选项中有两个意义相近时，那么正确答案必在这两项之中！</p></li><li><p>相反原则</p><p>当选项中有两项表达意义相反时，那么正确答案必在这两项之中！</p></li><li><p>视听一致原则</p></li></ul><h3 id="各题型技巧"><a href="#各题型技巧" class="headerlink" title="各题型技巧"></a>各题型技巧</h3><p><a href="https://www.zhihu.com/question/272096960">(55 封私信 &#x2F; 80 条消息) 英语六级听力有没有什么技巧？ - 知乎 (zhihu.com)</a></p><h4 id="短对话"><a href="#短对话" class="headerlink" title="短对话"></a>短对话</h4><p>（没什么技巧，注意一开始的回合）</p><h4 id="长对话"><a href="#长对话" class="headerlink" title="长对话"></a>长对话</h4><p>（1）长对话一定要注意<strong>首尾句</strong>，第一个问题和第二个问题通常不会间隔太久。</p><p>(2)长对话和听力篇章中常常出现<strong>举例</strong>(for example for instance.)或列举(the first。<br>The next.…),出题要么考例子前的论点，要么考察举例中的细节。</p><p>（3）长对话中的<strong>比较级</strong>同样值得注意，读比较级以及强调句型时通常会重读（生怕你听不出来）</p><p>(4)逻辑关系词。最常见的逻辑关系词有：<strong>表转折、因果或条件</strong>等的连词(but,however,<br>because,since,if和unless等)这类词<strong>后面</strong>的内容信息量多半较大。</p><h2 id="日常练习方法"><a href="#日常练习方法" class="headerlink" title="日常练习方法"></a>日常练习方法</h2><ol><li><p>记单词</p><p>没什么好说的</p></li><li><p>养成标记的好习惯</p><ul><li>一开始时间不够的话，先标注好再开始听力</li><li>到后面在section的时候开始画，念题目的时候也接着画（如果没听到问题可以边画边等）</li></ul></li><li><p>关于真题材料的用处</p><ul><li>一开始：练习完后对答案，找到每题对应的原文，判断题目类型与相应规律，然后再听一遍（全部）</li><li>逐渐熟练：对完答案马上听，对应着答案判断类型</li><li>注意点：找到题目分布的规律（比如觉得什么时候到第一题什么时候到第二题）</li></ul></li><li><p>全部听完后，对照着目标段落仔细听，认准出题点</p></li><li><p>更高级的练习方法，默写听力原文</p><ul><li>一句一句练，用一张纸默写</li><li>直到默写完位置</li><li>随着训练，重复次数应逐渐减少</li></ul></li></ol>]]></content>
      
      
      <categories>
          
          <category> 六级 </category>
          
          <category> 英语 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 六级 </tag>
            
            <tag> 英语 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>英语六级翻译技巧</title>
      <link href="/2022/11/03/%E8%8B%B1%E8%AF%AD/%E8%8B%B1%E8%AF%AD%E5%85%AD%E7%BA%A7%E7%BF%BB%E8%AF%91%E6%8A%80%E5%B7%A7/"/>
      <url>/2022/11/03/%E8%8B%B1%E8%AF%AD/%E8%8B%B1%E8%AF%AD%E5%85%AD%E7%BA%A7%E7%BF%BB%E8%AF%91%E6%8A%80%E5%B7%A7/</url>
      
        <content type="html"><![CDATA[<h2 id="翻译技巧"><a href="#翻译技巧" class="headerlink" title="翻译技巧"></a>翻译技巧</h2><p>参考来源：</p><p><a href="https://zhuanlan.zhihu.com/p/377251738">六级翻译最强攻略 - 知乎 (zhihu.com)</a></p><h4 id="翻译误区"><a href="#翻译误区" class="headerlink" title="翻译误区"></a>翻译误区</h4><p>但是！大家一直以来都有一个误区：一个句子你不会翻，你就会想到去看答案，但是那个答案的译文又特别高大上，你觉得你这辈子都翻译不出来，其实这个句子你只要翻译出来相同的意思，我们都是给分的（前提是别犯语法错误），也就是说一个句子有非常多的译法，一个长难句，你可以把它写成几个简单句，只要意思对应，我们都是给分的，这才是六级翻译的本意。（不要被参考答案带偏，它只是众多译文版本的一种，而且参考答案一般都是机构老师写的，译文都比较高大上，用词怎么难怎么来，你肯定写不出来啊！）</p><p>其他：</p><h3 id="第一大部分：六级翻译必备技巧"><a href="#第一大部分：六级翻译必备技巧" class="headerlink" title="第一大部分：六级翻译必备技巧"></a><strong>第一大部分：六级翻译必备技巧</strong></h3><h4 id="一、修饰后置"><a href="#一、修饰后置" class="headerlink" title="一、修饰后置"></a><strong>一、修饰后置</strong></h4><p><img src="https://pic2.zhimg.com/80/v2-9c71773df10040304412d0c11d2a5e55_720w.webp" alt="img"></p><p>形容词的修饰可以直接跟在前面，其他都要后置。主要是把句子中的成分识别出来后，修饰语找出来。</p><p><img src="/../../images/image-20221105172827686.png" alt="image-20221105172827686"></p><p><strong>2.定语从句</strong></p><p><img src="/../../images/image-20221105173248317.png" alt="image-20221105173248317"></p><p><strong>3.插入语同位语</strong></p><p><img src="/../../images/image-20221105191429248.png" alt="image-20221105191429248"></p><h4 id="二、多动句"><a href="#二、多动句" class="headerlink" title="二、多动句"></a><strong>二、多动句</strong></h4><p>我最推荐使用非谓语动词，从六级翻译的参考答案中也可以看出来绝大多数的多动句都是使用非谓语动词的方式来处理多动句</p><p>那么问题来了，拿到一个多动句，我怎么知道哪个谓语动词，哪个是非谓语动词呢？教给你一个小技巧：哪个动词离主语近，哪个就处理成谓语动词，其他动词全部处理成非谓语动词。这个技巧，95%以上的情况都适用！</p><p><img src="/../../images/image-20221105191711244.png" alt="image-20221105191711244"></p><h4 id="三、无主句"><a href="#三、无主句" class="headerlink" title="三、无主句"></a><strong>三、无主句</strong></h4><p><img src="https://pic4.zhimg.com/80/v2-34f2792d1c7aa3f83fbd0c47918fe227_720w.webp" alt="六级无主句"></p><p>这里，我最推荐使用“变被动”。非人主语等会单独说。</p><p><strong>举个例子：至今已有约120个中文词加进了牛津英语词典，成了英语语言的一部分。</strong></p><p>这个句子很明显缺少主语，但是如果要加主语，你也不知道主语是谁，所以，通常这种情况，我特别建议变被动</p><p><strong>So far,about 120 Chinese words have been added to Oxford English Dictionary,becoming a part of the English language.</strong></p><p>以后拿到一个句子，发现不好翻（一般都是缺主语，我们最先想到被动句）</p><h3 id="第二大部分：六级翻译方法"><a href="#第二大部分：六级翻译方法" class="headerlink" title="第二大部分：六级翻译方法"></a><strong>第二大部分：六级翻译方法</strong></h3><h4 id="第一步：找到句子范围，提炼主干"><a href="#第一步：找到句子范围，提炼主干" class="headerlink" title="第一步：找到句子范围，提炼主干"></a><strong>第一步：找到句子范围，提炼主干</strong></h4><p>正常来说，句子主干无非就是：主谓，主谓宾，主系表等。我拿到一个句子，需要把一个句子的主干提炼出来。</p><h4 id="第二步：将修饰部分翻译，根据修饰后置的原则融入主干"><a href="#第二步：将修饰部分翻译，根据修饰后置的原则融入主干" class="headerlink" title="第二步：将修饰部分翻译，根据修饰后置的原则融入主干"></a><strong>第二步：将修饰部分翻译，根据修饰后置的原则融入主干</strong></h4><p>这里要注意：若主干遭遇翻译障碍，重新选择或替换汉语原句子的主语、谓语或系动词。</p><p>单词如果不会写，尝试用短语，短语如果不会写，尝试用从句，从句如果不会写，尝试用单句解释。</p><p>举个例子：牡丹（Peony）花色艳丽，形象高雅，象征着和平与繁荣。</p><p>这个句子的处理方式非常多种：</p><p>1.拆成2个主干：Peony is colorful and <a href="https://link.zhihu.com/?target=http://elegant.it/">elegant.it</a> symbolizes peace and prosperity.</p><p>2.定语从句：这里处理成定语从句或非谓语动词时要注意，从语法上，你把任何一个部分处理成谓语动词都可以（你可以把“艳丽”和“高雅”处理成谓语动词，也可以把“象征”处理成谓语动词）写出来就是：</p><p>Peony is colorful and elegant,which symbolizes peace and prosperity.</p><p>3.非谓语动词</p><p>Peony is colorful and elegant, symbolizing peace and prosperity.</p><h4 id="第三步：把主干和修饰组合，检查改正"><a href="#第三步：把主干和修饰组合，检查改正" class="headerlink" title="第三步：把主干和修饰组合，检查改正"></a>第三步：把主干和修饰组合，检查改正</h4><p>最常见的错误：谓语动词单复数，谓语动词的唯一性，从句等问题，每一个错误都要扣很多分，所以做完建议检查一遍，最好是平时在练习时就可以不犯错误。</p>]]></content>
      
      
      <categories>
          
          <category> 六级 </category>
          
          <category> 英语 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 六级 </tag>
            
            <tag> 英语 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2022/11/03/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%AD%A6%E4%B9%A0/C%E7%9B%98%E4%BC%98%E5%8C%96%E6%95%99%E7%A8%8B/"/>
      <url>/2022/11/03/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%AD%A6%E4%B9%A0/C%E7%9B%98%E4%BC%98%E5%8C%96%E6%95%99%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<h1 id="首先下载软件WizTree"><a href="#首先下载软件WizTree" class="headerlink" title="首先下载软件WizTree"></a>首先下载软件WizTree</h1><p>这个软件能快速检查出C盘的资源树，让你更好的快速处理哪些文件是用不上，提高效率。</p><p><a href="https://www.bilibili.com/read/cv13480028/">WizTree v4.03 最快的磁盘空间分析工具中文便携版 - 哔哩哔哩 (bilibili.com)</a></p><ul><li><p>微信处理办法<a href="https://jingyan.baidu.com/article/0a52e3f4cfd07bbf62ed7238.html">微信电脑版如何更改文件存储位置-百度经验 (baidu.com)</a></p></li><li><p>qq处理办法<a href="https://jingyan.baidu.com/article/7f766dafe3283b4101e1d024.html"><a href="https://blog.csdn.net/qq_43477726/article/details/99314982">(40条消息) QQ聊天记录恢复、迁移教程（改变默认存储位置、个人文件夹保存位置）_音乐不能快进的博客-CSDN博客_qq聊天记录转移</a></a></p></li></ul><h2 id="系统清理"><a href="#系统清理" class="headerlink" title="系统清理"></a>系统清理</h2><ul><li>用户日志<a href="https://zhuanlan.zhihu.com/p/427183314">C盘全面清理教程！彻底清理所有垃圾！ - 知乎 (zhihu.com)</a></li><li>回收站<a href="https://baijiahao.baidu.com/s?id=1606973589086577281">win10系统更改回收站默认存储位置，从C盘移到其他磁盘 (baidu.com)</a></li></ul><h2 id="效果对比"><a href="#效果对比" class="headerlink" title="效果对比"></a>效果对比</h2><p>修改前</p><p><img src="/../../images/image-20221103165541285.png" alt="修改前"></p><p>修改后</p><p><img src="/../../images/image-20221103165518821.png" alt="修改后"></p>]]></content>
      
      
      <categories>
          
          <category> 计算机 </category>
          
          <category> C盘清理 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计算机 </tag>
            
            <tag> C盘清理 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2022/10/27/%E5%A4%A7%E5%88%9B/%E5%8D%97%E4%BF%A1%E5%A4%A7%E6%9D%A8%E5%8D%9A%E8%80%81%E5%B8%88%E5%BC%80%E4%BC%9A/"/>
      <url>/2022/10/27/%E5%A4%A7%E5%88%9B/%E5%8D%97%E4%BF%A1%E5%A4%A7%E6%9D%A8%E5%8D%9A%E8%80%81%E5%B8%88%E5%BC%80%E4%BC%9A/</url>
      
        <content type="html"><![CDATA[<p>南信大 ai </p><p>会议</p><p>中南大学 联培博士 江苏省博士  机器人定位导航</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2022/10/26/%E8%AE%A1%E7%AE%97%E6%9C%BA%E4%BA%8C%E7%BA%A7python%E9%A2%98%E7%9B%AE/"/>
      <url>/2022/10/26/%E8%AE%A1%E7%AE%97%E6%9C%BA%E4%BA%8C%E7%BA%A7python%E9%A2%98%E7%9B%AE/</url>
      
        <content type="html"><![CDATA[<p>参考来源：</p><p><a href="https://blog.csdn.net/weixin_44636369/article/details/119927836">(40条消息) Python计算机二级编程题真题及考点总结(上篇)_Pale blue dot的博客-CSDN博客_计算机二级python编程题</a></p><p><a href="https://blog.csdn.net/ExclusiveName/article/details/104537575">(40条消息) python二级真题–共十二套–前六套–选择题_hao难懂的博客-CSDN博客_python二级考试真题</a></p><h2 id="代码题"><a href="#代码题" class="headerlink" title="代码题"></a>代码题</h2><p>例1：键盘输入字符串s，按要求把s输出到屏幕，格式要求:宽度为30个字符，星号字符*填充，居中对齐。如果输入字符串超过30位，则全部输出。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token operator">//</span> 考生文件初始代码s <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">"请输入一个字符串:"</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"&#123;______&#125;"</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">//</span> 参考答案s <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">"请输入一个字符串:"</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"&#123;:*^30&#125;"</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>例2：根据斐波那契数列的定义，F(0)&#x3D;0，F(1)&#x3D;1,F(n)&#x3D;F(n-1)+F(n-2)(n&gt;&#x3D;2)，输出不大于50的序列元素。例如:屏幕输出实例为:0.1.1.2.3…(略)</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token operator">//</span> 考生文件初始代码a<span class="token punctuation">,</span> b <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token keyword">while</span> ______<span class="token punctuation">:</span>   <span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> end<span class="token operator">=</span><span class="token string">','</span><span class="token punctuation">)</span>   a<span class="token punctuation">,</span> b <span class="token operator">=</span> ______<span class="token operator">//</span> 参考答案a<span class="token punctuation">,</span> b <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token keyword">while</span> a <span class="token operator">&lt;=</span> <span class="token number">50</span><span class="token punctuation">:</span>   <span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> end<span class="token operator">=</span><span class="token string">','</span><span class="token punctuation">)</span>   a<span class="token punctuation">,</span> b <span class="token operator">=</span> b<span class="token punctuation">,</span> a<span class="token operator">+</span>b<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>例3：键盘输入一句话，用jieba分词后，将切分的词组按照在原话中逆序输出到屏幕上，词组中间没有空格。示例如下:  输入:我爱老师  输出:老师爱我</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token operator">//</span> 考生文件初始代码<span class="token keyword">import</span> jiebatxt <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">"请输入一段中文文本:"</span><span class="token punctuation">)</span>______<span class="token keyword">for</span> i <span class="token keyword">in</span> ls<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">:</span>   ______<span class="token operator">//</span> 参考答案<span class="token keyword">import</span> jiebatxt <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">"请输入一段中文文本:"</span><span class="token punctuation">)</span>ls <span class="token operator">=</span> jieba<span class="token punctuation">.</span>lcut<span class="token punctuation">(</span>txt<span class="token punctuation">)</span><span class="token keyword">for</span> i <span class="token keyword">in</span> ls<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">:</span>   <span class="token keyword">print</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span>end<span class="token operator">=</span><span class="token string">""</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>例4：键盘输入正整数n，把n输出到屏幕，格式要求:宽度为30个字符，@填充，右对齐，带千位分隔符。若输入正整数超30位，则真实长度输出。例:键盘输入正整数n为5201314，屏幕输出@@@@@@@@@@@@@@@@@@@@@5,201,314</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token operator">//</span> 考生文件初始代码n <span class="token operator">=</span> <span class="token builtin">eval</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">"请输入正整数:"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"&#123;______&#125;"</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">//</span> 参考答案n <span class="token operator">=</span> <span class="token builtin">eval</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">"请输入正整数:"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"&#123;0:@>30,&#125;"</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>例5：a、b是两列表变量，列表a为[11,3.8]已给定，键盘输入列表b，计算a中元素与b中对应元素乘积的累加和。例:键盘输入列表b为[4.,5.2]，则屏幕输出计算结果为75</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token operator">//</span> 考生文件初始代码a <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">11</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">]</span>b <span class="token operator">=</span>  <span class="token builtin">eval</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">#例如：[4,5,2]</span>______<span class="token keyword">for</span> i <span class="token keyword">in</span> ______<span class="token punctuation">:</span>   s <span class="token operator">+=</span> a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">*</span>b<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token keyword">print</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token operator">//</span> 参考答案a <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">11</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">]</span>b <span class="token operator">=</span> <span class="token builtin">eval</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>s <span class="token operator">=</span> <span class="token number">0</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">:</span>   s <span class="token operator">+=</span> a<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">*</span> b<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token keyword">print</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="选择题"><a href="#选择题" class="headerlink" title="选择题"></a>选择题</h2><ol><li>关于Python文件处理，以下选项中描述错误的是<br>A<br>Python能处理JPG图像文件<br>B<br>Python不可以处理PDF文件<br>C<br>Python能处理CSV文件<br>D<br>Python能处理Excel文件<br>正确答案： B</li><li>Python机器学习方向的第三方库是<br>A<br>PIL<br>B<br>PyQt5<br>C<br>TensorFlow<br>D<br>random<br>正确答案： C</li><li>下面代码的输出结果是<br>x&#x3D;3.1415926print(round(x,2) ,round(x))<br>A<br>3 3.14<br>B<br>2 2<br>C<br>6.28 3<br>D<br>3.14 3<br>正确答案： D</li><li>下面代码的输出结果是<br>for s in “HelloWorld”:<br>if s&#x3D;&#x3D;“W”:<br>break<br>print(s, end&#x3D;””)<br>A<br>Hello<br>B<br>World<br>C<br>HelloWorld<br>D<br>Helloorld<br>正确答案： A</li><li>下面代码的输出结果是<br>s &#x3D;[“seashell”,“gold”,“pink”,“brown”,“purple”,“tomato”]print(s[4:])<br>A<br>[‘purple’]<br>B<br>[‘seashell’, ‘gold’, ‘pink’, ‘brown’]<br>C<br>[‘gold’, ‘pink’, ‘brown’, ‘purple’, ‘tomato’]<br>D<br>[‘purple’, ‘tomato’]<br>正确答案： D</li><li>给出如下代码：<br>fname &#x3D; input(“请输入要打开的文件: “)<br>fo &#x3D; open(fname, “r”)for line in fo.readlines():<br>print(line)<br>fo.close()<br>关于上述代码的描述，以下选项中错误的是<br>A<br>通过fo.readlines()方法将文件的全部内容读入一个字典fo<br>B<br>通过fo.readlines()方法将文件的全部内容读入一个列表fo<br>C<br>上述代码可以优化为：<br>fname &#x3D; input(“请输入要打开的文件: “)<br>fo &#x3D; open(fname, “r”)for line in fo.readlines():<br>print(line)<br>fo.close()<br>D<br>用户输入文件路径，以文本文件方式读入文件内容并逐行打印<br>正确答案： A</li><li>能实现将一维数据写入CSV文件中的是<br>A<br>fo &#x3D; open(“price2016bj.csv”, “w”)<br>ls &#x3D; [‘AAA’, ‘BBB’, ‘CCC’, ‘DDD’]<br>fo.write(“,”.join(ls)+ “\n”)<br>fo.close()<br>B<br>fr &#x3D; open(“price2016.csv”, “w”)<br>ls &#x3D; []for line in fo:<br>line &#x3D; line.replace(“\n”,””)<br>ls.append(line.split(“,”))print(ls)<br>fo.close()<br>C<br>fo &#x3D; open(“price2016bj.csv”, “r”)<br>ls &#x3D; [‘AAA’, ‘BBB’, ‘CCC’, ‘DDD’]<br>fo.write(“,”.join(ls)+ “\n”)<br>fo.close()<br>D<br>fname &#x3D; input(“请输入要写入的文件: “)<br>fo &#x3D; open(fname, “w+”)<br>ls &#x3D; [“AAA”, “BBB”, “CCC”]<br>fo.writelines(ls)for line in fo:<br>print(line)<br>fo.close()<br>正确答案： A</li><li>以下选项中不是Python文件读操作方法的是<br>A<br>readline<br>B<br>readall<br>C<br>readtext<br>D<br>read<br>正确答案： C</li><li>关于Python语言的变量，以下选项中说法正确的是<br>A<br>随时声明、随时使用、随时释放<br>B<br>随时命名、随时赋值、随时使用<br>C<br>随时声明、随时赋值、随时变换类型<br>D<br>随时命名、随时赋值、随时变换类型<br>正确答案： B</li><li>给出如下代码：<br>while True:<br>guess &#x3D; eval(input())if guess &#x3D;&#x3D; 0x452&#x2F;&#x2F;2:<br>break<br>作为输入能够结束程序运行的是<br>A<br>553<br>B<br>0x452<br>C<br>“0x452&#x2F;&#x2F;2”<br>D<br>break<br>正确答案： A</li></ol>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>cs231n&amp;assignment2</title>
      <link href="/2022/10/17/%E5%A4%A7%E5%9B%9B%E4%B8%8A%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0/cs231n&amp;assignment2/"/>
      <url>/2022/10/17/%E5%A4%A7%E5%9B%9B%E4%B8%8A%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0/cs231n&amp;assignment2/</url>
      
        <content type="html"><![CDATA[<p>作业网址：</p><p><a href="https://cs231n.github.io/assignments2022/assignment2/#goals">Assignment 2 (cs231n.github.io)</a></p><h1 id="任务1"><a href="#任务1" class="headerlink" title="任务1"></a>任务1</h1><p>首先读入数据</p>]]></content>
      
      
      <categories>
          
          <category> 深度学习 </category>
          
          <category> cs231n </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 深度学习 </tag>
            
            <tag> cs231n </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>cs231n&amp;lecture6</title>
      <link href="/2022/10/17/%E5%A4%A7%E5%9B%9B%E4%B8%8A%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0/cs231n&amp;lecture6/"/>
      <url>/2022/10/17/%E5%A4%A7%E5%9B%9B%E4%B8%8A%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0/cs231n&amp;lecture6/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.bilibili.com/video/BV1nJ411z7fe/?p=13&spm_id_from=pageDriver&vd_source=6eec2f14c9cf0fcea00a0d29ba245c79">【13】6 训练神经网络(上)-激活函数_哔哩哔哩_bilibili</a></p><p><a href="http://cs231n.stanford.edu/slides/2017/cs231n_2017_lecture6.pdf">cs231n_2017_lecture6.pdf (stanford.edu)</a></p><h2 id="主要内容"><a href="#主要内容" class="headerlink" title="主要内容"></a>主要内容</h2><p>如何训练cnn网络，以下是主要思路。</p><p><img src="/../../images/image-20221017085608377.png" alt="image-20221017085608377"></p><h1 id="Part1"><a href="#Part1" class="headerlink" title="Part1"></a>Part1</h1><h2 id="Activation-Function"><a href="#Activation-Function" class="headerlink" title="Activation Function"></a>Activation Function</h2><p>比较不同损失函数</p><ul><li>Sigmoid</li></ul><p>x输入太大（太小）梯度就没了；如果x恒正或恒负也会出问题，不是zero-centered：sigmod函数输出总是大于0，不够灵活<strong>导致梯度更新一直朝一个方向不会转弯</strong>；exp函数计算量过大</p><p>重点解释一下什么叫做zero-centered，<strong>Sigmoid函数的输出不是零中心</strong></p><p><img src="/../../images/image-20221017105146500.png" alt="image-20221017105146500"></p><ul><li>tanh</li></ul><p>解决了第二个问题</p><ul><li>relu&#x3D;max(0，x）</li></ul><p> $$\frac{\partial L}{\partial W}&#x3D;\frac{\partial L}{\partial f}\frac{\partial f}{\partial y}\frac{\partial y}{\partial W}&#x3D;I_{y&gt;0} X,y&#x3D;WX+b$$</p><p>只要一开始W没设置好，y&lt;0，那么这个梯度就会一直为0，不会更新，叫做dead ReLU</p><ul><li>Leaky ReLU f(x)&#x3D;max(0.01x,x)</li></ul><p>没有dead这个问题（对比ReLU）</p><ul><li>PReLU</li></ul><p><img src="/../../images/image-20221020115031572.png" alt="image-20221020115031572"></p><p>其中$\alpha$也是一个参数（和W一样）</p><ul><li><p>maxout</p><p><img src="/../../images/image-20221020115409813.png" alt="image-20221020115409813"></p></li></ul><p>可以用但是参数翻倍</p><p>综上，选择的规则：</p><p><img src="/../../images/image-20221017105535144.png" alt="image-20221017105535144"></p><ul><li>Data Preprocessing 数据预处理</li></ul><p>简单来说有均值处理，方差处理，PCA处理（主成分分析法）</p><ul><li>Weight Initialization权重初始化</li></ul><p>Q：W全为0</p><p>A：所有的神经元都在做一样的事情，都有一样的梯度和输出等</p><p>权重初始化是一件很麻烦的事情，权重太小，网络会崩溃（W为0，导致下一层的X为0，导致下一层的梯度为0，不更新），权重太大，网络饱和。就是W太大了，导致乘进去就是</p><p><img src="/../../images/image-20221021094451798.png" alt="image-20221021094451798"></p><p>权重设置公式</p><p><img src="/../../images/image-20221021094533623.png" alt="image-20221021094533623"></p><h2 id="Part2"><a href="#Part2" class="headerlink" title="Part2"></a>Part2</h2><h3 id="Batch-Normalization"><a href="#Batch-Normalization" class="headerlink" title="Batch Normalization"></a>Batch Normalization</h3><p> 目的：让输入的数据（每一层，在全连接层&#x2F;卷积层后，激活函数前）都是标准高斯分布（中心极限定理），更有利于特征提取已经提高收敛速度</p><p>优点：</p><ul><li>改善梯度在网络中的迭代</li><li>更高的学习速率</li><li>减少对初始化的依赖性</li></ul><p><img src="/../../images/image-20221021105553689.png" alt="image-20221021105553689"></p><p>工作流程</p><p><img src="/../../images/image-20221021105810899.png" alt="image-20221021105810899"></p><p>事实上，$\gamma$和$\beta$趋向于下图，都是需要通过网络学习的参数，另外，事实上由于小批量（其实批量不应该过小），每次的样本均值和方差都是随机的，所以相当于引入了噪音，网络需要学习的也就是吧这个噪音减小。</p><p><img src="/../../images/image-20221021105905825.png" alt="image-20221021105905825"></p><h3 id="Babysitting-the-Learning-Process"><a href="#Babysitting-the-Learning-Process" class="headerlink" title="Babysitting the Learning Process"></a>Babysitting the Learning Process</h3><p>参考：<a href="https://blog.csdn.net/huplion/article/details/79134767">(40条消息) 斯坦福cs231n学习笔记（10）——神经网络训练细节（训练过程，超参数优化）_胡大炮的妖孽人生的博客-CSDN博客_解释神经网络训练过程和超参数,并解释他们如何选择这些参数</a></p><ul><li><p>第一步：数据处理（正态分布处理）</p></li><li><p>第二步：选择一个好的结构（选择一组超参数），初始化权重等</p></li><li><p>第三步：检查loss的合理性</p></li><li><p>第四步：完整性检查</p><p>取一些数据，比如取20个训练样本和20个标签，保证我们的模型基于这一小部分数据训练。<br><img src="http://upload-images.jianshu.io/upload_images/2145769-6dafc4a0b8880c09.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="img"></p><p>由图可以看出，训练到最后的cost降为0，对于这一小部分数据可以得到100%的准确度，并且说明反向传播、学习速率和w值的更新都正常，因此对于这一小部分的数据达到过饱和，效果不错。如果做不到过饱和，说明你的实现过程有问题。</p><p>接着，开始考虑扩大训练集，然后找到合适的学习速率，这项工作是一定要做的，不能凭肉眼看出来，只能通过求出合适的学习速率。首先，先选一个小的学习速率，eg:1e-6，然后实验结果可以发现损失值非常小非常小的往下减少，所以这个学习速率可能太小了，基本上没有改变，也有可能是其他原因造成的，因为loss有问题，可能有一百万种原因导致。</p><p>这是一个很有意思的例子，由图中的结果可以看出，loss值基本没有下降，但是准确度（train蓝色框子）却从一开始的10%激增到了20%，Why?<br>是因为在刚开始训练时，这个损失会有一些小变动，但到训练到最后，你的损失值还是很大的，也就说，经过神经网络的训练，损失值变小的很慢，这个时候我们可能就需要提高我们的学习速率，这是一种很常见的情形。</p><h3 id="超参数的搜索"><a href="#超参数的搜索" class="headerlink" title="超参数的搜索"></a>超参数的搜索</h3><p>一般用随机搜索，因为这个覆盖面会更广，然后一般先对敏感性高的（学习率）进行搜索。</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> 深度学习 </category>
          
          <category> cs231n </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 深度学习 </tag>
            
            <tag> cs231n </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2022/10/17/%E5%A4%A7%E5%9B%9B%E4%B8%8A%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0/cs231n&amp;lecture7/"/>
      <url>/2022/10/17/%E5%A4%A7%E5%9B%9B%E4%B8%8A%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0/cs231n&amp;lecture7/</url>
      
        <content type="html"><![CDATA[<p>参考来源：</p><p><a href="https://www.bilibili.com/video/BV1nJ411z7fe?p=15&spm_id_from=pageDriver&vd_source=6eec2f14c9cf0fcea00a0d29ba245c79">【15】7 训练神经网络(下)-更好地优化_哔哩哔哩_bilibili</a></p><p><a href="http://cs231n.stanford.edu/slides/2017/cs231n_2017_lecture7.pdf">cs231n_2017_lecture7.pdf (stanford.edu)</a></p><h2 id="更好的优化"><a href="#更好的优化" class="headerlink" title="更好的优化"></a>更好的优化</h2><p>我们之前用的就是随机梯度下降，缺点：</p><ul><li>鞍点问题</li><li>一直扭来扭曲</li></ul><h3 id="SGD-Momentum"><a href="#SGD-Momentum" class="headerlink" title="SGD + Momentum"></a>SGD + Momentum</h3><p><img src="/../../images/image-20221022111618213.png" alt="image-20221022111618213"></p><p>引入了一个速度的概念，用于记录上一时刻的速度，并有一个超参数ρ（摩擦因数），以便在被困在最小点，或者在产生Z型走位的时候能加以纠正。</p><h3 id="Nesterov-Momentum"><a href="#Nesterov-Momentum" class="headerlink" title="Nesterov Momentum"></a>Nesterov Momentum</h3><p><img src="/../../images/image-20221022112325084.png" alt="image-20221022112325084"></p><p>增加了一个校正因子。</p><h3 id="AdaGrad-和-RMSProp"><a href="#AdaGrad-和-RMSProp" class="headerlink" title="AdaGrad 和 RMSProp"></a>AdaGrad 和 RMSProp</h3><p><img src="/../../images/image-20221022113639669.png" alt="image-20221022113639669"></p><p>AdaGrad除以了一个平方项，好处就是在一些梯度较大的值，能降低更新速度，梯度较小的值，会增加速度。但是也会有个问题就是容易被困住。</p><p>RMSProp多了一个削弱项。某种程度上解决了AdaGrad的问题。</p><h3 id="Adam（用的最多）"><a href="#Adam（用的最多）" class="headerlink" title="Adam（用的最多）"></a>Adam（用的最多）</h3><p><img src="/../../images/image-20221022114155269.png" alt="image-20221022114155269"></p><p>反正就是两种方法加起来吧。bias correction。</p><h3 id="L-BFGS"><a href="#L-BFGS" class="headerlink" title="L-BFGS"></a>L-BFGS</h3><p>在随机性小（full batch），参数少的情况下用的比较多 。应用二阶</p><h3 id="一般情况下"><a href="#一般情况下" class="headerlink" title="一般情况下"></a>一般情况下</h3><p>用Adam，然后特殊情况下L-BFGS</p><h3 id="集成学习"><a href="#集成学习" class="headerlink" title="集成学习"></a>集成学习</h3><p>用不同的独立的模型，然后单独预测</p><h2 id="正则化"><a href="#正则化" class="headerlink" title="正则化"></a>正则化</h2><p><img src="/../../images/image-20221023100509118.png" alt="image-20221023100509118"></p><p>通常情况下是这个，但是不太好</p><h3 id="Dropout"><a href="#Dropout" class="headerlink" title="Dropout"></a>Dropout</h3><p>在每一次向前传递中，随机设置一些神经元为零。0.5是常见的。一般使用在全连接层</p><p><img src="/../../images/image-20221023100631705.png" alt="image-20221023100631705"></p><p>一些解释：相当于集成了很多，因为每次都是一个子网络。</p><p>为了保证在测试的时候也保持像训练时候的输出（因为少了一半的神经元），所以会乘以一个系数，抵消掉所有的随机性，可以通过调节p一般是0.5，来调节正则化强度</p><p><img src="/../../images/image-20221023102429932.png" alt="image-20221023102429932"></p><p> 和BN相似的地方，训练的时候都引入了随机的噪声，但是在测试的时候又要抵消这种噪声</p><h3 id="数据增强"><a href="#数据增强" class="headerlink" title="数据增强"></a>数据增强</h3><p><img src="/../../images/image-20221023104430390.png" alt="image-20221023104430390"></p><p>训练的时候，会缩放大小或者翻转。测试的时候，会重新缩放图片，并且会分片，翻转。</p><h3 id="DropConnect"><a href="#DropConnect" class="headerlink" title="DropConnect"></a>DropConnect</h3><p>跟dropout类似</p><p><img src="/../../images/image-20221023105836007.png" alt="image-20221023105836007"></p><p>应该是W随机少一半吧</p><h3 id="Fractional-Max-Pooling"><a href="#Fractional-Max-Pooling" class="headerlink" title="Fractional Max Pooling"></a>Fractional Max Pooling</h3><p>用得不多，分数最大池化</p><h3 id="Stochastic-Depth"><a href="#Stochastic-Depth" class="headerlink" title="Stochastic Depth"></a>Stochastic Depth</h3><p>随机深度</p><h2 id="迁移学习-transfer-learning"><a href="#迁移学习-transfer-learning" class="headerlink" title="迁移学习 transfer learning"></a>迁移学习 transfer learning</h2><p>目的：怎么利用原来的网络来训练新的数据</p><p><img src="/../../images/image-20221023112638950.png" alt="image-20221023112638950"></p><p>分为以下四种情况：</p><ul><li>当新数据与原始数据很像时：<ul><li>数据少，只用重新训练第一层网络（记得修改权重矩阵大小以适应数据集）</li><li>数据多，可以训练多层</li></ul></li><li>不像的时候：<ul><li>数据少，不停地尝试重新训练线性分类器</li><li>重新训练算了</li></ul></li></ul><p>一般情况下，都是在imagenet训练好cnn网络，然后自己精调</p>]]></content>
      
      
      <categories>
          
          <category> 深度学习 </category>
          
          <category> cs231n </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 深度学习 </tag>
            
            <tag> cs231n </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>cs231n&amp;lecture4</title>
      <link href="/2022/10/14/%E5%A4%A7%E5%9B%9B%E4%B8%8A%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0/cs231n&amp;lecture4/"/>
      <url>/2022/10/14/%E5%A4%A7%E5%9B%9B%E4%B8%8A%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0/cs231n&amp;lecture4/</url>
      
        <content type="html"><![CDATA[<p>参考来源：</p><p><a href="http://cs231n.stanford.edu/slides/2017/">Index of &#x2F;slides&#x2F;2017 (stanford.edu)</a></p><p><a href="https://www.bilibili.com/video/BV1nJ411z7fe?p=8&spm_id_from=pageDriver&vd_source=6eec2f14c9cf0fcea00a0d29ba245c79">【08】4 介绍神经网络-反向传播_哔哩哔哩_bilibili</a></p><h2 id="反向传播"><a href="#反向传播" class="headerlink" title="反向传播"></a>反向传播</h2><p>反向传播原理：</p><p><img src="/../../images/image-20221015144133922.png" alt="image-20221015144133922"></p><p>假设当前已知x，y，z的值，前向传播算出f的值，（中间所有计算的结果都要记录着），以便算出对应的梯度值，然后再从后往前传播回去。</p><p>更复杂的一个例子：sigmod函数的反向传播</p><p><img src="/../../images/image-20221015152139006.png" alt="image-20221015152139006"></p><p><img src="/../../images/image-20221015152706973.png" alt="image-20221015152706973"></p><p><img src="/../../images/image-20221015152719342.png" alt="image-20221015152719342"></p><p>或者可以直接利用sigmod函数求导。反正就是利用计算图 </p><ul><li>max函数的反向传播</li></ul><p><img src="/../../images/image-20221015152937023.png" alt="image-20221015152937023"></p><p>只看z和w，取最大的就反向传播，因为只有最大值能影响到最后的值</p><h3 id="矩阵和向量情况下"><a href="#矩阵和向量情况下" class="headerlink" title="矩阵和向量情况下"></a>矩阵和向量情况下</h3><p><img src="/../../images/image-20221015155404795.png" alt="image-20221015155404795"></p><p><img src="/../../images/image-20221015155415537.png" alt="image-20221015155415537"></p><p> 主要有两个难点：</p><ul><li>一个是f对q的偏导数，这个展开了然后对q1，q2求导即可</li><li>另一个是q对$W_{i,j}$的偏导数，显然展开以后（以第一行第一个为例，i&#x3D;1,j&#x3D;1），对其求导只剩下x1，然后对应了第一行，所以结果就是q1对w11求导结果是x1，以此类推。</li></ul><p>最后得到结果：矩阵求导</p><p><img src="/../../images/image-20221015160852963.png" alt="image-20221015160852963"></p><h2 id="神经网络"><a href="#神经网络" class="headerlink" title="神经网络"></a>神经网络</h2>]]></content>
      
      
      <categories>
          
          <category> 深度学习 </category>
          
          <category> cs231n </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 深度学习 </tag>
            
            <tag> cs231n </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>cs231n&amp;lecture3</title>
      <link href="/2022/10/14/%E5%A4%A7%E5%9B%9B%E4%B8%8A%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0/cs231n&amp;lecture3/"/>
      <url>/2022/10/14/%E5%A4%A7%E5%9B%9B%E4%B8%8A%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0/cs231n&amp;lecture3/</url>
      
        <content type="html"><![CDATA[<p>参考来源：</p><p><a href="http://cs231n.stanford.edu/slides/2017/">Index of &#x2F;slides&#x2F;2017 (stanford.edu)</a></p><p><a href="https://www.bilibili.com/video/BV1nJ411z7fe?p=7&vd_source=6eec2f14c9cf0fcea00a0d29ba245c79">【07】3 损失函数和优化介绍_哔哩哔哩_bilibili</a></p><h2 id="损失函数"><a href="#损失函数" class="headerlink" title="损失函数"></a>损失函数</h2><p><img src="/../../images/image-20221015095841652.png" alt="image-20221015095841652"></p><p>由于多分类问题存在一定的分类不确定性，因此我们需要定义一个损失函数，对我们的训练数据做出的模型进行评估。</p><p>最小化损失函数（优化）</p><h3 id="一个例子"><a href="#一个例子" class="headerlink" title="一个例子"></a>一个例子</h3><p>对于一个三分类问题，定义一个损失函数</p><p><img src="/../../images/image-20221015100450961.png" alt="image-20221015100450961"></p><p>其中hinge loss（<a href="https://blog.csdn.net/hustqb/article/details/78347713">(40条消息) Hinge loss_hustqb的博客-CSDN博客_hinge_loss</a>）是一个损失函数，常用于svm。主要意思就是，把大于真实标签的分数的值与真实的值相减得到误差（小于就不算了，所以是0；1是阈值，可以调整）</p><p>最终的损失函数<img src="/../../images/image-20221015100506854.png" alt="image-20221015100506854"></p><p>第一个例子的损失</p><p><img src="/../../images/image-20221015101259894.png" alt="image-20221015101259894"></p><p>第三个例子的损失</p><p><img src="/../../images/image-20221015101249551.png" alt="image-20221015101249551"></p><p>最后的总误差，全部加起来求平均</p><p><img src="/../../images/image-20221015101409808.png" alt="image-20221015101409808"></p><h3 id="避免过拟合"><a href="#避免过拟合" class="headerlink" title="避免过拟合"></a>避免过拟合</h3><p><img src="/../../images/image-20221015103522987.png" alt="image-20221015103522987"></p><p>引入一个正则化项，类似于<strong>奥卡姆剃刀原则</strong>，当训练的误差类似时，选择模型简单的。正则化项选择</p><p><img src="/../../images/image-20221015104434203.png" alt="image-20221015104434203"></p><p>一个例子：</p><p><img src="/../../images/image-20221015104521403.png" alt="image-20221015104521403"></p><p>不过事实上，L1是w2更大de （更复杂），就是体现出模型的复杂性</p><h2 id="Softmax"><a href="#Softmax" class="headerlink" title="Softmax"></a>Softmax</h2><p><img src="/../../images/image-20221015105402451.png" alt="image-20221015105402451"></p><ul><li>首先把每一类的分数对数归一化（softmax函数）</li><li>$L_i$的意思大概要最大化P这个概率相当于最小化Li，Li定义为损失函数</li></ul><p>一个例子：</p><p><img src="/../../images/image-20221015111239934.png" alt="image-20221015111239934"></p><p>以此定义损失函数计算出来的值。</p><p>问题：这个损失函数的最小值和最大值是多少。</p><p>A：0-正无穷。分类的越准确，概率月接近1，因此log后就是0</p><p>回顾一下：不同的损失函数</p><p><img src="/../../images/image-20221015112005616.png" alt="image-20221015112005616"></p><h2 id="优化"><a href="#优化" class="headerlink" title="优化"></a>优化</h2><p> 核心就是利用梯度不断接近最优解（局部最优解）</p><p>反正大概意思就是，找到最优的W。可以利用函数的性质，得到在某一点W时候的梯度，然后一直更新W得到最优W。</p><p>两个超参数：学习率（LR learning rate），batch（选一部分数据来更新）（随机梯度下降）</p>]]></content>
      
      
      <categories>
          
          <category> 深度学习 </category>
          
          <category> cs231n </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 深度学习 </tag>
            
            <tag> cs231n </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>cs231n&amp;lecture5</title>
      <link href="/2022/10/14/%E5%A4%A7%E5%9B%9B%E4%B8%8A%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0/cs231n&amp;lecture5/"/>
      <url>/2022/10/14/%E5%A4%A7%E5%9B%9B%E4%B8%8A%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0/cs231n&amp;lecture5/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.bilibili.com/video/BV1nJ411z7fe?p=12&vd_source=6eec2f14c9cf0fcea00a0d29ba245c79">【12】5.2 卷积神经网络-视觉之外的卷积神经网络_哔哩哔哩_bilibili</a></p><h2 id="卷积层"><a href="#卷积层" class="headerlink" title="卷积层"></a>卷积层</h2><p><img src="/../../images/image-20221015224228548.png" alt="image-20221015224228548"></p><p>首先输入一张图片，是3，32,32的大小，引入一个卷积核filter，5,5,3，不停滑动，然后就得到了一个下一层。取多个filter那么就得到更多层（如果我们有6个filter，下一层就是28,28,6的大小）</p><p><img src="/../../images/image-20221015224419248.png" alt="image-20221015224419248"></p><p>中间加入激活函数，然后类似于神经网络一层一层，就有</p><p><img src="/../../images/image-20221015224606895.png" alt="image-20221015224606895"></p><h3 id="实际工作流程"><a href="#实际工作流程" class="headerlink" title="实际工作流程"></a>实际工作流程</h3><ul><li><p>卷积核：前面解释过了，卷积核的深度&#x3D;前一层卷积层的深度，比如一开始是3，然后是6，然后是10（上面的例子）</p></li><li><p>步长：卷积核每次移动的幅度，如1,2，3</p></li></ul><p><img src="/../../images/image-20221016082952691.png" alt="image-20221016082952691"></p><p>有一个公式（N-F）&#x2F;步长+1&#x3D;输出</p><ul><li>padding：在外面补充0，然后再进行卷积，相应的公式也会发生变化（N增加了2）</li></ul><p><img src="/../../images/image-20221016083313036.png" alt="image-20221016083313036"></p><p>注：也有其他的边缘处理，为了更好的处理边缘的特征</p><p>一个练习：</p><p><img src="/../../images/image-20221016084120375.png" alt="image-20221016084120375"></p><p>也输出：（32+2*2-5）&#x2F;1+1&#x3D;32，输出32，32,10（深度）</p><p>Q：参数有多少个？</p><p>A：5，5，3,（深度）&#x3D;75，还有一个偏差项1，所以一个filter有76，有10个所以有760个</p><h3 id="一些术语："><a href="#一些术语：" class="headerlink" title="一些术语："></a>一些术语：</h3><ul><li>感受野（receptive field），就是filter的大小，比如是5*5的大小</li><li>权值共享：一个filter作用于全部图片上</li></ul><h3 id="池化层-pooling-layer"><a href="#池化层-pooling-layer" class="headerlink" title="池化层 pooling layer"></a>池化层 pooling layer</h3><p>有很多种方法降采样，然后作用就是为了使参数变少，不过现在计算量足够了，就可以用卷积核代替了（步长大一点之类的）</p><p>（降采样，深度是一样的）</p><p><img src="/../../images/image-20221016113317260.png" alt="image-20221016113317260"></p><p>maxpooling：取每个区域的最大值</p><p><img src="/../../images/image-20221016113817713.png" alt="image-20221016113817713"></p><p>输入输出大小计算公式。这个很好理解，上面的例子就是W1&#x3D;4,F&#x3D;2,S&#x3D;2,W1&#x3D;2，其中F&#x3D;2，S&#x3D;2是最常用的。</p>]]></content>
      
      
      <categories>
          
          <category> 深度学习 </category>
          
          <category> cs231n </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 深度学习 </tag>
            
            <tag> cs231n </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>李沐第二章</title>
      <link href="/2022/10/12/%E5%A4%A7%E5%9B%9B%E4%B8%8A%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0/%E6%9D%8E%E6%B2%90%E5%8A%A8%E6%89%8B%E5%AD%A6%E4%B9%A0%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/%E6%9D%8E%E6%B2%90%E7%AC%AC%E4%BA%8C%E7%AB%A0%E6%AF%85/"/>
      <url>/2022/10/12/%E5%A4%A7%E5%9B%9B%E4%B8%8A%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0/%E6%9D%8E%E6%B2%90%E5%8A%A8%E6%89%8B%E5%AD%A6%E4%B9%A0%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/%E6%9D%8E%E6%B2%90%E7%AC%AC%E4%BA%8C%E7%AB%A0%E6%AF%85/</url>
      
        <content type="html"><![CDATA[<p>参考来源：<a href="https://zh-v2.d2l.ai/chapter_preliminaries/linear-algebra.html">2.3. 线性代数 — 动手学深度学习 2.0.0-beta1 documentation (d2l.ai)</a></p><h2 id="2-3线性代数"><a href="#2-3线性代数" class="headerlink" title="2.3线性代数"></a>2.3线性代数</h2><h3 id="2-3-4-张量"><a href="#2-3-4-张量" class="headerlink" title="2.3.4 张量"></a>2.3.4 张量</h3><p>例如，向量是一阶张量，矩阵是二阶张量。</p><h3 id="2-3-5降维"><a href="#2-3-5降维" class="headerlink" title="2.3.5降维"></a>2.3.5降维</h3><p>就是把相应的轴相加起来</p><h3 id="2-3-10-范数"><a href="#2-3-10-范数" class="headerlink" title="2.3.10 范数"></a>2.3.10 范数</h3><p>反正就是返回一个值</p><h2 id="2-4-微积分"><a href="#2-4-微积分" class="headerlink" title="2.4 微积分"></a>2.4 微积分</h2><h3 id="2-4-3-梯度"><a href="#2-4-3-梯度" class="headerlink" title="2.4.3 梯度"></a>2.4.3 梯度</h3><p><img src="/../../../images/image-20221013095052042.png" alt="image-20221013095052042"></p><h3 id="2-4-4-链式法则"><a href="#2-4-4-链式法则" class="headerlink" title="2.4.4 链式法则"></a>2.4.4 链式法则</h3><p><img src="/../../../images/image-20221013095218856.png" alt="image-20221013095218856"></p><h2 id="2-5-自动微分"><a href="#2-5-自动微分" class="headerlink" title="2.5 自动微分"></a>2.5 自动微分</h2><p>深度学习框架通过自动计算导数，即<em>自动微分</em>（automatic differentiation）来加快求导。</p><h3 id="2-5-1一个简单的例子"><a href="#2-5-1一个简单的例子" class="headerlink" title="2.5.1一个简单的例子"></a>2.5.1一个简单的例子</h3><p><img src="/../../../images/image-20221013100413648.png" alt="image-20221013100413648"></p><p>这个还比较简单，就是在已知值得时候，用grad就是对应值得梯度</p>]]></content>
      
      
      <categories>
          
          <category> 深度学习 </category>
          
          <category> 李沐 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 深度学习 </tag>
            
            <tag> 李沐 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>李沐第三章</title>
      <link href="/2022/10/12/%E5%A4%A7%E5%9B%9B%E4%B8%8A%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0/%E6%9D%8E%E6%B2%90%E5%8A%A8%E6%89%8B%E5%AD%A6%E4%B9%A0%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/%E6%9D%8E%E6%B2%90%E7%AC%AC%E4%B8%89%E7%AB%A0/"/>
      <url>/2022/10/12/%E5%A4%A7%E5%9B%9B%E4%B8%8A%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0/%E6%9D%8E%E6%B2%90%E5%8A%A8%E6%89%8B%E5%AD%A6%E4%B9%A0%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/%E6%9D%8E%E6%B2%90%E7%AC%AC%E4%B8%89%E7%AB%A0/</url>
      
        <content type="html"><![CDATA[<p>参考来源：<a href="https://zh-v2.d2l.ai/chapter_linear-networks/linear-regression.html">3.1. 线性回归 — 动手学深度学习 2.0.0-beta1 documentation (d2l.ai)</a></p><h2 id="3-1-线性回归"><a href="#3-1-线性回归" class="headerlink" title="3.1 线性回归"></a>3.1 线性回归</h2><p><img src="/../../../images/image-20221013101800001.png" alt="image-20221013101800001"></p><h2 id="3-4-softmax运算"><a href="#3-4-softmax运算" class="headerlink" title="3.4 softmax运算"></a>3.4 softmax运算</h2><p><img src="/../../../images/image-20221013111454560.png" alt="image-20221013111454560"></p>]]></content>
      
      
      <categories>
          
          <category> 深度学习 </category>
          
          <category> 李沐 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 深度学习 </tag>
            
            <tag> 李沐 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>李宏毅第一节</title>
      <link href="/2022/10/08/%E5%A4%A7%E5%9B%9B%E4%B8%8A%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0/%E6%9D%8E%E5%AE%8F%E6%AF%85%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/%E7%AC%AC%E4%B8%80%E8%8A%82/"/>
      <url>/2022/10/08/%E5%A4%A7%E5%9B%9B%E4%B8%8A%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0/%E6%9D%8E%E5%AE%8F%E6%AF%85%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/%E7%AC%AC%E4%B8%80%E8%8A%82/</url>
      
        <content type="html"><![CDATA[<p>视频来源</p><p><a href="https://www.bilibili.com/video/BV1Wv411h7kN/?p=3&spm_id_from=pageDriver&vd_source=6eec2f14c9cf0fcea00a0d29ba245c79">第一节 2021 - (上) - 机器学习基本概念简介_哔哩哔哩_bilibili</a></p><p><img src="/../../../images/image-20221008170111797.png" alt="image-20221008170111797"></p>]]></content>
      
      
      <categories>
          
          <category> 深度学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 深度学习 </tag>
            
            <tag> 李宏毅 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>yolov5——在Windows下的尝试</title>
      <link href="/2022/09/23/%E5%A4%A7%E5%88%9B/yolov5%E5%AD%A6%E4%B9%A0/2022-09-23-yolov5%E2%80%94%E2%80%94yolov5%E7%BD%91%E7%BB%9C%E6%9E%B6%E6%9E%84/"/>
      <url>/2022/09/23/%E5%A4%A7%E5%88%9B/yolov5%E5%AD%A6%E4%B9%A0/2022-09-23-yolov5%E2%80%94%E2%80%94yolov5%E7%BD%91%E7%BB%9C%E6%9E%B6%E6%9E%84/</url>
      
        <content type="html"><![CDATA[<p>参考来源：<a href="https://www.bilibili.com/video/BV1rt4y1W7Dc?p=9&amp;vd_source=6eec2f14c9cf0fcea00a0d29ba245c79">9. 9YOLO目标检测基本思想._哔哩哔哩_bilibili</a></p><p><a href="https://www.bilibili.com/video/BV1XW4y1a7f4/?p=10&amp;spm_id_from=pageDriver&amp;vd_source=6eec2f14c9cf0fcea00a0d29ba245c79">5-置信度误差与优缺点分析_哔哩哔哩_bilibili</a></p><h1>目标检测的发展史</h1><p><img src="../../../images/image-20220925142355878.png" alt="image-20220925142355878"></p><p>单阶段和多阶段的区别</p><p><img src="../../../images/image-20220925142542713.png" alt="image-20220925142542713"></p><p>输入-骨干网络-连接（特征学习）-预测（输出）</p><ul><li>单阶段：比较紧密</li><li>双阶段：比较稀疏</li></ul>]]></content>
      
      
      <categories>
          
          <category> 大创 </category>
          
          <category> yolov5 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 大创 </tag>
            
            <tag> yolov5 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>yolov5——在Windows下的尝试</title>
      <link href="/2022/09/23/%E5%A4%A7%E5%88%9B/yolov5%E5%AD%A6%E4%B9%A0/yolov5%E2%80%94%E2%80%94%E5%9C%A8Windows%E4%B8%8B%E7%9A%84%E5%B0%9D%E8%AF%95/"/>
      <url>/2022/09/23/%E5%A4%A7%E5%88%9B/yolov5%E5%AD%A6%E4%B9%A0/yolov5%E2%80%94%E2%80%94%E5%9C%A8Windows%E4%B8%8B%E7%9A%84%E5%B0%9D%E8%AF%95/</url>
      
        <content type="html"><![CDATA[<p>参考来源：<a href="https://www.bilibili.com/video/BV1rt4y1W7Dc?p=6&amp;vd_source=6eec2f14c9cf0fcea00a0d29ba245c79">6. 6Windows系统上训练PASCAL VOC数据集._哔哩哔哩_bilibili</a></p><h1>1 前提条件</h1><p>已经安装好anaconda和pytorch以及相应的cuda等</p><h1>2 yolov5项目克隆</h1><h2 id="1、克隆"><a class="header-anchor" href="#1、克隆">¶</a>1、克隆</h2><pre class="line-numbers language-none"><code class="language-none">git clone https:&#x2F;&#x2F;github.com&#x2F;ultralytics&#x2F;yolov5.git<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="2、安装requirement"><a class="header-anchor" href="#2、安装requirement">¶</a>2、安装requirement</h2><p>在yolov5路径下执行：</p><pre class="line-numbers language-none"><code class="language-none">pip install -r requirements.txt<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="3、安装下载权重文件"><a class="header-anchor" href="#3、安装下载权重文件">¶</a>3、安装下载权重文件</h2><p><a href="http://xn--yolov5s-nw3k7779b.pt">下载yolov5s.pt</a>，<a href="http://yolov5m.pt">yolov5m.pt</a>，<a href="http://yolov5l.pt">yolov5l.pt</a>，yolov5x.pt权重文件，并放置在weights文件夹下</p><p><strong>百度网盘下载链接:</strong></p><p>链接：<a href="https://pan.baidu.com/s/1RztRLwk3Dye9qkmXxG40JA">https://pan.baidu.com/s/1RztRLwk3Dye9qkmXxG40JA</a> 提取码：e2q0</p><h2 id="4）-安装测试"><a class="header-anchor" href="#4）-安装测试">¶</a>4） 安装测试</h2><pre class="line-numbers language-none"><code class="language-none">python detect.py --source .&#x2F;data&#x2F;images&#x2F; --weights .&#x2F;weights&#x2F;yolov5s.pt --conf 0.4<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>如果出现检测不到权重文件（比如我），把权重文件放在根目录</p><pre class="line-numbers language-none"><code class="language-none">python detect.py --source .&#x2F;data&#x2F;images&#x2F; --weights yolov5s.pt --conf 0.4<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h1>3 准备数据集</h1><h2 id="1）从百度网盘下载到yolov5目录下并解压"><a class="header-anchor" href="#1）从百度网盘下载到yolov5目录下并解压">¶</a>1）从百度网盘下载到yolov5目录下并解压</h2><ul><li>VOCtrainval_06-Nov-2007.tar</li><li>VOCtrainval_11-May-2012.tar</li><li>VOCtest_06-Nov-2007.tar</li><li>get_voc_windows.py</li></ul><p>注意：解压后把文件放在VOCdevkit文件夹内（包含VOC2007、VOC2012）</p><h2 id="2）生成训练集和验证集文件"><a class="header-anchor" href="#2）生成训练集和验证集文件">¶</a>2）生成训练集和验证集文件</h2><pre class="line-numbers language-none"><code class="language-none">python get_voc_windows.py<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>该文件也在百度网盘</p><p>最后在VOC文件夹生成训练集和测试集，分类为图片和labels</p><ul><li><p>labels下的文件是JPEGImages文件夹下每一个图像的yolo格式的标注文件，这是由annotations的xml标注文件转换来的</p></li><li><p>train.txt和2007_test.txt分别给出了训练集图片和验证集图片的列表，含有每个图片的路径和文件 名。</p></li><li><p>VOC/images文件夹下有train和val文件夹，分别放置训练集和验证集图片；VOC/labels文件夹有train和val文件夹，分别放置训练集和验证集标签（yolo格式）。</p></li></ul><h2 id="3）修改配置文件"><a class="header-anchor" href="#3）修改配置文件">¶</a>3）修改配置文件</h2><ol><li>新建文件data/voc-new.yaml（<strong>选择数据</strong>）</li></ol><p>可以复制data/voc.yaml再根据自己情况的修改；可以重新命名如：data/voc-new.yaml然后修改配置参数</p><pre class="line-numbers language-none"><code class="language-none"># download command&#x2F;URL (optional)#download: bash data&#x2F;scripts&#x2F;get_voc.sh# train and val data as 1) directory: path&#x2F;images&#x2F;, 2) file: path&#x2F;images.txt, or 3) list: [path1&#x2F;images&#x2F;, path2&#x2F;images&#x2F;]train: VOC&#x2F;images&#x2F;train&#x2F;  # 16551 imagesval: VOC&#x2F;images&#x2F;val&#x2F;  # 4952 images<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="2"><li>新建文件models/yolov5s-voc.yaml（<strong>选择模型网络</strong>）</li></ol><p>可以复制models/yolov5s.yaml再根据自己情况的修改；可以重新命名如：models/yolov5s-voc.yaml然后修改配置参数</p><pre class="line-numbers language-none"><code class="language-none"># parametersnc: 20  # number of classes #设置种类参数<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="4）训练自己的数据集"><a class="header-anchor" href="#4）训练自己的数据集">¶</a>4）训练自己的数据集</h2><h3 id="1-训练命令"><a class="header-anchor" href="#1-训练命令">¶</a>1. 训练命令</h3><pre class="line-numbers language-none"><code class="language-none">python train.py --data data&#x2F;voc-new.yaml --cfg models&#x2F;yolov5s-voc.yaml --weights weights&#x2F;yolov5s.pt --batch-size 16 --epochs 200<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>data：所选择的数据</li><li>cfg：选用的模型</li><li>weights权重文件</li><li>batch-size：一次训练抓取的样本数（也是一个参数）</li><li>epoch：训练多少次</li></ul><p>出现的问题：</p><p>1、（由于电脑一些问题，会出现gpu使用问题）</p><p>[BrokenPipeError: <a href="https://cxymm.net/article/excelNo1/124020477">Errno 32] Broken pipe_excelNo1的博客-程序员秘密 - 程序员秘密 (cxymm.net)</a></p><p>修改了data/dataloader.py中146行</p><p>2、训练太慢了，几乎十分钟一个epoch</p><p><img src="../../../images/image-20220925124742003.png" alt="image-20220925124742003"></p><h3 id="2-训练过程可视化："><a class="header-anchor" href="#2-训练过程可视化：">¶</a>2. 训练过程可视化：</h3><p>在yolov5路径下执行</p><pre class="line-numbers language-none"><code class="language-none">tensorboard --logdir&#x3D;.&#x2F;runs<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="7-测试训练出的网络模型"><a class="header-anchor" href="#7-测试训练出的网络模型">¶</a>7) 测试训练出的网络模型</h2><h3 id="1-测试图片"><a class="header-anchor" href="#1-测试图片">¶</a>1.测试图片</h3><p>在yolov5路径下执行</p><pre class="line-numbers language-none"><code class="language-none">python detect.py --source .&#x2F;VOC&#x2F;images&#x2F;val&#x2F;000001.jpg --weights runs&#x2F;exp0&#x2F;weights&#x2F;best.pt --conf 0.4<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>source：需要检测那张图片</li><li>weight：训练出来的权重文件</li><li>置信度阈值：0.4</li></ul><h3 id="2-性能统计"><a class="header-anchor" href="#2-性能统计">¶</a>2.性能统计</h3><pre class="line-numbers language-none"><code class="language-none">python test.py --data data&#x2F;voc-new.yaml --weights runs&#x2F;exp0&#x2F;weights&#x2F;best.pt --batch-size 16<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 大创 </category>
          
          <category> yolov5 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 大创 </tag>
            
            <tag> yolov5 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>yolov5——目标检测基础</title>
      <link href="/2022/09/23/%E5%A4%A7%E5%88%9B/yolov5%E5%AD%A6%E4%B9%A0/yolov5%E5%AD%A6%E4%B9%A0/"/>
      <url>/2022/09/23/%E5%A4%A7%E5%88%9B/yolov5%E5%AD%A6%E4%B9%A0/yolov5%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<h1>为什么</h1><p>学习资料参考：<a href="https://www.bilibili.com/video/BV1rt4y1W7Dc?p=4&amp;spm_id_from=pageDriver&amp;vd_source=6eec2f14c9cf0fcea00a0d29ba245c79">4. 4目标检测之性能指标和计算方法._哔哩哔哩_bilibili</a></p><h1>目标检测数据集</h1><ul><li><p>Pascal voc数据集，</p><ul><li>PASCAL V0C挑战赛在2005年至2012年间展开。<br>PASCAL V0C2007:9963张图像，24640个标注；PASCAL V0C2012:11530张图像，27450个标注<br>该数据集有20个分类：</li><li>Person:person<br>Animal:bird,cat,cow,dog,horse,sheep<br>Vehicle:aeroplane,bicycle,boat,bus,car,motorbike,train<br>Indoor:bottle,chair,dining table,potted plant,sofa,tv/monitor</li></ul></li><li><p>MS COCO</p><ul><li>MS COCO的全称是Microsoft Common Objects in Context,起源于是微软于<br>2014年出资标注的Microsoft COCO数据集，与ImageNet竞赛一样，被视为是计<br>算机视觉领域最受关注和最权威的比赛之一。</li><li>在ImageNet竞赛停办后，COCO竞赛就成为是当前目标识别、检测等领域的一个<strong>最<br>权威、最重要</strong>的标杆，也是目前该领域在国际上唯一能汇集Google、微软、<br>Facebook以及国内外众多顶尖院校和优秀创新企业共同参与的大赛。</li><li>80个类别，五十万个标注。11.5万训练，8千验证，两万多测试</li></ul></li></ul><h1>目标检测的性能指标</h1><h2 id="检测精度"><a class="header-anchor" href="#检测精度">¶</a>检测精度</h2><h3 id="混淆矩阵"><a class="header-anchor" href="#混淆矩阵">¶</a>混淆矩阵</h3><p><img src="../../../images/image-20220923144510553.png" alt="image-20220923144510553"></p><ul><li><p>精度precision：评估预测的准不准（预测对了的/本来是对的）</p></li><li><p>召回率recall：评估找的全不全（预测对了的/预测为对的）</p></li><li><p>准确率：预测对了的</p></li></ul><h3 id="IOU"><a class="header-anchor" href="#IOU">¶</a>IOU</h3><p><img src="../../../images/image-20220923152621868.png" alt="image-20220923152621868"></p><p>交/并</p><p>一般是设计阈值（0.5等）来判断对不对</p><h3 id="AP和mAP"><a class="header-anchor" href="#AP和mAP">¶</a>AP和mAP</h3><ul><li><p>AP衡量的是学习出来的模型在<strong>每个</strong>类别上的好坏</p></li><li><p>mAP衡量的是学出的模型在<strong>所有</strong>类别上的好坏，取均值</p></li><li><p>对于PASCAL VOC挑战，如果IoU&gt;0.5,则预测为正样本(TP)。但是，如果检测到<br>同一目标的多个检测，则视第一个检测为正样本(TP),而视其余检测为负样本(FP)。</p></li><li><p><img src="../../../images/image-20220923155420132.png" alt="image-20220923155420132"></p></li></ul><p>（在COCO数据集中，mAP是通过不同阈值IOU下所确定的均值）</p><h3 id="不同的AP"><a class="header-anchor" href="#不同的AP">¶</a>不同的AP</h3><p><img src="../../../images/image-20220923155823586.png" alt="image-20220923155823586"></p><p>在IOU不同时，PR曲线的趋势。AP是把它转换成直线图后计算面积。</p><p><img src="../../../images/image-20220923160447730.png" alt="image-20220923160447730"></p><p>一般有两种，不同的IoU和不同的不同的大小划分（区域大小）</p><h3 id="AP的计算过程"><a class="header-anchor" href="#AP的计算过程">¶</a>AP的计算过程</h3><p><img src="../../../images/image-20220923170343309.png" alt="image-20220923170343309"></p><p>根据不同PR曲线的recall和precision画图，得到图，然后近似计算</p><h2 id="检测速度"><a class="header-anchor" href="#检测速度">¶</a>检测速度</h2><ul><li>前传耗时(s):从输入一张图像到输出最终结果所消耗的时间，包括前处理耗时（如图<br>像归一化)、网络前传耗时、后处理耗时（如非极大值抑制）</li><li>每秒帧数FPS(Frames Per Second):每秒钟能处理的图像数量</li><li>浮点运算量(FLOPS):处理一张图像所需要的浮点运算数量，跟具体软硬件没有关系，<br>可以公平地比较不同算法之间的检测速度。</li></ul>]]></content>
      
      
      <categories>
          
          <category> 大创 </category>
          
          <category> yolov5 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 大创 </tag>
            
            <tag> yolov5 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20220912日记</title>
      <link href="/2022/09/12/%E7%94%9F%E6%B4%BB/%E7%9D%A1%E7%9C%A0%E4%BB%A5%E5%8F%8A%E4%B8%93%E6%B3%A8%E8%AE%A4%E7%9F%A5/"/>
      <url>/2022/09/12/%E7%94%9F%E6%B4%BB/%E7%9D%A1%E7%9C%A0%E4%BB%A5%E5%8F%8A%E4%B8%93%E6%B3%A8%E8%AE%A4%E7%9F%A5/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="你怎么能偷看人家日记呢！！" data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="cc98da8bfa8404250648ad061408597542c9f4880b68cedc04f304242ba59b4b">19f5612b4aec4e64cf47f8017ba485701ba6b044517c9e6f294a026357d6ebb29c044e7470e545586f4ca8e6b41e18cc</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">这玩意儿需要密码哦（日记专用密码）</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 202209diary </category>
          
      </categories>
      
      
        <tags>
            
            <tag> diary </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>yolo系列初步学习</title>
      <link href="/2022/09/04/%E5%A4%A7%E5%88%9B/yolo%E7%B3%BB%E5%88%97%E5%88%9D%E6%AD%A5%E5%AD%A6%E4%B9%A0/"/>
      <url>/2022/09/04/%E5%A4%A7%E5%88%9B/yolo%E7%B3%BB%E5%88%97%E5%88%9D%E6%AD%A5%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="你怎么能偷看人家日记呢！！" data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="857a2f3fa811c92efb86a9c93765fc046649c08cb9b76c7f71895efff807db6a"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">这玩意儿需要密码哦（日记专用密码）</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 大创 </category>
          
          <category> 人工智能 </category>
          
          <category> 机器学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 人工智能 </tag>
            
            <tag> 大创 </tag>
            
            <tag> 机器学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>卡尔曼滤波代码学习</title>
      <link href="/2022/08/25/%E5%A4%A7%E5%88%9B/%E5%8D%A1%E5%B0%94%E6%9B%BC%E6%BB%A4%E6%B3%A2%E4%BB%A3%E7%A0%81%E5%AD%A6%E4%B9%A0/"/>
      <url>/2022/08/25/%E5%A4%A7%E5%88%9B/%E5%8D%A1%E5%B0%94%E6%9B%BC%E6%BB%A4%E6%B3%A2%E4%BB%A3%E7%A0%81%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>最原始的是贝叶斯滤波，贝叶斯滤波基本思想，根本步骤与算法如下：</p><p><img src="/../../images/image-20220825201630325.png" alt="贝叶斯滤波步骤"></p><p><img src="/../../images/image-20220825201542903.png" alt="贝叶斯滤波算法"></p><p>最后的结果就是期望，根据后验概率密度函数$f_k^+(x)$计算期望，得到结果</p><p><img src="/../../images/image-20220825201823292.png" alt="计算期望"></p><h3 id="缺点：无穷积分计算量太大"><a href="#缺点：无穷积分计算量太大" class="headerlink" title="缺点：无穷积分计算量太大"></a>缺点：无穷积分计算量太大</h3><p><img src="/../../images/image-20220825201856540.png" alt="贝叶斯滤波的缺点"></p><h3 id="改进："><a href="#改进：" class="headerlink" title="改进："></a>改进：</h3><p><img src="/../../images/image-20220825201951329.png" alt="改进思路"></p><p>主要代表是KF卡尔曼滤波和PF粒子滤波，下面将主要介绍。</p><h1 id="卡尔曼滤波"><a href="#卡尔曼滤波" class="headerlink" title="卡尔曼滤波"></a>卡尔曼滤波</h1><h2 id="主要思想"><a href="#主要思想" class="headerlink" title="主要思想"></a>主要思想</h2><p>卡尔曼滤波的所有分布都是正态分布，递推计算各种期望，方差即可</p><p>初始条件：已知初始x0，所有观测{y}以及Q和R协方差矩阵，假设f为线性函数，可以是多项式</p><img src="../../images/image-20220525152541868.png" alt="image-20220525152541868" style="zoom:67%;" /><p>矩阵的计算公式（一般的应用都是矩阵形式的），具体推导思路：用一维的推导，将正态函数的概率密度函数代入贝叶斯滤波的公式中进行计算，得到新的分布函数（还是一个正态分布），摘取其期望和方差即可。</p><img src="../../images/image-20220525152417394.png" alt="image-20220525152417394" style="zoom:67%;" /><h2 id="模型1简单的一阶线性函数"><a href="#模型1简单的一阶线性函数" class="headerlink" title="模型1简单的一阶线性函数"></a>模型1简单的一阶线性函数</h2><p>首先生成原始信号</p><pre class="line-numbers language-matlab" data-language="matlab"><code class="language-matlab">t<span class="token operator">=</span><span class="token number">0.1</span><span class="token operator">:</span><span class="token number">0.01</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">;</span>L<span class="token operator">=</span><span class="token function">length</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">%生成真实信号x，以及观测y</span><span class="token comment">%初始化</span>x<span class="token operator">=</span><span class="token function">zeros</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span>L<span class="token punctuation">)</span><span class="token punctuation">;</span>y<span class="token operator">=</span>x<span class="token punctuation">;</span><span class="token comment">%生成信号，x=t^2</span><span class="token keyword">for</span> <span class="token number">i</span><span class="token operator">=</span><span class="token number">1</span><span class="token operator">:</span>L    <span class="token function">x</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token function">t</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">)</span><span class="token operator">^</span><span class="token number">2</span><span class="token punctuation">;</span>    <span class="token function">y</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token function">x</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token function">normrnd</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0.1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">end</span><span class="token function">plot</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span>x<span class="token punctuation">,</span>t<span class="token punctuation">,</span>y<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/../../images/image-20220825202523974.png" alt="原始信号"></p><p>写观测方程和预测方程，观测方程可以根据这个图像进行估算。（Q和R的选择：调参数）</p><pre class="line-numbers language-matlab" data-language="matlab"><code class="language-matlab"><span class="token comment">%% 开始滤波</span><span class="token comment">% 观测方程好写 yk=xk+r r~n(0,1)</span><span class="token comment">%最粗糙的</span><span class="token comment">%X(K)=X(K-1)+Q</span><span class="token comment">%Y(K)=X(K)+R</span><span class="token comment">%猜Q~N(0,1)</span>F1<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>H1<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>Q1<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>R1<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>Xplus1<span class="token operator">=</span><span class="token function">zeros</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span>L<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">%设置一个初值，假设Xplus(1)~N(0.01,0.01^2)初值比较准</span><span class="token comment">%X就是均值，P就是方差（协方差）</span><span class="token function">Xplus1</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token number">0.01</span><span class="token punctuation">;</span><span class="token comment">%设置初值</span>Pplus1<span class="token operator">=</span><span class="token number">0.01</span><span class="token operator">^</span><span class="token number">2</span><span class="token punctuation">;</span><span class="token comment">%设置初值方差</span><span class="token keyword">for</span> <span class="token number">i</span><span class="token operator">=</span><span class="token number">2</span><span class="token operator">:</span>L    <span class="token comment">% 预测步</span>    Xminus1<span class="token operator">=</span>F1<span class="token operator">*</span><span class="token function">Xplus1</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    Pminus1<span class="token operator">=</span>F1<span class="token operator">*</span>Pplus1<span class="token operator">*</span>F1<span class="token operator">'</span><span class="token operator">+</span>Q1<span class="token punctuation">;</span>    <span class="token comment">%更新步</span>    K1<span class="token operator">=</span><span class="token punctuation">(</span>Pminus1<span class="token operator">*</span>H1<span class="token operator">'</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token function">inv</span><span class="token punctuation">(</span>H1<span class="token operator">*</span>Pminus1<span class="token operator">*</span>H1<span class="token operator">'</span><span class="token operator">+</span>R1<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">Xplus1</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">)</span><span class="token operator">=</span>Xminus1<span class="token operator">+</span>K1<span class="token operator">*</span><span class="token punctuation">(</span><span class="token function">y</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">)</span><span class="token operator">-</span>H1<span class="token operator">*</span>Xminus1<span class="token punctuation">)</span><span class="token punctuation">;</span>    Pplus1<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">-</span>K1<span class="token operator">*</span>H1<span class="token punctuation">)</span><span class="token operator">*</span>Pminus1<span class="token punctuation">;</span><span class="token keyword">end</span><span class="token function">plot</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span>x<span class="token punctuation">,</span><span class="token string">'r'</span><span class="token punctuation">,</span>t<span class="token punctuation">,</span>y<span class="token punctuation">,</span><span class="token string">'g'</span><span class="token punctuation">,</span>t<span class="token punctuation">,</span>Xplus1<span class="token punctuation">,</span><span class="token string">'b'</span><span class="token punctuation">,</span><span class="token string">'LineWidth'</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>结果：可以看出滤波结果虽然有所减少，但是差距还是不小的</p><p><img src="/../../images/image-20220525152818022.png" alt="原始信号"></p><ul><li>无法回避的问题，Q和R的选择</li></ul><h2 id="模型2-多项式函数，多项式展开"><a href="#模型2-多项式函数，多项式展开" class="headerlink" title="模型2 多项式函数，多项式展开"></a>模型2 多项式函数，多项式展开</h2><pre class="line-numbers language-matlab" data-language="matlab"><code class="language-matlab"><span class="token comment">%Model 2</span><span class="token comment">%X(K)=X(K-1)+X'(K-1)*dt+X''(K-1)*dt^2*(1/2!)+Q2</span><span class="token comment">%Y(K)=X(K)+R R~N(0,1)</span><span class="token comment">%此时状态变量X=[X(K) X'(K) X''(K)]T 列向量</span><span class="token comment">%Y(K)=H*X+R H=[1 0 0] (行向量)</span><span class="token comment">%预测方程</span><span class="token comment">%X(K)=X(K-1)+X'(K-1)*dt+X''(K-1)*dt^2*(1/2!)+Q2</span><span class="token comment">%X'(K)=0*X(K-1)+X'(K-1)+X''(K-1)*dt+Q3</span><span class="token comment">%X''(K)=0*X(K-1)+0*X'(K-1)+X''(K-1)+Q4  这个就是原来Model 1</span><span class="token comment">%的预测方程，实际上就是猜是一个多项式，求几阶导也会平滑一点</span><span class="token comment">%X''(K)=X''(K-1)+Q4 正是描述平缓的随机过程，这种建模相对精细一些，应用范围较广</span>dt<span class="token operator">=</span><span class="token function">t</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token function">t</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>F2<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">1</span> dt dt<span class="token operator">^</span><span class="token number">2</span><span class="token operator">*</span><span class="token number">0.5</span><span class="token punctuation">;</span>    <span class="token number">0</span> <span class="token number">1</span> dt<span class="token punctuation">;</span>    <span class="token number">0</span> <span class="token number">0</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>H2<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">1</span> <span class="token number">0</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment">%X中只有第一个有用</span>Q2<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">1</span> <span class="token number">0</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token number">0</span> <span class="token number">0.01</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token number">0</span> <span class="token number">0</span> <span class="token number">0.0001</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment">%协方差矩阵，代表了噪声之间的相关性，对角线元素是Q2,Q3,Q4</span>R2<span class="token operator">=</span><span class="token number">20</span><span class="token punctuation">;</span><span class="token comment">%%% 设置初值</span>Xplus2<span class="token operator">=</span><span class="token function">zeros</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span>L<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">Xplus2</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token number">0.1</span><span class="token operator">^</span><span class="token number">2</span><span class="token punctuation">;</span><span class="token comment">%初值，只有第一个有用嘛</span><span class="token function">Xplus2</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span><span class="token function">Xplus2</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>Pplus2<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">0.01</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">;</span>        <span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0.01</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">;</span>        <span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0.0001</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment">%初值</span><span class="token keyword">for</span> <span class="token number">i</span><span class="token operator">=</span><span class="token number">2</span><span class="token operator">:</span>L    Xminus2<span class="token operator">=</span>F2<span class="token operator">*</span><span class="token function">Xplus2</span><span class="token punctuation">(</span><span class="token operator">:</span><span class="token punctuation">,</span><span class="token number">i</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    Pminus2<span class="token operator">=</span>F2<span class="token operator">*</span>Pplus2<span class="token operator">*</span>F2<span class="token operator">'</span><span class="token operator">+</span>Q2<span class="token punctuation">;</span>        K2<span class="token operator">=</span><span class="token punctuation">(</span>Pminus2<span class="token operator">*</span>H2<span class="token operator">'</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token function">inv</span><span class="token punctuation">(</span>H2<span class="token operator">*</span>Pminus2<span class="token operator">*</span>H2<span class="token operator">'</span><span class="token operator">+</span>R2<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">Xplus2</span><span class="token punctuation">(</span><span class="token operator">:</span><span class="token punctuation">,</span><span class="token number">i</span><span class="token punctuation">)</span><span class="token operator">=</span>Xminus2<span class="token operator">+</span>K2<span class="token operator">*</span><span class="token punctuation">(</span><span class="token function">y</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">)</span><span class="token operator">-</span>H2<span class="token operator">*</span>Xminus2<span class="token punctuation">)</span><span class="token punctuation">;</span>    Pplus2<span class="token operator">=</span><span class="token punctuation">(</span><span class="token function">eye</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token operator">-</span>K2<span class="token operator">*</span>H2<span class="token punctuation">)</span><span class="token operator">*</span>Pminus2<span class="token punctuation">;</span><span class="token keyword">end</span><span class="token function">plot</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span>x<span class="token punctuation">,</span><span class="token string">'r'</span><span class="token punctuation">,</span>t<span class="token punctuation">,</span>y<span class="token punctuation">,</span><span class="token string">'g'</span><span class="token punctuation">,</span>t<span class="token punctuation">,</span>Xplus1<span class="token punctuation">,</span><span class="token string">'b'</span><span class="token punctuation">,</span>t<span class="token punctuation">,</span><span class="token function">Xplus2</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token operator">:</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">'k'</span><span class="token punctuation">,</span><span class="token string">'LineWidth'</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/../../images/image-20220525152949853.png" alt="原始信号"></p><p>（黑色的线）可以看出继模型1有不错的修正</p><h2 id="模型2-二维观测"><a href="#模型2-二维观测" class="headerlink" title="模型2+二维观测"></a>模型2+二维观测</h2><pre class="line-numbers language-matlab" data-language="matlab"><code class="language-matlab">t<span class="token operator">=</span><span class="token number">0.1</span><span class="token operator">:</span><span class="token number">0.01</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">;</span>L<span class="token operator">=</span><span class="token function">length</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">%生成真实信号x，以及观测y</span><span class="token comment">%首先初始化</span>x<span class="token operator">=</span><span class="token function">zeros</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span>L<span class="token punctuation">)</span><span class="token punctuation">;</span>y<span class="token operator">=</span>x<span class="token punctuation">;</span>y2<span class="token operator">=</span>x<span class="token punctuation">;</span><span class="token comment">%生成信号，设x=t^2</span><span class="token keyword">for</span> <span class="token number">i</span><span class="token operator">=</span><span class="token number">1</span><span class="token operator">:</span>L<span class="token function">x</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token function">t</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">)</span><span class="token operator">^</span><span class="token number">2</span><span class="token punctuation">;</span><span class="token function">y</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token function">x</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token function">normrnd</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0.1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">%正态分布，参数为期望和标准差</span><span class="token function">y2</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token function">x</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token function">normrnd</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0.1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">end</span><span class="token comment">%问题2，两个传感器，进行滤波</span><span class="token comment">% Y1(K)=X(K)+R</span><span class="token comment">% Y2(K)=X(K)+R</span><span class="token comment">%H=[1 1]T (列向量) X=X(K)</span><span class="token comment">%H=1   0     0     X=X(K)   X'(K)   X''(K)</span><span class="token comment">%     1   0     0</span>F3<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span>dt<span class="token punctuation">,</span><span class="token number">0.5</span><span class="token operator">*</span>dt<span class="token operator">^</span><span class="token number">2</span><span class="token punctuation">;</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span>dt<span class="token punctuation">;</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment">%%%此处要注意矩阵是否病态，若dt特别小，易导致矩阵病态或精度丢失</span>H3<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">;</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>Q3<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">;</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0.01</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">;</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0.0001</span><span class="token punctuation">]</span><span class="token punctuation">;</span>R3<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">;</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment">%%%%%一定要注意是协方差矩阵</span><span class="token comment">%%%设置初值%%%%</span>Xplus3<span class="token operator">=</span><span class="token function">zeros</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span>L<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">Xplus3</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token number">0.1</span><span class="token operator">^</span><span class="token number">2</span><span class="token punctuation">;</span><span class="token function">Xplus3</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span><span class="token function">Xplus3</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>Pplus3<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">0.01</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">;</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0.01</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">;</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0.0001</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">for</span> <span class="token number">i</span><span class="token operator">=</span><span class="token number">2</span><span class="token operator">:</span>L<span class="token comment">%%%预测步%%%</span>Xminus3<span class="token operator">=</span>F3<span class="token operator">*</span><span class="token function">Xplus3</span><span class="token punctuation">(</span><span class="token operator">:</span><span class="token punctuation">,</span><span class="token number">i</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>Pminus3<span class="token operator">=</span>F3<span class="token operator">*</span>Pplus3<span class="token operator">*</span>F3<span class="token operator">'</span><span class="token operator">+</span>Q3<span class="token punctuation">;</span><span class="token comment">%%%更新步%%%%</span>K3<span class="token operator">=</span><span class="token punctuation">(</span>Pminus3<span class="token operator">*</span>H3<span class="token operator">'</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token function">inv</span><span class="token punctuation">(</span>H3<span class="token operator">*</span>Pminus3<span class="token operator">*</span>H3<span class="token operator">'</span><span class="token operator">+</span>R3<span class="token punctuation">)</span><span class="token punctuation">;</span>Y<span class="token operator">=</span><span class="token function">zeros</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">Y</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">=</span> <span class="token function">y</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">Y</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token function">y2</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">Xplus3</span><span class="token punctuation">(</span><span class="token operator">:</span><span class="token punctuation">,</span><span class="token number">i</span><span class="token punctuation">)</span><span class="token operator">=</span>Xminus3<span class="token operator">+</span>K3<span class="token operator">*</span><span class="token punctuation">(</span>Y<span class="token operator">-</span>H3<span class="token operator">*</span>Xminus3<span class="token punctuation">)</span><span class="token punctuation">;</span>Pplus3<span class="token operator">=</span><span class="token punctuation">(</span><span class="token function">eye</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token operator">-</span>K3<span class="token operator">*</span>H3<span class="token punctuation">)</span><span class="token operator">*</span>Pminus3<span class="token punctuation">;</span><span class="token keyword">end</span><span class="token function">plot</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span>x<span class="token punctuation">,</span><span class="token string">'r'</span><span class="token punctuation">,</span>t<span class="token punctuation">,</span>y<span class="token punctuation">,</span><span class="token string">'g'</span><span class="token punctuation">,</span>t<span class="token punctuation">,</span>y2<span class="token punctuation">,</span><span class="token string">'b'</span><span class="token punctuation">,</span>t<span class="token punctuation">,</span><span class="token function">Xplus2</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token operator">:</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">'k'</span><span class="token punctuation">,</span>t<span class="token punctuation">,</span><span class="token function">Xplus3</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token operator">:</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">'m'</span><span class="token punctuation">,</span><span class="token string">'LineWidth'</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/../../images/image-20220525153154366.png" alt="原始信号"></p><p>可以看出都比两个小</p><p>实际上也只是试一下怎么融合两个滤波而已了</p><h2 id="需要注意的点"><a href="#需要注意的点" class="headerlink" title="需要注意的点"></a>需要注意的点</h2><ol><li>协方差矩阵的应用，一般只用对角线，表示噪声间不相关，对角线元素就是方差</li><li>矩阵的列向量和行向量的转化</li></ol><h1 id="粒子滤波"><a href="#粒子滤波" class="headerlink" title="粒子滤波"></a>粒子滤波</h1><h2 id="完整算法"><a href="#完整算法" class="headerlink" title="完整算法"></a>完整算法</h2><ol><li>给定初值$X_0 \sim N(\mu,\sigma)$</li><li>生成$x_0^{(i)},w_0^{(i)}&#x3D;\frac{1}{n}$</li><li>预测步，生成$x_1^{(i)}&#x3D;f(x_0^{(i)})+v$，v \sim N(0,Q)$的随机数，一共n个</li><li>更新步，设观测值为$y_1$，生成$w_1^{(i)}&#x3D;f_R[y-h(x_1^{i})]$</li><li>归一化，$w_1^{(i)}&#x3D;\frac{w_1^{(i)}}{\sum w_1^{(i)}}$</li><li>此时得到新的粒子$x_1^{(i)}$，新的权重$w_1^{(i)}$</li><li>重采样</li><li>求期望和方差</li><li>如此递推</li></ol><h2 id="总结（基本思想）"><a href="#总结（基本思想）" class="headerlink" title="总结（基本思想）"></a>总结（基本思想）</h2><ol><li>有大数定律，暗示pdf可由带权重的粒子表示</li><li>粒子数量，粒子位置，粒子完全决定了cdf，也决定了pdf</li><li>预测步改变粒子位置</li><li>更新步更新粒子权重</li></ol><h2 id="重采样"><a href="#重采样" class="headerlink" title="重采样"></a>重采样</h2><h3 id="是什么"><a href="#是什么" class="headerlink" title="是什么"></a>是什么</h3><p>只有少数粒子具有较高的权重，大量粒子权重较低</p><h3 id="为什么"><a href="#为什么" class="headerlink" title="为什么"></a>为什么</h3><p>原因：</p><ul><li>粒子太多，归一化归没了</li><li>权重更新方程，$e^{-x^2}$，很容易就拉开差距了</li></ul><p>坏处：导致权重更新失效</p><h3 id="怎么做"><a href="#怎么做" class="headerlink" title="怎么做"></a>怎么做</h3><ol><li>按概率进行复制与淘汰，权重高的复制多几次，保证粒子数量不变</li><li>全部权重赋值为$\frac{1}{n}$</li><li>（具体看代码）</li></ol><h3 id="作用"><a href="#作用" class="headerlink" title="作用"></a>作用</h3><ol><li>有一定削弱粒子退化的能力</li><li>减慢pf的速度</li></ol><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><p>先假设一个预测方程生成真实情况，然后根据真实情况模拟观测情况</p><pre class="line-numbers language-matlab" data-language="matlab"><code class="language-matlab"><span class="token comment">% 预测方程 x(i)=sin(x(i-1))+5*x(i-1)/(x(i-1)^2+1)+Q</span><span class="token comment">% 观测方程 y(i)=x(i)^2+R</span>clear<span class="token comment">%注意，滤波之前一定要写状态方程观测方程形式</span><span class="token comment">%就是这种xk=f(xk-1)</span><span class="token comment">%大多情况下都是x=f(t)这样的</span><span class="token comment">%要将它转换成上面的递推式，利用数值分析的常微分方程数值解就可以了</span><span class="token comment">% 生成100个信号</span>t<span class="token operator">=</span><span class="token number">0.01</span><span class="token operator">:</span><span class="token number">0.01</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">;</span>x<span class="token operator">=</span><span class="token function">zeros</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>y<span class="token operator">=</span><span class="token function">zeros</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">% t纯粹用来画图，由于直接给了xk与xk-1的关系，因此不需要用到dt</span><span class="token comment">%给初值</span><span class="token function">x</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token number">0.1</span><span class="token punctuation">;</span><span class="token function">y</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token number">0.01</span><span class="token operator">^</span><span class="token number">2</span><span class="token punctuation">;</span><span class="token comment">%生成真实数据与观测数据</span><span class="token keyword">for</span> <span class="token number">i</span><span class="token operator">=</span><span class="token number">2</span><span class="token operator">:</span><span class="token number">100</span>    <span class="token function">x</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token function">sin</span><span class="token punctuation">(</span><span class="token function">x</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">5</span><span class="token operator">*</span><span class="token function">x</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">/</span><span class="token punctuation">(</span><span class="token function">x</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">^</span><span class="token number">2</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">y</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token function">x</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">)</span><span class="token operator">^</span><span class="token number">2</span><span class="token operator">+</span><span class="token function">normrnd</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">end</span><span class="token comment">%figure(1)</span><span class="token comment">%plot(t,x,t,y,'LineWidth',2);</span><span class="token comment">% 例子滤波就是用y来预测x</span><span class="token comment">%start</span><span class="token comment">%设例子集合</span>n<span class="token operator">=</span><span class="token number">100</span><span class="token punctuation">;</span>xold<span class="token operator">=</span><span class="token function">zeros</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span>n<span class="token punctuation">)</span><span class="token punctuation">;</span>xplus<span class="token operator">=</span><span class="token function">zeros</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">%用于放滤波值，后验概率的期望</span>xnew<span class="token operator">=</span><span class="token function">zeros</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span>n<span class="token punctuation">)</span><span class="token punctuation">;</span>w2<span class="token operator">=</span><span class="token function">zeros</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span>n<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">%设置初值x0(i)，可以直接在正态分布采样，如果对初值有信心，也可以让所有</span><span class="token comment">%粒子相同，经过实验，可以发现跟初值其实没什么关系</span><span class="token keyword">for</span> <span class="token number">i</span><span class="token operator">=</span><span class="token number">1</span><span class="token operator">:</span>n    <span class="token function">xold</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token number">0.1</span><span class="token punctuation">;</span>    <span class="token function">w1</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token number">1</span><span class="token operator">/</span>n<span class="token punctuation">;</span>    <span class="token function">w2</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token number">1</span><span class="token operator">/</span>n<span class="token punctuation">;</span><span class="token keyword">end</span><span class="token comment">%核心代码</span><span class="token keyword">for</span> <span class="token number">i</span><span class="token operator">=</span><span class="token number">2</span><span class="token operator">:</span><span class="token number">100</span>    <span class="token keyword">for</span> <span class="token number">j</span><span class="token operator">=</span><span class="token number">1</span><span class="token operator">:</span>n        <span class="token function">xold</span><span class="token punctuation">(</span><span class="token number">j</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token function">sin</span><span class="token punctuation">(</span><span class="token function">xold</span><span class="token punctuation">(</span><span class="token number">j</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">5</span><span class="token operator">*</span><span class="token function">xold</span><span class="token punctuation">(</span><span class="token number">j</span><span class="token punctuation">)</span><span class="token operator">/</span><span class="token punctuation">(</span><span class="token function">xold</span><span class="token punctuation">(</span><span class="token number">j</span><span class="token punctuation">)</span><span class="token operator">^</span><span class="token number">2</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token function">normrnd</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0.1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">%Q</span>    <span class="token keyword">end</span>    <span class="token comment">%更新步</span>    <span class="token keyword">for</span> <span class="token number">j</span><span class="token operator">=</span><span class="token number">1</span><span class="token operator">:</span>n        <span class="token comment">%w(j)=w(j)*fR(...)</span>        <span class="token comment">%fR=(2*pi*R)^(-0.5)*exp(/(y(i)-xold(j))^2/(2*R))</span>        <span class="token function">w2</span><span class="token punctuation">(</span><span class="token number">j</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token function">exp</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token punctuation">(</span><span class="token function">y</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token function">xold</span><span class="token punctuation">(</span><span class="token number">j</span><span class="token punctuation">)</span><span class="token operator">^</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token operator">^</span><span class="token number">2</span><span class="token operator">/</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token operator">*</span><span class="token number">0.1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">%R</span>    <span class="token keyword">end</span>    w2<span class="token operator">=</span>w2<span class="token operator">/</span><span class="token function">sum</span><span class="token punctuation">(</span>w2<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">%w2是为了每一次重采样的</span>        <span class="token comment">%重采样</span>    <span class="token comment">%一般有限制例子退化程度N&lt;1/sum(wi^2)</span>    c<span class="token operator">=</span><span class="token function">zeros</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span>n<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">c</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token function">w2</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token number">j</span><span class="token operator">=</span><span class="token number">2</span><span class="token operator">:</span>n        <span class="token function">c</span><span class="token punctuation">(</span><span class="token number">j</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token function">c</span><span class="token punctuation">(</span><span class="token number">j</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token function">w2</span><span class="token punctuation">(</span><span class="token number">j</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">end</span>    <span class="token keyword">for</span> <span class="token number">j</span><span class="token operator">=</span><span class="token number">1</span><span class="token operator">:</span>n        a<span class="token operator">=</span><span class="token function">unifrnd</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> k<span class="token operator">=</span><span class="token number">1</span><span class="token operator">:</span>n            <span class="token keyword">if</span> a<span class="token operator">&lt;</span><span class="token function">c</span><span class="token punctuation">(</span>k<span class="token punctuation">)</span>                <span class="token function">xnew</span><span class="token punctuation">(</span><span class="token number">j</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token function">xold</span><span class="token punctuation">(</span>k<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">break</span><span class="token punctuation">;</span> <span class="token comment">%一定要记住这个break</span>            <span class="token keyword">end</span>        <span class="token keyword">end</span>    <span class="token keyword">end</span>    xold<span class="token operator">=</span>xnew<span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token number">j</span><span class="token operator">=</span><span class="token number">1</span><span class="token operator">:</span>n        <span class="token function">w2</span><span class="token punctuation">(</span><span class="token number">j</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token number">1</span><span class="token operator">/</span>n<span class="token punctuation">;</span>    <span class="token keyword">end</span>    <span class="token function">xplus</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token function">sum</span><span class="token punctuation">(</span>xnew<span class="token punctuation">)</span><span class="token operator">/</span>n<span class="token punctuation">;</span><span class="token keyword">end</span><span class="token function">figure</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token function">plot</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span>x<span class="token punctuation">,</span>t<span class="token punctuation">,</span>y<span class="token punctuation">,</span>t<span class="token punctuation">,</span>xplus<span class="token punctuation">,</span><span class="token string">'LineWidth'</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">legend</span><span class="token punctuation">(</span><span class="token string">'x'</span><span class="token punctuation">,</span><span class="token string">'y'</span><span class="token punctuation">,</span><span class="token string">'xplus'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>结果如下：</p><p><img src="/../../images/image-20220827150919477.png" alt="粒子滤波结果图"></p><p>可以看出相对y来说效果还是非常好的</p>]]></content>
      
      
      <categories>
          
          <category> 大创 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 卡尔曼滤波算法, matlab </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>RNN学习</title>
      <link href="/2022/07/27/GNN%E5%AD%A6%E4%B9%A0/"/>
      <url>/2022/07/27/GNN%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<p>CNN主要用在CNN</p><p>RNN主要用在NLP（时间序列相关）</p><p>多带了个时间关系</p><p><img src="/../images/image-20220727090750660.png" alt="image-20220727090750660"></p><p>把前一层的结果保存下来带到下一层</p><p><img src="/../images/image-20220727092828100.png" alt="image-20220727092828100"></p><p><img src="/../images/image-20220727093011309.png" alt="image-20220727093011309"></p><p>$h_i$都只是一个中间结果，然后一般就用最后一个就行了</p>]]></content>
      
      
      <categories>
          
          <category> 人工智能 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 人工智能 </tag>
            
            <tag> 神经网络 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>西瓜书学习第八章集成学习</title>
      <link href="/2022/07/27/%E8%A5%BF%E7%93%9C%E4%B9%A6%E5%AD%A6%E4%B9%A0%E7%AC%AC%E5%85%AB%E7%AB%A0%E9%9B%86%E6%88%90%E5%AD%A6%E4%B9%A0/"/>
      <url>/2022/07/27/%E8%A5%BF%E7%93%9C%E4%B9%A6%E5%AD%A6%E4%B9%A0%E7%AC%AC%E5%85%AB%E7%AB%A0%E9%9B%86%E6%88%90%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="你怎么能偷看人家日记呢！！" data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="7232d7c10adf2332d78d8ecb454e0d8413c5ed3f7289a2bf07062b65222f04c3">19f5612b4aec4e64cf47f8017ba48570be1a3155829c0a2b9746aee7dc843b5d2d8284d8491f456282381f01f775e354d35cd7f8670dadfd3d15dea1bf17a03c5f071f99896df8662ebd2ca457d967d750082dc60e910c24ea6e27379094ddb60ceac3a517d71a0849a0933dfe68b03cd474a66f5301e00bf0e70a6191e2674370a37a611f09356ee8fb926daf6c003389c51771e0e55e2127fdbcdc5394ac15f82f8080580b3787dcb8ffc3970d7990139cc8393c4aa449d2ec61fd8cf42fdc9df529cb6885d53f0ed83f3145ac46a05feffd948b4d7202571a4ea2d8bb1a61993b1c236e9ad47106b0f988c382dd03d62405bb8b7fe9595943719eef9c9eaca84406bce6340cb5cee1fd0b2d86b48b024cfa562314f4c5adc52f0287b087dacb6e2329da10756456474898fba908d1650b0986965ce0de4449dcb62316146db3d1691f043ab6609bcb2d1948178090d974b0c9c7a90c3d6b02ee59a07b0208d9af65dc164a6057796ba77b8115ae9e888fe410676f206d130947828daa31f6a5fb3e541c2f169f83c43d7c255b97d9c21a99ccd9dbe09b4a1397e1ee0c72243e755562ae7752ce3f42aa59fc58bcab79af3bf5b1b2bc74137c5a95e138e1159720d6d11ac78d032d56b721c470c18045c4dcd36f75b392fbcb5eed94b686266c0ceb02d717f4a660da516aabee9e52958db16bae1f3a29e607a06095deec7581bbdc89a163ae1bab4d1e3bf7646ec49f8dccf0c3e266133e022f71868051934926ce5f5282bd52361ae49e58fe7314e45f11ab55f48d26639b2b54a2dce540ede44c4cf8dd7de2c98bd0a406db804d21f054776bb551085b970c60723851d45bea066ab271781d4cd68182c377826f57ca9e7a549cffa547e8ca8e5c89a1f9cf8a0e389f4e7fb4c7db262bca39cb4b549977e05a9045413b57a16c01f3f9e363fd4b7cbe3764c73134a688d6c6e40ec9c613fc91b66398d494560a74618d98bd87e9e0fed71902f5d4692bd2328533f3b556f81c1d816b44d3f9c2d5463325c68781764baef1ce58a4a91fe57473bf0568bc6d811b1d194dfc821042345e9ec58ddc29a3128157b60d47fea4f02f52d8faca5074fb2e25e749b7cfb162f7e4753963fee3a5246ae0514b94c6d5df945e822a91dcc5f229f12727b0a02ca2a4be97da3a61fb23f3cd5bb7e4103fc75dd957bdf79a2d57dbc965b74d5399cb988b9aae4c7a06f81c49b353c5c91fe05154487a5fffb67c466186e7b098b1f0874f653a591c2bf7cda2a5c3a607d5063bf05be387e927a9455ca76720d14349dc3d8c904f3d59f301af2cbd50296f03cbc5192627d413206b77039b56a501cba6da37cc57228e36358371789ae6430a16235cd094899344c6d7ae4d077f2ad3c58985c1527cb7a521ab792f36b2ffc806abd5f7743ef16155e66fd2ba07fe450393d070fe7bd6031af0e8edd3b2c98feb75a614e2af4bf0c38a85ea903f9358745feb9ed9ad14483ba32c1f367f64cea8ca5881e6389fb51c6965dc4ba1a533d2bcdc55204afd25fd85982fdf5ff89a8e9e8019d9210dd818121e32905371f80193ee8ccf1906660bf3c2b16436881283fc9bf1dbecaed016b6b99dcc7fcc6c6d58f6573f243ff737682f36b6a25bb976abbef1b0c09f2faaf4ed2996ad199557a8b36f334b9a40f5aa7e3348c7129d968f3121a5f1fab88db0893b5e9e8b3a913cb5449bd91f8006a25479f6e5990c18b0adf5ee5e4ad8032051470e448c1b29351fd94d7798d01b8f9016b7a443130339b5919c8167fb8b4a0c170f7697aae503704c1d4b4f42778253b09c3d4368e438aa1fc1d46e593fcef5d5bee5d9d1732407f77e35316213f80b091773aa00a799443ae85fecccaf9d3f1099a8c5648a0f20e50519666f061a21a3b7e8ba18f0b29e9a9e24c26ada4dc74025a0daf79e2205cc432ee4b616f28ac6eedac1077dad24d103cac0a439aae192a0ce90110f60183609d61788e5dc28f9cbf1b86868a4bbfe1f2a478e9afe37afad59ee947c825a3a7b8ec4634041dab42a7a0314cc41c09a9c394e5b5f8420c8a483a6505fe28dbe935eacf38ccd648dfc566dd873f9b376b1c706e94c8063149e2b1ce24dab28e95b3a2c3cfa61087426f024df84550134ee043049782d4a6edd1055783dad50979318796e94547d2df30c6e6aad3da50bb0c581ffaaf878a2c3229e8b7e514a8007856a1eb18e329252574ce4243b6750384aa00fb50799dc3df4ea5f080b9384d97c96e07301ab2e7267f739ad6544ea0c5a43df89843a4264054c39a825b4ca683a2f0d6f3bdd094d7fd320f074a7c7fca677116ffbe8cb6127b651ce43956fbddc4944bf0c8018afa4cc16f13a490ba1901e407305308af0a35e0ac61dadaf9b99c27315af5b229f283fa51f8e04faa16b15142a4cf35b8ff4dc382262a73f1eb466c34a14aeb1fc139c203d474475b192c533523e71c4b62da902eba88d7eb3f94be7fcd61769d26cf07592c6fb923aded0bada180817a43c363aa86d5a6d8ef6a220406d6911aa12be03c56352bddc9e6dc7ce6ac0574a804d44c6a94e5e11eacb0dcdf6ece752aafbefe6ac28f50a92ebdbc0d858726ca1e7acf33ce413791bc88716c85f46624f544293768fab641f163ed80273da1d7b933e75e40d097c5609611b1631f49398c06ee17ec86374ac7145a191f189d756603424e3be7bb51eb1a3d05d555da1e1be27cf06603832a72fab1feda8d6175c46d392dfd0f957753cf51290a3791031c9dec6f5e0fe67595fd3459030746ed74a3788286c97c56f209282239be820cceb1e2b6ecb28b8accda266ed11d7342b2df1a6fd39e882b5dc62cfff33ec07d3b54a4ea72ef0a54be173a9c3fe13a0a8fba717ff0d876671b4f2d957e216049776cfa3766301bcf2b7aaddd7d681b4ce14cb0d05a32ce30db21ffa572f164953822de2cf77b91648c6d0382d77a2788dc62f7118653ad5eaf8e0678698111106bf7c3353a065b533cff1f701a298445d410fa099f97b76532c33a7340154038431a943dd693179459633e277f6c561cbb22fbd8d3e769bfbdec37d98d608246e148b951fbd4848ea9e14a9b04d2e47404b6d7edd5f44395cf6b269b90f7b771ad745fd17a6eb0a904ed09f905a6d140a510b52f412c34cc5a18fd67c269eb8c119fa643bf5928de9198e90531aafdafc576dc7975b28dfc625d98872d862ef288d24d9e910243f6a1effe71a8057c6fd21dc424c55ef107ddca7ce83f5ebffd2f1050bbd49f3806ef2e5b67c75cc5550c7c86ca7b9d68d8fce9a10023c1af33e7a3023348ec74f177af2c140ac1951ecbf4e96ef9c2d1d94ac6c329fa6c013a7f618cc761cf283f4e8b48171badb86a4ae91ec25841c00f68b68f29fc6df0d22a4f70007b6edb3a15bc6c1abc19669a3f1585ac1297f21e4fb6f8a8ae51abfdf896ceefbca5f628d7d63bc16a71b98679fa07f0f2893cef712fcad498a048057177b94955be9d9d68411d0cddabff828e71138c0534e78973d9cad8958d92bdf3af57983e2b5dffb884748423b8f2b51737c5a43d8dd432d83c17f7b019c9b42cc8a5e9fdf833ce1f5ceb78131aff9f0502e9d19554aa3cfa0825abd6c8c4416189df0bef856910cdb0bc9273f436d446bc79ff082a298634d470d6cc6774f185027ce5283c4b2f1de853d6a3260aaf3a2fb9244cfd65d40a9f18fc59042f3242b9de5f74f0d112b48076ca73a88bb6475484a6335660166501ebfae5f874cb35ec106df57d5ec207174d3403adfe848701f3f873c3c12e5ec47f3612c6dd54b1731d7ab231115b8df6af562d09c9ed1eb5811216d5aa571e1f42da88418b1e737d3e9c8a0819e00d5406be7aafee5a483afc40fb3532b5f4384301185f841e3e964683feceba0860ad92ac6344f104c64c7351779b929190c2a9e8ef6db185dd831f480bc85e92db13ca70c42d4d2d09a9e0ef2298b744f958b56e59c06332f7acbe7fe6a7b430f9070e1ab04f8936df77ad5d287d9b5f9cb9243605fe9fc359c9ea912e2d046f3cc76362387848eb427c0cb4e3c93fea72b9cbc30b780ec5436b41b55f836dc2fb61b4b10a6d3116910996f6642ebbae17a8fd8908087d1ffb9e40fc20c6e7c44fd780d993dc95a497e5f0e027e8752106af86a94521420c0778876642b8dd2e1cf649c80c4f0d0a764b86ff4d2603bc6dde3b22833c7e31453d734e56ec903702df873a60dba14f6db55f67b6147a0011c98d374160deb1750df0561a0a1301a1978339b079c928bfcc9b5de5eae001e0a68bdada2584124b6ee22eda86f6577a657c5f60bf54f6b4940b782212cf1766efc7eb27984dd59669eaef3ae3db2241c392a430962eb3454737b51a9ef107f14d3131ec81015b0b80d8ba86cef05b3b26dd8e89a30dfaa152c08119cb8634e1e42a157e61af042368b33b7bd8b1ca7782a07af5c0fb4d4e14c5544da5a419a37f443b21cf305d1d96e8dce18516ac1f8b6717da7645428319fd79a2884b2b421c08269cf935a1a1619c2745cf27373c544dc0f2f69eedaf0ce1e2676f3dcdf68d24741399d5caaeb4a85b0c026f65acdd3ec344565d8936d397d72f99672c7b29f84e331c999c715c4af8a37631cabaacc0938f80e27127a2d29287328fd5732e3cf51631ab909959b1ea72fdaf4b13cf257eb06dbb4a295ff40e5b51c6d1be8f732d4a97f1e87030e03300b821257e5dff72a9d097a3f12d91c5ec5ef02dac4fb1511c7078341de509de9600325493f6fe73177327336f25c3a8738126786ffa87ad4c7a20c6764d22211318fd1b047854aa3a7872a8a987a3482c22ae5149d9ab51db1327dbc7077320576f40bb9ad2da00de0bc5f24551ec84696718ad2480eb7795d26bf2d12b03521237574f872f171831f23233e1a56550e35b5419558d8592228d25081f5e90013aa0766dff035fb764a431f7f6aa19bb3a378c056cfd00dd87d930ffd50708171dd9889bed47ae56cc21e277aaff99ca8f4f7409f21fb1ffdbdf174148143ed9431447eeae8f455b700f4e053eb534a452d815390ee29fc1bb8fd112509ec05562f85e2ab5cd3c4a31bd37791d1e30f68dc6dd55000c7d0da820a07a1a3b003ec20924f80d65e733304e92cb62fbd944d81900945ff5d76d0e01b199674b58425b3b2af2999fb0d6468e63f965b1a246c47ee699c52b81e7e7ead9a6295a874d0800530abb466a8b9135a806e02e0c5d31cfb1455971e8052ad4960139e7da7b2d741f632a72c3922f77757d72ff345597c9e19b1ff275a1a7313677af13cf200a3dd23296f6df17cfe83c506db22c3df7e501f2d7fad9a69c53ddb0af4ecabf6a2ddee2be7e1a8cb2a85d0439d638d0a1364c6ddb7f52c5bf645bcfdc4d418d922936f7acd099a1b49306888d5d2e40d001f15a117a2ad41a0e9d3b09c1287a1cf1fd4e003b3d15f421a78beef15b62179af31423ee47a15159e2f68cbe0da5658921a1a86c0dbe8ef46c01020e511b2b6ededa1aa4bf195bb291e363f8480</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">这玩意儿需要密码哦（日记专用密码）</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 人工智能 </category>
          
          <category> 西瓜书 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 人工智能 </tag>
            
            <tag> 西瓜书 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>卡尔曼滤波学习</title>
      <link href="/2022/07/24/%E5%A4%A7%E5%88%9B/%E5%8D%A1%E5%B0%94%E6%9B%BC%E6%BB%A4%E6%B3%A2%E5%AD%A6%E4%B9%A0/"/>
      <url>/2022/07/24/%E5%A4%A7%E5%88%9B/%E5%8D%A1%E5%B0%94%E6%9B%BC%E6%BB%A4%E6%B3%A2%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="你怎么能偷看人家日记呢！！" data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="e65966aff6ef2432fe22d4d9c3a9182fc4fc954a56733d3f453aa2ef3c950088">19f5612b4aec4e64cf47f8017ba48570be1a3155829c0a2b9746aee7dc843b5d96a08e753a52f4f777d03942fa9a7fe4faf2734bec83b53f4366b9ab7c89afb93a16718bf038a011f7825a3e747e2f518cde8ad0545c7be3d0a987851a28bcbd134ad825a55d576d1097420bbaa506841fbfd867bd7f114b6454081f54e16a4a5a93709fe8531fdd8e419ec8a04b67062631cb69cdbbc329e2ac12c8e33a15943f91f0b42521f2cdb13931c509f3f909c4b0981817d1a158bdaacc2664a6baf8b133e3f4ef5a89af8f62225ef2edf8b6c3df01e319fc6ae6ceb2eaf17092cc8de6e87224f4964f9f9307cd9181cc8bafc59969f5e10f25fced34326d819d322a72fc234e0d11fa79c06491e0afc5e507c71e0d1c5ac4630b0a22ccc29df47dd724e89d25fe4e810508eb518adc9eb1f3dcd75abdea52311fb8999c9a23282a2367a58035196dbc57fce4f5e49bcfb0662011ff71be8d59eba53f06435c2bcd9e2e62c5d14afb7e975208e512003e5e1d71697960a40da6b377de28405cf5f9f989fd0c0ebb309a92a822c89119ed995cbd5392cd632f7ed143003cbf1c1ee56ff5c0f7f7396e04503fa4ee82105fe64585b49cc4f0761d2c8c759465ad4bff5476b291eb3f28e26e95d283cf980bac2a7598453142233b085f768027abf0b017402c4969100d415e227bf958d76aebfa35fd7eaf2e0677e61f9af39cedf2ad1aa19a78971d66fbb912a0b504982bd83ca5e7d27eea47c71c21e3fac7092159e8f2058ac5b362dd551fa39077e4b687d7bb1ac071235a47339ef319372a1fe8a0bbac1b2c2592d077346f92dea28453f82bf281e76be086e7e8afc9b2b8dc95f7971926f1cd8f6da151d0f96a4e29897137841ad02aca3fccb730e7afea76d334c60badc462eb5f306366a9e2be64d286e494ecf03b3685a4fd56c7afb5a5d73da520b94918a87619eb9385511a4a511fb2da59ab4df00c7e4f28cb8c3b84efdbb75f3d61e963f88bd7134656e93781682d41d772f019827da391854d907286b52567cb56671d82c5330bfc99c8a00174af15a71bd99df1df7039a3b46e6d84a7616d86d86fe35e781701b76af160c56e7a668c6bd403428b6b9f78e9244239c88f95dba761c5dd9e6785054804f9f0a30d03a9aea02a62b0740fca22c9daa56e1eaf01ad8c147eb9e3165d1e6b1bf0937362717b1c9a006048241ded37950c4de731b1bcf2f5a68a2bd86530e55440729bfd953285d6edde6b0013cec3353a2d7b3f8f7408ba0a4e064a078293f30563db2f6e768e46527244646a2091a12049d69161485d3cb10edca69644cb560fd30d0da81eaa4ae86564684e3dcf085f74b87ced3be7d688c526a16fcea974201c040f16817bca5a0585a4ec833028eb3b9eef7e6fe56f09f233e04fcf796a1d500d3ba51b74ee25dd4955a0633e50a086e12f35e9d51b8d254254edf45c433eaa8c043d5ee6b5ca4ca43dfa7f74dc826700801b3e4a1f6c78d0840504cd5a8d6b1dfb480ce21d974fb82d7b99d08233647e5e0b9f72d6f46262cb7c2c47e3dc8d9a17cd49fccc699d625adfde85f5091a7ec75b91a3d9bf678251771da9d3a38c63ac07fb259f0b9e378cf0346b42e2dc5aeb4f9e1d6019e297bdbeb3618c7852c27e81fe4a7be5ae18ac86838a0644f43338e30ae6a97755f2dfa77e768a51f200bcbfa575489838962885fc53170de86ac4f2a047a13c5f74ae7d36c34eba8101669bc26966fc371ddd96fd881f38cb6e8a141f872e1c1269740bf309f75e9c50d01f3f2e8ebb4fc5c1e4b7354b2309563f33100defaa43ac0ad8c915b1b200d575ec4c950b059e8fb1c3d087060128b8c036aa1f3c82a8a93d3bbb5c72f0a6292bae6aabcd6d4d9029aa6c3d4d19518bfc71eafff3fbeba1f05ff706a38e6038cd521f33da71ac4c66665bf50adc0e345d15a631e4541af48efd3fd75bc16f0b248ea5e20ead6a26e59107a13664a70ccc1136760f26013441165be3ad0aa7c933b312b5da4b07272f14d54b757a42e0c7b593d7f76863af3dfad076905d26d83387664e6c1ee35681f7f348a94ebee1d34a238748f5867a117ddc5beeef5f2cbc8740604cbf8cdc49b46640c9233633f86be34621abff466665e0b0518c5916187c9e9d93911ff7d7427959c88ca1c6938e4be1fd0f722c71cc1bdd7129defd92e6871bf575ab423b229bb54795706f1682a12f2cd9f437bb64d56e8101218f0f60d00f9604ecd616c240807ca46c1a1f9ea1af147594766178c68393ded2bcfc7952ac7c3dbc2f02ffa97eca987b69bb446b270d6d568d7abfa715aa5cebdf537b38d3a0bfb9bddbf9cc58a787d5019d5b0b7e001bb88a55b431562e65dd9cbec1b67a52931eb050ba2412851579ed031244450e84a8f6e939cb8e6fef75d49fab3cc0e05ccc664feb0c3d9c8d4f3198dff91d8264e35cc8bba23bab8cab849088b34b366b6bec84c4c29c8cc4190d8fc1d08b77fae2eb5947e6aebd70df0168a3264f3b5215a33e0c2fc88beef9150b54c22a935fd62edabd28b4f9e0633d4dfb1bb2792416433d2d04734b194ccf0157fb104009b7a1f1d542e53f0112bb8ed5a5a4f9d24fb2257c39ac05421954c54331c1b3fe82d269b2ccf78bdd97fc94050d5f5afe1b1c491cc22a86c76861942524ac07e9c91dc0758cd06e5ba61ce6121b64034bf90612345688f18eca17d24432552739da9b8a9f44e7dff48ec88b3107ca21c7afd60fa5c061cae2ed0fb9758fbf173b5302072a6dd1c44cc9f55697427bc7f18cc40b937e2fd891fc27ee5ab091a7a2ed80749c5595858989b66e379f835e04ed445b92a20929145c1951416eb4c6b4d6c83ba1fc968cc86d35ff549a3ce636198774fdb7a59f93db966365a45d84546c51c2373db3ddc8808178a10d08938f5d71f8920ab7072514a44523d6f2855b3bbbac5c49b6d411c46f93662e06b34f237129c13be5a21d7be546003457ab80b55f5ee0affd530864e50ac4bc2ad528819f5c0c9cfbe91309c5d47bee7d300a14278132d7599ccc79e7d9a4ddec23be6c1151c0ce551ba08f5a61bd7ae561028043222df88a5e00a19043bfa3c144148b1ee1c7d0fa359f87886fa4562bfff90a50ace7263805756ee7b7a44fc13322759b771d7026ee9f3e2c9d2146075919697bcfe23e3051db9fd77ca27f6b61885603b9469254c16a8cb3b5b3084229e57b6c0e2c28616cca5f7f890f9be7744ff2d813fe884029653ba26643c8bbf3750a875daf485571d2d3cce9ed10abecb14dbf9b7997662abd57cdea62b7e83f76dd728d6ec4c49edc0133783adebee7e6656e514068223809156046fad79b0b0a64084989a09b70e8d5b85e1fd733218bfb4aa4d33cc48ffb6b43ea50b395d5b91690f2a16023f39ff987a9f833762cf17d84ccec9468ca6d225e19f15f0ce696ccfe3075fd4ad9cfbb343a2423da998806625acb7395f4f1f1</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">这玩意儿需要密码哦（日记专用密码）</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 大创 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 大创 </tag>
            
            <tag> 卡尔曼滤波 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>计算机组成原理测试</title>
      <link href="/2022/07/14/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%AD%A6%E4%B9%A0/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/%E6%B5%8B%E8%AF%95/"/>
      <url>/2022/07/14/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%AD%A6%E4%B9%A0/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/%E6%B5%8B%E8%AF%95/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> 计算机组成原理 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 大三暑假 </tag>
            
            <tag> 计算机学习 </tag>
            
            <tag> 计算机组成原理 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>计算机组成原理第一章</title>
      <link href="/2022/07/14/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%AD%A6%E4%B9%A0/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/%E7%AC%AC%E4%B8%80%E7%AB%A0/"/>
      <url>/2022/07/14/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%AD%A6%E4%B9%A0/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/%E7%AC%AC%E4%B8%80%E7%AB%A0/</url>
      
        <content type="html"><![CDATA[<h1 id="第一章计算机系统概论"><a href="#第一章计算机系统概论" class="headerlink" title="第一章计算机系统概论"></a>第一章计算机系统概论</h1><p><img src="/../../../images/image-20220714191849256.png" alt="image-20220714191849256"></p><h3 id="计算机的发展历程"><a href="#计算机的发展历程" class="headerlink" title="计算机的发展历程"></a>计算机的发展历程</h3><h4 id="硬件的发展"><a href="#硬件的发展" class="headerlink" title="硬件的发展"></a>硬件的发展</h4><table><thead><tr><th>发展阶段</th><th>时间</th><th>逻辑元件</th></tr></thead><tbody><tr><td>第一代</td><td>1946-1957</td><td>电子管</td></tr><tr><td>第二代</td><td>1958-1964</td><td>晶体管</td></tr><tr><td>第三代</td><td>1964-1971</td><td>中小规模集成电路</td></tr><tr><td>第四代</td><td>1972-现在</td><td>大规模、超大规模集成电路</td></tr></tbody></table><h4 id="计算机原件更新"><a href="#计算机原件更新" class="headerlink" title="计算机原件更新"></a>计算机原件更新</h4><ul><li>摩尔定律：每隔18个月，CPU性能高一倍</li><li>半导体发展</li><li>微处理器发展</li></ul><h4 id="软件的发展"><a href="#软件的发展" class="headerlink" title="软件的发展"></a>软件的发展</h4><h4 id="计算机的发展"><a href="#计算机的发展" class="headerlink" title="计算机的发展"></a>计算机的发展</h4><p>两极化，更微型化，和更巨大化</p><h3 id="计算机系统层次结构"><a href="#计算机系统层次结构" class="headerlink" title="计算机系统层次结构"></a>计算机系统层次结构</h3><p><img src="/../../../images/image-20220714193048813.png" alt="image-20220714193048813"></p>]]></content>
      
      
      <categories>
          
          <category> 计算机组成原理 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 大三暑假 </tag>
            
            <tag> 计算机学习 </tag>
            
            <tag> 计算机组成原理 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2022/07/03/T4%E7%A0%94%E7%A9%B6%E8%83%8C%E6%99%AF/"/>
      <url>/2022/07/03/T4%E7%A0%94%E7%A9%B6%E8%83%8C%E6%99%AF/</url>
      
        <content type="html"><![CDATA[<h2 id="研究背景"><a class="header-anchor" href="#研究背景">¶</a>研究背景</h2><p>基于深度学习的模型极大地提高了带钢表面缺陷显著目标检测的性能</p><h2 id="传统的学习模型"><a class="header-anchor" href="#传统的学习模型">¶</a>传统的学习模型</h2><p>第一种是基于启发式先验的模型</p><ul><li>基于对比度</li><li>基于背景先验</li><li>基于周围差异</li></ul><p>第二种基于传统的机器学习</p><ul><li>随机森林。SVM等</li></ul><p>第三种（主要是近几年的）</p><ul><li>yolov3以及优化，对损失函数的优化，特征尺度的优化等</li></ul><p><a href="E:%5CSIGS%5Cpaper%5CEdge-Aware_Multi-Level_Interactive_Network_for_Salient_Object_Detection_of_Strip_Steel_Surface_Defects.pdf">参考1</a></p><ul><li>多级交互式网络，用于检测带钢表面缺陷</li></ul><h2 id="痛点"><a class="header-anchor" href="#痛点">¶</a>痛点</h2><p>然而，由于带钢表面缺陷的复杂性，现有模型在噪声干扰、缺陷区域与背景对比度低等挑战场景中表现不佳。</p><p>边缘感知多级交互网络</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2022/07/02/%E7%8E%AF%E8%8A%82%E4%BA%8C/"/>
      <url>/2022/07/02/%E7%8E%AF%E8%8A%82%E4%BA%8C/</url>
      
        <content type="html"><![CDATA[<h1>第一题</h1><p>医学图像分析</p><p>这个应该要做的多一点，突出多样一点，才有机会得分高</p><h1>第二题</h1><h3 id="第一小题"><a class="header-anchor" href="#第一小题">¶</a>第一小题</h3><ol><li>概率论</li><li>（应该是凸优化）</li><li>数值分析</li><li>解析数论</li></ol><h1>第三题</h1><h1>第四题</h1><p>我觉得就是1,4,5吧。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2022/05/31/%E5%A4%A7%E5%88%9B/%E7%B2%92%E5%AD%90%E6%BB%A4%E6%B3%A2%E4%B8%8E%E4%BB%A3%E7%A0%81%E7%BB%93%E5%90%88/"/>
      <url>/2022/05/31/%E5%A4%A7%E5%88%9B/%E7%B2%92%E5%AD%90%E6%BB%A4%E6%B3%A2%E4%B8%8E%E4%BB%A3%E7%A0%81%E7%BB%93%E5%90%88/</url>
      
        <content type="html"><![CDATA[<p>粒子滤波</p><p>$$观测函数 w(i+1)&#x3D;w(i)*e^{\frac{(a-b)^2}{2\sigma^2}},\sigma&#x3D;0.9$$</p><p>初始化：每个粒子初始位置室内全环境随机生成，方向360°随机，w&#x3D;1（四个参数x，y，w，h&#x3D;朝向）</p><p>for 随着时间变动</p><ol><li><p>对于每个粒子，先根据观测函数公式更新权重（分别是cv点的远近，指纹信号的远近，预测点远近）</p></li><li><p>归一化</p></li><li><p>碰到障碍物权重设为0</p></li><li><p>计算预测点（算期望）</p></li><li><p>然后重采样（每一次都，加噪声）</p></li><li><p>根据pdr的方向和步长，对每个点进行预测（对步长和方向加噪声）（预测步）</p></li></ol>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>人格依恋测试</title>
      <link href="/2022/05/31/%E4%BA%BA%E6%A0%BC%E4%BE%9D%E6%81%8B%E6%B5%8B%E8%AF%95/"/>
      <url>/2022/05/31/%E4%BA%BA%E6%A0%BC%E4%BE%9D%E6%81%8B%E6%B5%8B%E8%AF%95/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="你怎么能偷看人家日记呢！！" data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="36e09de38faf856bd986cef78dee73a81f87bc2f02410380524d865b5dca6631">19f5612b4aec4e64cf47f8017ba485705e319f78661f8c8c57d575fec3ff6bfc7773cbc21fbdf850b1102bc9e036f641b0cf4dba9e2fb9b026bc813ea9f3ab93e6f0517bcbbcabfb9351d8b3d1d4a911c1ad8393868374be7fb56a9fd2f8edad16cf55f03e5a657ba2c9dec3f1a64b76c19af03060949e4339c10d83d97382972ef874e83cacc4876516c17ac4ae4610c8b34bd9bf473ba162d40ceab9bca5212d9ab39be6c48568059c839a118c67151cad99a97289fd26418ef2254c4dabf5860b8042f8c84401c28e78d9c8a46e169101a7821e0701e23105d8e0153972ca50acbd8f8a3ca758522ea2b924f1aa60877c2339d9ae4a6efae1dff527bb12ebf2eaa45445ddc201e36ec10131531900121adfee748a9c350dd513921b9a291e03c5395a73d31e545f94689fd2876f822a5f315b0fd6907414f64393e2ef09e3e8ce8d67e4daf0b58ba14c5130fbb8db0d049288542487fa6f385668b39b3e34c3cbe61e75f5c353f95330f8322a26da8d2df9e46c9a19f3610c5d53213d5d32da4fbfe76e167ed1109a7a69e76010885d2225b5c3ca14af2e38af807d2f2c8e166f38b024410d4946a60c21996eae3dd3f32d86bc58a1a956bbc68ebb826196bcdf37c6c8eeb4ca439672d2f967d9b1d1ebc04522a8d6272b63a48be71b0ad5c5a4464e94231a22dc1338fac0cbca15e332af35098ea9133200f61acaec788035b01a9b56333a8e310442abbe0f4c1f27e869350de649a6f43f59669cf4daa84cfe204659c57c54a8dc1e5f11c7d165b66035f4bbcfb6cdbc0dc9aa802797c5b2496cd0de9bde43dfece8d027e22cd38f1d875a79f0de8891920e821677a0ff089b2989e0fa7377dc9dcb423dfee4c2d680f99a89b712aa65d5e4eba40c8c9e19bb44314fd7bae5f5e84c97d0d0af8faa7bc43603a81ef014442bf65f1f5d4f56bfa02bb24fed6ed117975168f75774ea0e571bdfd907c770f21fda8dc3d0a86fce26eeeec5670155d4fc6bd02e46e6f432df1dddb33df2f5b6d0d6e44657b9df7a94c73166d90b3b20ab9d5134483a712f148a9dbba10a8429d1473981beff1c2c1595220f5a3eb40ba663582c6b76e5262774539f73146c509c7ee0a8e20e7cc0ac473df43e44f185451aa191dc86f108d42449126c2bd207ff9418d3dc17cd8afb998029f383924ae53289ad0dac16719fa33fe5fd85020e92c609e06e25d6d9c4426ece7076c3ce4dcd3c0ac83346f73f4d44609b5ec10ec1ec5f649f23b46489f648e46733945f9c09b0d9017f5f99a23fb3134dc57ccdc53ccea1bf0e491f329cd7000b035eb5868a1005cdaf9f763d08c3dfc8d51857cced50ad5f9423c537e5c126e11561cf6abd5bd36bfe838ecbab3cfea4a6ca090ad8c6425baff2c658170ac359e4cd0d39b93082e1d7d11f1c9099d494397bde0c042d918e2354dafab79f9ad4e6870f43ea1f6a28ee97c77699b2ac0959af4a9b6ded5be29b4919dcbe24b7c815cf8e16eca6a0e257dad6819203f82adbc9cfc304e2aaefc796d8ba782767227f334b4d8929b631bcdcf40de24e15d94a46df00400818535b28939d5331a2d216de27d22203524ae79fbc43c222aba92e75595c7ef65297eab063b0d16e78f25da0b35df65f2a37518e3487d7728db8e9a07a5968a9f40d7628561238b7bb4bdb663af4ecbf4ff273b10e0d70b091638c08ff786e325c91a0bccf1b8e7cfd118214cf99eed050eef1759373e3a4cffecb9aabdde085b5adc745f266bf54c4b3f2c7be4a2e897f9cf8f505888d023082d3d6b7f5e201332dce5f3261659e9bc454df30718fec124aed145308799d1e4cbf5299767836a2047a4715c3a07fddd195461c491baee577a982a626b33834a132042e5f9b8ee0a27f580396aa968eb3a5da80425bf8046c7cf4747ec4f61c1f926dbc96621687ddb5f959868eb77985d6b5e9c90a2ead7bf2e7062e9c137cf216b8aab893ac7264176a7530fb66e9ded26af58a9e2e77a00c0ba2ac05e08bd4fc028d49ee49c59448aac9cdb95ca4522dadd585f653b72475c09cda3127d2202b494fc94736cc570ababdbb2359f66f72463d3ee19dbb0df12c800ca5cb95adca773cfca4df36b5ad64ac110cccaf9acd362df9da912e99007f97216f456c6f84b4384255e6b1371919028cebb9170e29c9f20d569170f021044b2ba2027fa1f23aaa7cabb405df9d0739f99444c66deb6702d949d9db8244797044f5c5f39dcae16916a840def87bfe58e726991181492a87c7a1af80b1f4662fd3ae93f3bbe6ba8175ec6280f92d1d2c5c05938d107eead7560533dec99776b0e1f66f23b6b5172ae9ee902c7472653b4ddd427cc8f561430c1fe2db1d1ddde13365798aed51383496356544f7c6b34374bad2390b67a8b8ca5cee89e53c37aa6667bfb517ad0301e33fcc97e70ba16b5f0dda6ec53afc9fec84bef26dd87652682bbf2e3e1513184e2ccdb54996aa1e14cc8e1460fcdbee13b41544442ba9afff0f77a6b09e432e3dd60376093f179252d21dfd7c84fb6bce655b27b1f167d98074600f64761d069174a0d256aa446330bcb2aa7573d1634f8ed6d21d68f0fd4162ee928d1434fc646c85c5ec19506a73202ca4d3e5fbeb9212944a5398c56994c4965f2e2fe42a05ee5cd17fc29dd3b92f39d2f66a8e719e77e0a6d6ab693f941ab55f3a3983c87ec74bff23b6f79126fb52a00c7628ced014b9ec0f2689c06a4089024b92abb221bb3d84c21481c179fdf2504341bd2f3fdab05e9750be8ff6027d00b8907a8a452227001a514bc979b92af665b6eb091c2affb6490975638e7e26624b41ab6357a7cb6b71b3cd5e6f5f8356c94fdccdc0ba943e1cc28ef47021e0bf4ca132b3e9ec8eda999d2ea20e15f462bb0a241457b8f3c467a9e592cce6a53d61950c18610f88886e4e3735075a8f9916fd1026eabbd5ce94a526393c5bdcc9c7bab96da70ea1e92ca95576fe8a7c389b77007b53814af0dbc450016654eefc5f0f9f044d2739894edd3dcf548cfb4d265fd05d73c951e9b547834c6df38330ee51dbd3c2a7563a12b456666de034a4ccd80cca3e5d5c35660e26a122fb66b1dcfa41e14e4290c9eaa2e1b9c5453aeaa67a1a406518ba268d6353952ace23071bbf32241149e1a175743acf165545ba00d4115df57f005c24e3a47b53594eddee66fd5e1998145cb0d9016573cc7f82f0e92089042d3c698522d6e8393e6b4b04e4865dbdd0be24397fa033b2eb9d9d69cf48f1bd916d9660c329b7d93bff5592f6850128d5a96c0b5c73afb033013285661fc725fcc0fd1d55c7fa09d806dbd896ce57451d2da951995717cab4c5be6e7818c043bf4ac3b9243b1d71ea8e6229a13e69af1d89ab1303593d2d70f8123338f405f9f195a80c07a197abc0d0617709a7c7148d6dd440ca3b85ae6565a761f1bed7d0ecd6267a59203d3de9644a98d163108a6bd9c5c8f26d563b700ff31d45c09747afb6ceaa3ec85e78f7cc007b522447dfee9964ec48a5caa2a3af0b625edb47eba9810f3a9c33e0a1d1939825473a665c124d641cff9c3b23336b506ddf692e7d90778897fb674880c8240b5fed30d11bf38a3ab763fd5d493764accd01e7b6db8032a12dcbfe6ad23a288a587f3b283b78ba0e572163a34f5d5490cbf45c252574b24b7ce6cfcecdd779b35fa9bb0dab8ee3829b3bf7c8fa4b91204e54f60d213628e886ed07b7e3eb9236971ccc8b82aaa036dc54ef4f4ffbe2f652adfca1fff8b21371e1f6fbc963c671264075108bc25d88b415da2575b707cca10e988e7f367e36c3f93390bd9579516be5b9cc7a021ee8ae84579033cf54015668e8016503112d953ca273fd56f88ef3abce2ba7ea5ce197b73c13cb34bb14fab99d5c62b73397723977998ebb2dbd23658cd95af9e585a2ba73b0925b53f183236e739c467d9365063296426fd4b2a13f5a017e5efa993a8eeb484138e468c547f372098f212a15b24f2ae51eb536a47f77e3c46b7b978c120ff3bb86125068bfdb7034a13372a5ae2d5e5a96b87a05fcfd2806a519c53189ab52f9a4db81fe027f546a0fc8d4eea8b3d60a5231975ce0cf9d0ff865dd9c90d11d7394c371849b8cea1f77c9ae483a0641b184e01a81c7e98ab2825822e2a4c7e6d9fcbf06bc1c3a82b765c7099695</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">这玩意儿需要密码哦（日记专用密码）</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 恋爱 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 性格 </tag>
            
            <tag> 恋爱 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>计算机三级题库</title>
      <link href="/2022/05/28/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%AD%A6%E4%B9%A0/%E5%88%B7%E9%A2%98%E5%BA%93%E7%9C%9F%E9%A2%98/"/>
      <url>/2022/05/28/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%AD%A6%E4%B9%A0/%E5%88%B7%E9%A2%98%E5%BA%93%E7%9C%9F%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<p><a href="https://blog.csdn.net/qq_20894009/article/details/104034222">(31条消息) 计算机等级考试数据库三级知识点吐血总结！！！_元气姐的博客-CSDN博客_计算机三级数据库知识点</a></p><h3 id="填空题速成"><a href="#填空题速成" class="headerlink" title="填空题速成"></a>填空题速成</h3><p><a href="https://zhuanlan.zhihu.com/p/411576898">NCRE三级数据库·应用填空题最全整合 - 知乎 (zhihu.com)</a></p><h3 id="第一套"><a href="#第一套" class="headerlink" title="第一套"></a>第一套</h3><ol><li>浏览器&#x2F;服务器框架，应用服务器负责程序，数据库服务器存储数据</li><li><strong>关系模式</strong>静态，<strong>关系</strong>是动态，随着存储会改变</li><li>人机界面采用<strong>原型迭代法</strong>，进行初步设计。。。</li><li>建立搜索的索引，index，include，where都要用到</li><li>触发器和check都可以实现用户完整性约束，default只有另外两个</li><li>授权冲突，以deny为主</li><li>db_datawriter没有select</li><li>master、model、msdb每次修改完都要备份，用户数据库周期备份，tempdb是临时文件数据库，不用备份</li><li>分布式数据库查询中，代价大是连接合并操作，分片透明是透明性最高的，本地自治</li><li>数据模型三要素：数据结构、数据操作、完整性约束</li><li>TOP 3 with ties 是和group by连用的</li><li>存储的时候，一行不能跨页存储，看看一页有行，然后再算效率</li><li>dbcreator</li><li>周期性检查<strong>事务等待图</strong>实现死锁检测</li></ol><h3 id="第二套"><a href="#第二套" class="headerlink" title="第二套"></a>第二套</h3><ol><li><p>不能小于model模板</p></li><li><p>check用了其他，就要放后面</p></li><li><p>master数据库最重要，只支持完整备份</p></li><li><p>OLTP宏观；OLAP微观</p></li><li><p><img src="/../../images/image-20220527095359857.png" alt="image-20220527095359857"></p></li><li><p>有commit，redo。没有，undo</p></li><li><p>9 11 13 14 24 25 33 37 43 44</p></li></ol><h3 id="第三套"><a href="#第三套" class="headerlink" title="第三套"></a>第三套</h3><p><img src="/../../images/image-20220527104938770.png" alt="image-20220527104938770"></p><p>差异备份是指用完整改变那些变化了的</p><p>UNION、EXCEPT、INTERSECT</p><p>8 11 12 22 23 27 28 30</p><h3 id="UML"><a href="#UML" class="headerlink" title="UML"></a>UML</h3><p>协作图：描述交互</p><p>用例图：描述系统与外部系统及用户的交互</p><p>顺序图：系统中的关系</p><p>状态图：状态变化</p><p>类图：描述关系</p><p>活动图：活动之间的流程，系统用例模块的先后执行次序，流程图</p><h1 id="重点"><a href="#重点" class="headerlink" title="重点"></a>重点</h1><p>15，<strong>基本表是否建立索引的原则(选择，简答)</strong><br>※ <strong>经常需要查询，连接统计操作，且数据量大的表，可建立索引</strong>。<br>※ <strong>通常在表的主码，where查询中使用率较高的属性，参与连接操作的属性，group by,order by 的属性 ，这些属性上面建立索引，可以加快查询效率</strong>。</p><p>UML语言定义在一个四层建模概念框架中：<strong>元元模型，元模型，模型，用户模型</strong></p><p>类图（Class Diagram）是面向对象系统建模中最常用和最重要的图，是定义其它图的基础。<br>类图主要是用来显示系统中的类、</p><p>用例图（Use Case Diagrame）：描述了人们希望如何使用一个系统，将相关用户、用户需要系统提供的服务以及系统需要用户提供的服务更清晰的显示出来，以便使系统用户更容易理解这些元素的用途，也便于开发人员最终实现这些元素。</p><p>活动图类似于流程图，但它支持并行活动。逻辑流程的先后</p><p>状态图用于显示状态机（它指定对象所在的状态序列）、使对象达到这些状态的事件和条件、以及达到这些状态时所发生的操作。</p><p>顺序图是交互图中的一种，顺序图也称为时序图或序列图。 用于描述对象之间的交互顺序，着重体现对象间消息传递的时间顺序。</p><p>“通信图”也叫“协作图、合作图”，是顺序图之外的另一种表示交互的图，二者在语义上是等价的，但是，两种图表达的侧重点不同。</p><p>构件图：描述代码构件的物理结构以及各构件之间的依赖关系。</p><p>包图：在对复杂系统建模时，经常需要处理大量的类、接口、组件、节点和图，有必要将这些元素进行分组，把语义相近的元素组织起来，加入同一包中，以方便理解和处理整个模型。</p><p>部署图：系统中硬件的物理体系结构</p><p>1，TOP：</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">Select</span> <span class="token keyword">top</span> <span class="token number">3</span> <span class="token keyword">with</span> ties GoodsName <span class="token keyword">from</span> Table_name <span class="token keyword">order</span> <span class="token keyword">by</span> GoodsName<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>1，5个系统数据库：<br>Master：记录sqlsever实例的所有系统级信息。<br>Msdb：保存关于调度报警、作业、操作员等信息。<br>Model:存放用户数据库公共信息。<br>Tempdb:临时数据库，用于保存临时对象或者结果集。<br>Resource:SQLsever中所有系统对象。</p><p>10，创建索引</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">CREATE</span>  <span class="token punctuation">[</span><span class="token keyword">UNIQUE</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token keyword">CLUSTERED</span><span class="token punctuation">]</span>  <span class="token keyword">INDEX</span> INDEX_NAME <span class="token keyword">ON</span> TABLE_NAME  <span class="token punctuation">(</span> COLUMN_NAME <span class="token punctuation">)</span> <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>11，<strong>建有唯一聚集索引的视图称为称为索引视图，也称为物化视图</strong>。</p><p>用户定义的都是标量函数</p><p>两类用户定义函数：标量函数和表值函数</p><p>3，<code>INSTEAD OF</code> :前触型触发器，在引发的SQL语句中指定的操作都已成功执行，并且所有的约束检查也成功完成后，才执行此触发器。</p><p>4，<code>FOR|AFTER</code> :后触型触发器，指定执行触发器而不是执行引发触发器执行的SQL语句。</p><p>3，身份验证模式：Windows身份验证模式 ，混合身份验证模式</p><p>4，固定服务器角色：<br>Bulkadmin：具有执行BULK INSERT权限。<br>Dbcreator:具有创建、修改、删除、还原数据库的权限。<br>Diskadmin:具有管理磁盘文件的权限。<br>Processadmin:具有管理运行在SQL SEVER中进程的权限。<br>Securityadmin:对于专门管理登录账户、读取错误日志以及执行create database的权限。<br>Severadmin:具有设置服务器级别的配置选项和关闭服务器的权限。<br>Setupadmin:仅限于添加和删除链接服务器。<br>Sysdamin: 系统管理员角色。具有在服务器及数据库上执行任何操作的权限。<br>5，固定数据库角色：<br>Db_accessadmin:具有添加和删除数据库用户的权限。<br>Db_backupoperator:具有备份日志，备份数据库的权限。<br>Db_datareader:具有查询数据库中所有用户数据的权限。<br>Db_datawriter:具有插入，删除和更改数据库中所有用户数据的权限。<br>Db_ddladmin:具有执行数据库定义语言的权限。<br>Db_denydatareader:不允许具有INSERT，DELETE，UPDATE数据库所有用户数据的权限。</p><p>Db_owner:具有在数据库中进行全部操作的权限。<br>Db_securityadmin:具有管理数据库角色。角色成员以及数据库中的语句和对象的权限。</p><p>1，数据库维护工作主要包括：<strong>数据库的转储和恢复，数据库的安全性和完整性控制，数据库性能的监控分析和改进，数据库的重组和重构</strong>。<br>2，<strong>数据库重组</strong>：不修改数据库原有设计的逻辑和物理结构。<br><strong>数据库重构</strong>：部分修改数据库的模式和内模式。</p><p>※预期的事务内部故障指可以通过事务程序本身发现的事务内部故障。可通过<strong>事务回滚</strong>，撤销其对数据库的修改。<br>※非预期的事务内部故障指<strong>不能由事务程序处理</strong>的，如<strong>运算溢出</strong>，<strong>并发事务死锁故障</strong>。</p><p>3，数据转储机制：<br><strong>完全转储</strong>：对数据库中所有数据进行转储。<br><strong>增量转储</strong>：只复制上次转储后发生变化的文件和数据块。<br><strong>差量转储</strong>：对最近一次数据完全转储以来发生的数据变化进行转储。</p><p>8，数据库镜像分成两种模式：<strong>双机互备援模式</strong>(两台主机均为工作机)和<strong>双机热备分模式</strong>（一台工作机，一台备份机）<strong>（简答）</strong>。</p><p>1，恢复模式：<br><strong>简单恢复模式，完整恢复模式，大容量日志恢复模式</strong>。<br>2，<strong>简单恢复模式</strong>不支持事务日志备份。</p><p>4，事务日志备份：<br><strong>纯日志备份</strong>，<strong>大容量操作日志备份</strong>，<strong>结尾日志备份</strong>。</p><p>8，对于数据库备份，<code>SQL SEVER2008</code>支持三种备份方式：<strong>完整备份，差异备份，日志备份</strong>。</p><p>3，数据分布策略：<br>从数据分片和数据分配的角度看：<br>数据分片：<strong>水平分片，垂直分片，导出分片，混合分片</strong>是以上3中分片方式的混合。<br>数据分配：<strong>集中式，分割式，全复制式，混合式</strong>。</p><p>数据分片：<strong>水平分片，垂直分片，导出分片，混合分片</strong>是以上3中分片方式的混合。</p><p>7，数据划分：<br><strong>轮转法</strong>：适用于扫描整个关系的应用。<br><strong>散列划分</strong>：更加适合于点查询。<br><strong>范围划分</strong>：适合范围查询和扫描整个关系。</p><p>函数：标量函数，表函数</p><p><img src="/../../images/image-20220527195641862.png" alt="image-20220527195641862"></p><p>日志为单位；数据块为单位</p><p><img src="/../../images/image-20220527203813357.png" alt="image-20220527203813357"></p><p>触发器中，保存删除等的表示deleted，inserted</p><p>一并回收CASCADE</p>]]></content>
      
      
      <categories>
          
          <category> 计算机三级 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据库 </tag>
            
            <tag> 计算机三级 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>计算机三级</title>
      <link href="/2022/05/24/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%AD%A6%E4%B9%A0/%E7%AC%AC%E4%BA%8C%E7%AB%A0/"/>
      <url>/2022/05/24/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%AD%A6%E4%B9%A0/%E7%AC%AC%E4%BA%8C%E7%AB%A0/</url>
      
        <content type="html"><![CDATA[<h2 id="参考："><a href="#参考：" class="headerlink" title="参考："></a>参考：</h2><p><a href="https://blog.csdn.net/delay_coder/article/details/89410120">(31条消息) 计算机三级数据库：课本知识点总结以及备考方案建议_Volavion的博客-CSDN博客_计算机三级数据库</a></p><h2 id="第一章-数据库应用系统开发方法"><a href="#第一章-数据库应用系统开发方法" class="headerlink" title="第一章 数据库应用系统开发方法"></a>第一章 数据库应用系统开发方法</h2><ol><li><p>数据库系统设计分为6个阶段</p><ul><li>需求分析</li><li>概念结构设计：数据库概念模型设计和系统总体设计。</li><li>逻辑结构设计：数据库逻辑结构设计，应用程序概要设计，数据库事务概要设计。</li><li>物理结构设计：数据库物理结构设计，数据库事务详细设计，应用程序详细设计。（<strong>但是不包括实现</strong>）</li></ul></li><li><p>DBAS生命周期模型的五个步骤：</p><ul><li>项目规划（系统规划与定义{确定视图}，可行性分析{经济、操作，技术、开发方案可行性}，项目规划）</li><li>需求分析（DBAS需求分析规范说明书）：分析用户的应用请求（<strong>用户考虑的</strong>）</li><li>系统设计（概念设计，逻辑设计和物理设计 ）</li><li>实现与部署：建立数据库结构，数据加载，事务和应用程序的编码与测试，系统集成、测试与试运行，系统部署</li><li>运行与维护：数据库应用系统的运行管理和数据库本身的运行管理。由DBA负责。</li></ul></li></ol><h2 id="第二章-需求分析"><a href="#第二章-需求分析" class="headerlink" title="第二章 需求分析"></a>第二章 需求分析</h2><ol><li>数据字典：是对系统中各类数据描述的集合</li><li>需求的获取方法：面谈，实地观察，问卷调查，查阅资料</li><li>需求分析过程：标识问题，建立需求模型，描述需求，确认需求</li><li>需求分析<ul><li>数据需求分析：数据组织和存储</li><li>功能需求分析：针对DBAS，数据处理需求分析、业务规则需求分析<ul><li>视图</li></ul></li><li>性能需求分析：系统应做到什么程度</li><li>其他需求分析：存储、安全</li></ul></li><li><ul><li>DFD方法（data flow diagram）：（自顶向下逐步细化的结构化分析方法）<ul><li>数据流：输入输出，保存：箭头表示</li><li>处理：矩形框表示</li><li>数据存储：圆形矩阵</li><li>外部项：提供者和使用者：圆形框或平行四边形</li></ul></li><li>IDEFO方法：箭头表示数据流，矩形表示活动。<ul><li><img src="/../../images/image-20220524091127620.png" alt="image-20220524091127620"></li><li>控制也可以叫约束、参考</li><li>机制是控制所需要的资源</li></ul></li><li>UML方法：也可以进行信息系统的需求分析。</li></ul></li></ol><h2 id="第三章-数据库结构设计"><a href="#第三章-数据库结构设计" class="headerlink" title="第三章 数据库结构设计"></a>第三章 数据库结构设计</h2><ol><li><p>数据模型三要素：</p><ul><li>数据结构</li><li>数据操作</li><li>完整性约束</li><li>IDEF1X数据建模：<ul><li>多对多联系：非确定关系</li><li>矩形：独立实体集；圆角矩形：从属实体集</li></ul></li></ul></li><li><p>函数依赖：一个关系中属性之间的依赖关系</p><ul><li>分解：无损连接：数据没有增加也没有减少。保持函数依赖：函数依赖在分解后不丢失</li></ul></li><li><p>UML图：就是把关系去掉</p></li><li><p>视图：提供逻辑数据独立性</p></li><li><p>索引：不适用：查询很少；值很少；经常更新</p><ul><li><p>聚集索引：就是索引项的顺序和记录的物理顺序一致（这两个叫有序索引）</p><ul><li>索引结构：由索引列列值和对应的指针构成</li></ul></li><li><p>非聚集索引：顺序不一致</p></li><li><p>稀疏索引：只有一部分查找码的值有对应索引记录，但是也是<strong>有序</strong>的</p></li><li><p>稠密索引：所有查找吗都有索引记录（这两个叫散列索引）</p></li></ul></li><li><p>堆文件：数量少，操作频繁</p></li><li><p>关系模式个数问题：</p><ul><li>实体一个一个</li><li>一对多一对一都可以合并到实体中</li><li>一个多对多算一个关系模式</li></ul></li><li><p>多对多：非确定联系；多对多可以拆成两个一对多：标定型联系；一对多：非标定性</p></li><li><p>事务-基本表交叉矩阵：帮助有效的文件组织</p></li></ol><h2 id="第四章-数据库应用系统功能设计"><a href="#第四章-数据库应用系统功能设计" class="headerlink" title="第四章 数据库应用系统功能设计"></a>第四章 数据库应用系统功能设计</h2><ol><li>服务器出现问题了就不能继续使用了</li><li>B&#x2F;S结构的数据库应用系统：特点：用户界面完全通过www实现，服务器要求低；C&#x2F;S,客户端服务器结构，服务器有两种，一种是在客户端一种是在另一端</li><li>死锁：分清楚是在应用设计过程还是在系统运行过程，分散，按顺序。判断：可以把图画出来</li><li>四个层次：<ul><li>表示层：接受用户输入</li><li>业务逻辑层：直接传送数据，构建设计，梳理业务</li><li>数据访问层次：数据读取和保存、事务设计</li><li>数据持久层：索引，各种系统构建，存储和管理数据</li></ul></li><li>三层b&#x2F;s：表示层；应用层；业务规则</li><li>DDL语言</li><li>三层：浏览器、数据库服务器、应用服务器</li></ol><h3 id="第六章-高级查询"><a href="#第六章-高级查询" class="headerlink" title="第六章 高级查询"></a>第六章 高级查询</h3><ol><li>前三个 top 3</li><li>自定义函数是标量函数</li><li>distinct</li><li>五中约束：主键约束、外键约束、唯一性约束、缺省值约束、检查约束</li><li>union</li><li>ULM：顺序图</li></ol><p><img src="/../../images/image-20220525094113678.png" alt="image-20220525094113678"></p><h2 id="错题"><a href="#错题" class="headerlink" title="错题"></a>错题</h2><ol><li>触发器：有利于update，insert等操作，有利于用户操作。</li><li>身份模式验证：Windows身份验证和Windows和SQL Server身份验证模式</li></ol><h3 id="填空题速成"><a href="#填空题速成" class="headerlink" title="填空题速成"></a>填空题速成</h3><p><a href="https://zhuanlan.zhihu.com/p/411576898">NCRE三级数据库·应用填空题最全整合 - 知乎 (zhihu.com)</a></p>]]></content>
      
      
      <categories>
          
          <category> 计算机三级 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据库 </tag>
            
            <tag> 计算机三级 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2022/05/19/vscode%E9%85%8D%E7%BD%AElatex/"/>
      <url>/2022/05/19/vscode%E9%85%8D%E7%BD%AElatex/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>A PDRVIO Loosely coupled Indoor Positioning System via Robust Particle Filter</title>
      <link href="/2022/05/13/%E5%A4%A7%E5%88%9B/2022-05-13-A-PDRVIO-Loosely-coupled-Indoor-Positioning-System-via-Robust-Particle-Filter/"/>
      <url>/2022/05/13/%E5%A4%A7%E5%88%9B/2022-05-13-A-PDRVIO-Loosely-coupled-Indoor-Positioning-System-via-Robust-Particle-Filter/</url>
      
        <content type="html"><![CDATA[<h1 id="解决的核心问题"><a href="#解决的核心问题" class="headerlink" title="解决的核心问题"></a>解决的核心问题</h1><p>基于室内导航系统的粒子滤波，利用PDR和VIO处理</p><p>(VIO) Visual Inertial Odometry  视觉惯性里程计 </p>]]></content>
      
      
      <categories>
          
          <category> 大创 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> paper, learning </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>英文文献阅读技巧学习</title>
      <link href="/2022/05/13/%E5%A4%A7%E5%88%9B/%E8%8B%B1%E6%96%87%E6%96%87%E7%8C%AE%E9%98%85%E8%AF%BB%E6%8A%80%E5%B7%A7%E5%AD%A6%E4%B9%A0/"/>
      <url>/2022/05/13/%E5%A4%A7%E5%88%9B/%E8%8B%B1%E6%96%87%E6%96%87%E7%8C%AE%E9%98%85%E8%AF%BB%E6%8A%80%E5%B7%A7%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<h2 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h2><ul><li>abstract 的摘要部分：大致讲什么样的内容</li><li>introduction的最后两段左右的contribution</li><li>body部分的小标题+conclusion：找中心论点&#x2F;findings，核心观点和核心发现</li><li>找到了再去扫读body部分，用什么方法和逻辑角度得到这个东西</li><li>了解了框架和核心后，总结复述称自己语言</li></ul>]]></content>
      
      
      <categories>
          
          <category> 大创 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> paper, learning </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2022/05/08/%E6%95%B0%E6%8D%AE%E6%8C%96%E6%8E%98/%E6%9C%80%E5%90%8E%E7%9A%84%E8%83%8C%E8%AF%B5/"/>
      <url>/2022/05/08/%E6%95%B0%E6%8D%AE%E6%8C%96%E6%8E%98/%E6%9C%80%E5%90%8E%E7%9A%84%E8%83%8C%E8%AF%B5/</url>
      
        <content type="html"><![CDATA[<p><img src="/../../images/image-20220508142936171.png" alt="image-20220508142936171"></p><p><img src="/../../images/image-20220508145347427.png" alt="image-20220508145347427"></p><p><img src="/../../images/image-20220508145321763.png" alt="image-20220508145321763"></p><p>随机森林显著改善泛化性能</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>数据挖掘第五章复习</title>
      <link href="/2022/05/07/%E6%95%B0%E6%8D%AE%E6%8C%96%E6%8E%98/%E7%AC%AC%E4%BA%94%E7%AB%A0/"/>
      <url>/2022/05/07/%E6%95%B0%E6%8D%AE%E6%8C%96%E6%8E%98/%E7%AC%AC%E4%BA%94%E7%AB%A0/</url>
      
        <content type="html"><![CDATA[<h1 id="5-1-预备知识"><a href="#5-1-预备知识" class="headerlink" title="5.1 预备知识"></a>5.1 预备知识</h1><p>​二元表示：因为这章主要考虑的是多种事物中各物品的联系关系，因此采用二元计数表示该物品有没有在该项目中出现，因此是<strong>非对称</strong>的</p><p>一些记号</p><img src="F:/博客/floder/source/images/image-20220506194009008.png" alt="image-20220506194009008" style="zoom:67%;" /><p>​其中，I就是所有事务数据的集合，如{苹果、雪梨}，T就是所有事务的集合，每一条事务都是I的<strong>子集</strong></p><p>项集就是T的子集，k-项集就是包含k个元素的集合</p><img src="F:/博客/floder/source/images/image-20220506194342263.png" alt="image-20220506194342263" style="zoom:80%;" /><p>支持度计数：就是X这个集合是T中多少个集合的子集（就是出现了多少次）</p><p>s就是支持度计数在所有n中所占的比例</p><p>频繁项集：给定一个阈值minsup，要是s大于它，那么这个X就是频繁项集</p><p><img src="F:/博客/floder/source/images/image-20220506194603170.png" alt="image-20220506194603170"></p><p>关联规则：X-&gt;Y，X和Y不相交（就是由X可以推出Y）</p><p>支持度s：即出现X又出现Y的集合占总数的比例</p><p>$$s(X-&gt;Y)&#x3D;\frac{\sigma(X \cup Y)}{N}$$</p><p>置信度c：包含X集合中，又包含Y的比例</p><p>$$s(X-&gt;Y)&#x3D;\frac{\sigma(X \cup Y)}{\sigma(X)}$$</p><p>发现有用的关联规则，目前的方法（这个规则要支持度大于minsup，置信度也要大于minconf）</p><img src="F:/博客/floder/source/images/image-20220506195118977.png" alt="image-20220506195118977" style="zoom:67%;" /><p>所以显然不能暴力，有两个子任务</p><ul><li>频繁项集产生<ul><li>其目标是发现<strong>满足最小支持度阈值</strong>的所有项集，这些项集称作频繁项集。</li></ul></li><li>规则的产生<ul><li>其目标是从上一步发现的频繁项集中提取所有<strong>高置信度</strong>的规则，这些规则称作强规则（strong rule）。</li></ul></li></ul><h1 id="5-2频繁项集的产生"><a href="#5-2频繁项集的产生" class="headerlink" title="5.2频繁项集的产生"></a>5.2频繁项集的产生</h1><img src="F:/博客/floder/source/images/image-20220506200101568.png" alt="image-20220506200101568" style="zoom:80%;" /><p>一般用格结构产生平凡项集，一般的方法就是产生一个，然后就拿去和T中的集合进行比较，复杂度是O(NMw)</p><p>三种方法减少：</p><ul><li><p>减少候选项集（Apriori原理）</p></li><li><p>减少比较次数，用高级数据结构，压缩</p></li><li><p>减少事务总数，搜索大小为3的时，把1,2删掉</p></li></ul><p>额。。还是Apriori靠谱</p><h2 id="5-2-1-先验原理"><a href="#5-2-1-先验原理" class="headerlink" title="5.2.1 先验原理"></a>5.2.1 先验原理</h2><p><strong>重要定理</strong> ：如果一个项集是频繁的，那么它的所有子集都是频繁的（显然，如果它在所有集合中出现的够多，那自己出现的肯定也够多）。不频繁，那么所有超集（包含这个集的集合）都是不频繁的</p><p>这种基于支持度度量修剪指数搜索空间的策略称为<strong>基于支持度的剪枝</strong></p><ul><li>这种剪枝策略依赖于支持度度量的一个关键性质，即<strong>一个项集的支持度决不会超过它的子集的支持度</strong>。这个性质也称为支持度度量的反单调性</li></ul><p>算法例子：</p><p><img src="F:/博客/floder/source/images/image-20220506201526408.png" alt="image-20220506201526408"></p><p>算法步骤：</p><ol><li>k&#x3D;1</li><li>产生1-频繁集$F_1$</li><li>repeat</li><li>k++</li><li>根据$F_{k-1}$产生候选项集$C_k$（后面讲）</li><li>对选项集$C_k$进行剪枝（后面讲）</li><li>对于选项集$C_k$中每个元素，计算其支持度</li><li>提取选项集$C_k$中的频繁k-项集（支持度大于阈值）</li><li>直到$F_k&#x3D;\empty$</li><li>结果等于$\cup F_k$</li></ol><p>算法特点：</p><ul><li>逐层遍历算法</li><li>采用产生-测试策略来发现频繁项集。每次迭代都会对每个候选集的支持度进行技术，并与最小支持度阈值进行比较</li><li>总迭代次数是频繁项集的最大长度+1（也不能提前知道）</li></ul><h2 id="候选项集的产生与剪枝-构造candidate-gen函数"><a href="#候选项集的产生与剪枝-构造candidate-gen函数" class="headerlink" title="候选项集的产生与剪枝(构造candidate-gen函数)"></a>候选项集的产生与剪枝(构造candidate-gen函数)</h2><p>首先排除暴力方法，就是全弄出来然后排除</p><h3 id="F-k-1-times-F-1-方法"><a href="#F-k-1-times-F-1-方法" class="headerlink" title="$F_{k-1} \times F_1$方法"></a>$F_{k-1} \times F_1$方法</h3><p>就是对频繁k-1 -项集和所有1项集交叉</p><img src="F:/博客/floder/source/images/image-20220506203108904.png" alt="image-20220506203108904" style="zoom:80%;" /><p>所以这种方法会产生<strong>所有符合的结果</strong>，但是重复会不少</p><img src="F:/博客/floder/source/images/image-20220506203155325.png" alt="image-20220506203155325" style="zoom:80%;" /><p>$F_{k-1} \times F_1$方法的改进，先把每个频繁项集的项以字典序储存，每个k-1项集只用比这个项集中都大的字典序的项进行拓展</p><p><img src="F:/博客/floder/source/images/image-20220506203409874.png" alt="image-20220506203409874"></p><p>但是仍然会产生不必要的候选</p><h3 id="F-k-1-times-F-k-1-方法"><a href="#F-k-1-times-F-k-1-方法" class="headerlink" title="$F_{k-1} \times F_{k-1}$方法"></a>$F_{k-1} \times F_{k-1}$方法</h3><p>这个是最好的方法</p><img src="F:/博客/floder/source/images/image-20220506203613392.png" alt="image-20220506203613392" style="zoom:80%;" /><p>首先默认每个项都以字典序排好，然后前k-2个都完全相同，才会合并</p><img src="F:/博客/floder/source/images/image-20220506203728279.png" alt="image-20220506203728279" style="zoom:67%;" /><p>这个方法是完备的，因为每个频繁k-项集，它的自己都是频繁的，因此合并前也是频繁k-1项集</p><p>剪枝只是对生成的候选项集中，存在项集的自己不是频繁项集，那这样就会被减去，由于这个生成过程已经保证了它的自己一定是频繁项集，因此已经不需要再考虑剪枝过程了</p><h2 id="5-2-4-支持度计数"><a href="#5-2-4-支持度计数" class="headerlink" title="5.2.4 支持度计数"></a>5.2.4 支持度计数</h2><h3 id="首先枚举事务t的所有3项集（在考虑k项集的时候，只用生成k项集）"><a href="#首先枚举事务t的所有3项集（在考虑k项集的时候，只用生成k项集）" class="headerlink" title="首先枚举事务t的所有3项集（在考虑k项集的时候，只用生成k项集）"></a>首先枚举事务t的所有3项集（在考虑k项集的时候，只用生成k项集）</h3><p><img src="F:/博客/floder/source/images/image-20220507091124357.png" alt="image-20220507091124357"></p><p>就是默认按照字典排序。然后先确定第一层就是第一个数字，有1,2,3；然后在第二层确定第二个数字，如1后可以有2,3,5，然后在第三层生成第三个数字，就得到了事务t的子集</p><h3 id="使用Hash树进行支持度计数"><a href="#使用Hash树进行支持度计数" class="headerlink" title="使用Hash树进行支持度计数"></a>使用Hash树进行支持度计数</h3><p><img src="F:/博客/floder/source/images/image-20220507091342103.png" alt="image-20220507091342103"></p><p>分裂规则</p><p><img src="F:/博客/floder/source/images/image-20220507091355772.png" alt="image-20220507091355772"></p><p>第几层就是判断第几个数据，然后按照mod分为3个区：1,4,7；2,5,8；3,6,9</p><p><img src="F:/博客/floder/source/images/image-20220507091501498.png" alt="image-20220507091501498"></p><p>例子如上（当叶节点有三个节点时，就分裂下去）</p><h4 id="生成Hash树后，对事务t的所有3项集进行比较和支持度计数"><a href="#生成Hash树后，对事务t的所有3项集进行比较和支持度计数" class="headerlink" title="生成Hash树后，对事务t的所有3项集进行比较和支持度计数"></a>生成Hash树后，对事务t的所有3项集进行比较和支持度计数</h4><p><img src="F:/博客/floder/source/images/image-20220507091655789.png" alt="image-20220507091655789"></p><p>简单来说，按照之前的分裂规则将t的所有子集分裂开来，直到到达叶子节点</p><ul><li><strong>存放在被访问的叶结点中的候选项集与事务进行比较</strong>，如果候选项集是该事务的子集，则增加它的支持度计数。</li></ul><h2 id="计算复杂性"><a href="#计算复杂性" class="headerlink" title="计算复杂性"></a>计算复杂性</h2><p>支持度阈值</p><ul><li><strong>降低支持度阈</strong>值通常将导致<strong>更多的项集是频繁的</strong>，导致计算复杂度增加。</li><li>随着支持度阈值的降低，<strong>频繁项集的最大长度将增加</strong>，导致算法需要扫描数据集的次数也将增多</li></ul><p>项数（维度）</p><ul><li>随着项数的增加，需要<strong>更多的空间</strong>来存储项的支持度计数。如果频繁项集的数目也随着数据项数增加而增长，则由于算法产生的候选项集更多，<strong>计算量和I&#x2F;O开销将增加</strong></li></ul><p><img src="F:/博客/floder/source/images/image-20220507092946834.png" alt="image-20220507092946834"></p><p>所以支持度阈值不必太小，项数不必太大</p><p>事务数</p><ul><li>由于Apriori算法反复扫描数据集，因此它的运行时间随着事务数增加而增加</li></ul><p>事务的平均宽度</p><ul><li>频繁项集的最大长度随事务平均宽度增加而增加</li><li>随着事务宽度的增加，事务中将包含更多的项集，这将增加支持度计数时Hash树的遍历次数</li></ul><p><img src="F:/博客/floder/source/images/image-20220507093224920.png" alt="image-20220507093224920"></p><h1 id="5-3-规则的产生"><a href="#5-3-规则的产生" class="headerlink" title="5.3 规则的产生"></a>5.3 规则的产生</h1><p><img src="F:/博客/floder/source/images/image-20220507095209312.png" alt="image-20220507095209312"></p><p>上面第二个重要定理</p><p>基本算法思路</p><pre class="line-numbers language-Pascal" data-language="Pascal"><code class="language-Pascal">第一个算法for 每一个频繁k-项集fk，k&gt;&#x3D;2 doH1&#x3D;fk的所有一项集的集合下一个算法(fk,H1)end for第二个算法(fk,Hm)k&#x3D;频繁k项集fk的大小m&#x3D;规则后建Hm的大小if k&gt;m+1 do &#x2F;&#x2F;因为如果比fk还大，那是不可能的H_&#123;m+1&#125;&#x3D;利用H_m生成的下一层（跟前面第一个差不多）    for h_&#123;m+1&#125; in H_&#123;m+1&#125; do    conf&#x3D;fk的计数&#x2F;(fk- h_&#123;m+1&#125;)的计数    if conf&gt;&#x3D; minconf    output the rule fk-h_&#123;m+1&#125;-&gt;h_&#123;m+1&#125;    else    delete h_&#123;m+1&#125;    end    第二个算法(fk,Hm+1)end<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> 数据挖掘学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数据挖掘第七章复习</title>
      <link href="/2022/05/07/%E6%95%B0%E6%8D%AE%E6%8C%96%E6%8E%98/%E7%AC%AC%E4%B8%83%E7%AB%A0/"/>
      <url>/2022/05/07/%E6%95%B0%E6%8D%AE%E6%8C%96%E6%8E%98/%E7%AC%AC%E4%B8%83%E7%AB%A0/</url>
      
        <content type="html"><![CDATA[<h2 id="7-1-概述"><a href="#7-1-概述" class="headerlink" title="7.1 概述"></a>7.1 概述</h2><ul><li>聚类分析仅根据在数据中发现的描述对象及其关系的信息，将数据对象划分为多个簇（Cluster）。其目标是，同一簇内的对象之间是相似的（相关的），而不同的簇中的对象是不同的（不相关的）。</li><li>簇内的相似性（同质性）越大，簇间差别越大，聚类就越好。</li></ul><p>旨在实用的聚类</p><ul><li>汇总数据</li><li>压缩数据</li><li>发现最近邻</li></ul><h3 id="聚类的不同类型"><a href="#聚类的不同类型" class="headerlink" title="聚类的不同类型"></a>聚类的不同类型</h3><p>层次聚类：有相互包含关系</p><p>划分聚类：不重叠</p><img src="F:/博客/floder/source/images/image-20220507101004578.png" alt="image-20220507101004578" style="zoom:33%;" /><img src="F:/博客/floder/source/images/image-20220507101023406.png" alt="image-20220507101023406" style="zoom:33%;" /><p>互斥聚类：一个只属于一个</p><p>重叠聚类：一个可以属于多个，比如一个学生可以又是。。又是。。</p><p>模糊聚类：聚类值在0-1之间取一个权值，根据权值大小决定去哪个集合</p><p>完全聚类、部分聚类：就是全部聚类和部分聚类嘛</p><h3 id="不同的簇类型"><a href="#不同的簇类型" class="headerlink" title="不同的簇类型"></a>不同的簇类型</h3><p>簇类型：明显分离的簇</p><ul><li>簇是对象的集合，<strong>不同组中的任意两点之间的距离</strong>（某种距离度量）都大于<strong>组内任意两点之间的距离</strong>。</li></ul><img src="F:/博客/floder/source/images/image-20220507101847720.png" alt="image-20220507101847720" style="zoom:50%;" /><p>簇类型：基于原型的簇</p><ul><li>簇是对象的集合，其中每个对象到定义<strong>该簇的原型的距离</strong>比到<strong>其他簇的原型</strong>的距离更近（或更加相似）。<ul><li>对于具有连续属性的数据，簇的原型通常是质心，即簇中所有点的<strong>平均值</strong>。当质心没有意义是，原型通常是<strong>中心点</strong>，即簇中最有代表性的点。这种簇倾向于呈球状。</li></ul></li></ul><img src="F:/博客/floder/source/images/image-20220507102014792.png" alt="image-20220507102014792" style="zoom:50%;" /><p>簇类型：基于图的簇</p><ul><li><p>如果数据用图表示，其中节点是对象，而边代表对象之间的联系，则簇可以定义为<strong>连通分支</strong>，即互相连通但不与组外对象连通的对象组。</p></li><li><p>基于图的簇一个重要例子就是<strong>基于临近的簇</strong>，其中两个对象是<strong>相连的</strong>，仅当他们的<strong>距离在指定的范围之内</strong>。也就是说，每个对象到该簇<strong>某个对象的距离</strong>比不同簇中的<strong>任意点</strong>的距离更近。（有可能通过一点一点连接起来）</p></li></ul><img src="F:/博客/floder/source/images/image-20220507102354034.png" alt="image-20220507102354034" style="zoom:50%;" /><p>簇类型：基于密度的簇</p><ul><li><p>簇是对象的<strong>稠密区域</strong>，被低密度的区域环绕。</p></li><li><p>当簇不规则或互相盘绕，并且<strong>有噪声和离群点时</strong>，常常使用基于密度的簇定义。</p></li></ul><img src="F:/博客/floder/source/images/image-20220507102454613.png" alt="image-20220507102454613" style="zoom:50%;" /><p>主要的聚类算法有：</p><ul><li>基于原型的方法：给定K个分组代表k个聚类，然后聚起来，标准是同一组越相似越好，不同组越相异越好</li><li>基于层次的方法：树</li><li>基于密度的方法</li></ul><h2 id="K均值聚类"><a href="#K均值聚类" class="headerlink" title="K均值聚类"></a>K均值聚类</h2><p>基于原型的经典算法，用质心定义原型，质心就是一组点的均值，主要是发现用户指定的k个带你，这k个点必须是<strong>实际的数据点</strong></p><p><img src="F:/博客/floder/source/images/image-20220507103730905.png" alt="image-20220507103730905"></p><pre class="line-numbers language-none"><code class="language-none">选择K个初始点do将每个点分配到最近的质心，形成K个簇重新计算每个簇的质心while 质心不变（所有点都不会再变）<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="F:/博客/floder/source/images/image-20220507104058844.png" alt="image-20220507104058844"></p><p><img src="F:/博客/floder/source/images/image-20220507104555796.png" alt="image-20220507104555796"></p><p>可以利用不同的K值计算方法</p><p><img src="F:/博客/floder/source/images/image-20220507104719538.png" alt="image-20220507104719538"></p><p>基本K均值算法存在的问题</p><ul><li>不同的初始质心会<strong>收敛到不同的结果</strong>，可能只能达到局部最优解。</li><li>随机选取初始质心，<strong>拙劣的初始质心</strong>，可能导致很糟糕的聚类结果。</li></ul><p>解决办法</p><p><img src="F:/博客/floder/source/images/image-20220507110146337.png" alt="image-20220507110146337"></p><p>K++算法：</p><pre class="line-numbers language-none"><code class="language-none">随机选择一个点作为质心for 直到选出k个质心计算每一个点到最近质点的距离d(x)为每一个点分配一个与该店的d(x)^2成比例的概率使用加权概率从剩余点中选择新的质点end<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><p>可能产生空簇</p></li><li><ul><li>如果所有的点在指派步骤都未分配到某个簇，就会得到空簇。</li></ul><p><img src="F:/博客/floder/source/images/image-20220507110320596.png" alt="image-20220507110320596"></p><p>处理办法：</p><ul><li><p>一种方法是选择一个<strong>距离当前任何质心最远的点</strong>。这将消除当前对总平方误差影响最大的点。</p></li><li><p>另一种方法是从具有<strong>最大SSE的簇中选择一个替补的质心</strong>。这将分裂簇并降低聚类的总SSE。</p></li></ul></li><li><p>容易受到离群点的影响</p></li><li><ul><li>使用平方误差时，离群点会过度影响所发现的簇 。在可能的条件下，提前删除离群点</li></ul></li><li><p>不能处理非球形簇、不同尺寸和不同密度的簇。（处理起来很难看）</p><ul><li>一个可能的解决方法：产生多个初始的簇，再将其中部分簇进行合并。</li></ul></li></ul><h3 id="二分K均值"><a href="#二分K均值" class="headerlink" title="二分K均值"></a>二分K均值</h3><ul><li>二分K均值是K均值算法的直接扩展：为了得到K个簇，将所有点的集合分裂层两个簇，从这些簇中<strong>选择一个分裂为两个簇</strong>，如此下去，直到生成K个簇。</li><li>待分裂的簇有许多不同的选择方法，可以在每一步选择最大的簇，选择具有最大SSE的簇，或者使用一个基于大小和SSE的标注进行选择。</li><li>二分K均值是一种层次聚类方法。</li></ul><h3 id="缺点和优点"><a href="#缺点和优点" class="headerlink" title="缺点和优点"></a>缺点和优点</h3><p>简单，能力强，有局限性</p><h2 id="7-4-DBSCAN"><a href="#7-4-DBSCAN" class="headerlink" title="7.4 DBSCAN"></a>7.4 DBSCAN</h2><p>DBSCAN是一种<strong>基于密度</strong>的聚类算法，簇的<strong>个数由算法自动的确定</strong>。<strong>低密度区域中的点被视为噪声而忽略</strong>，因而DBSCAN不产生完全聚类。</p><ul><li>密度：数据集中<strong>特定点的密度</strong>通过对该点的Eps<strong>半径之内的点计数</strong>（包括点本身）来估计。</li><li>核心点：这些点在<strong>基于密度的簇内部</strong>。一个点是核心点，如果该点的<strong>给定邻域内的点的个数超过给定的阈值MinPts</strong>，其中MinPts也是一个用户指定的参数。</li><li>边界点：<strong>边界点不是核心点</strong>，但他落<strong>在某个核心点的邻域内</strong>。边界点可能落在多个核心点的邻域内。</li><li>噪声点：噪声点是既<strong>非核心点也非边界点</strong>的任何点。</li></ul><p><img src="F:/博客/floder/source/images/image-20220507112651985.png" alt="image-20220507112651985"></p><img src="F:/博客/floder/source/images/image-20220507113439598.png" alt="image-20220507113439598" style="zoom:80%;" /><pre class="line-numbers language-none"><code class="language-none">DBSCAN算法（给定MinPts和Eps）将所有点标记为核心点、边界点和噪声点删除噪声点为距离在Eps之内的所有核心点之间赋予一条边每组连通的核心点形成一个簇将每个边界点指派到一个与之关联的核心点簇中（就是和这个簇的距离&lt;MinPts）<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="主要的问题：确定参数"><a href="#主要的问题：确定参数" class="headerlink" title="主要的问题：确定参数"></a>主要的问题：确定参数</h3><p>点的第k个最近邻的距离称为k-距离</p><p>基本思想</p><ul><li>簇中的诸点的k-距离一般很小</li><li>噪声点的k-距离一般很大.</li><li>计算每个点的k-距离, 并<strong>由小到大排序</strong>, 绘制k-距离曲线<ul><li>预料该曲线某处, k-距离的**急剧变化 **</li><li>该处的k-距离对应于Eps</li><li>取MinPts为k</li></ul></li></ul><img src="F:/博客/floder/source/images/image-20220507114028595.png" alt="image-20220507114028595" style="zoom:67%;" /><p>这里一般取k为4，然后根据这个选择eps，min&#x3D;4就好</p><p>优点</p><ul><li>抗噪声</li><li>可以处理任意形状的簇</li></ul><p>缺点 </p><ul><li><p>不能处理<strong>密度变化太大</strong>的情形 </p></li><li><p>高维数据</p></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> 数据挖掘学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数据挖掘第三章复习</title>
      <link href="/2022/05/07/%E6%95%B0%E6%8D%AE%E6%8C%96%E6%8E%98/%E7%AC%AC%E4%B8%89%E7%AB%A0/"/>
      <url>/2022/05/07/%E6%95%B0%E6%8D%AE%E6%8C%96%E6%8E%98/%E7%AC%AC%E4%B8%89%E7%AB%A0/</url>
      
        <content type="html"><![CDATA[<h2 id="分类基本概念"><a href="#分类基本概念" class="headerlink" title="分类基本概念"></a>分类基本概念</h2><p>分类是利用一个<strong>分类模型</strong>，吧样本X（属性集）映射到定类别中的一个y</p><p>$$y&#x3D;f(x)$$</p><h2 id="3-2一般分类框架"><a href="#3-2一般分类框架" class="headerlink" title="3.2一般分类框架"></a>3.2一般分类框架</h2><ul><li>训练集：为建立模型而使用得到实例（样本集）</li><li>测试集：用于评估分类模型的准确率</li></ul><p>分类过程</p><ol><li>训练，建立一个模型，把数据带进去</li><li>测试，使用模型，对将来的或未知的对象进行分类<ul><li>评估模型的准确率。测试集独立于训练集</li></ul></li></ol><p>准确率：</p><p>$$准确率&#x3D;\frac{正确预测}{总预测量}$$</p><p>错误率类似</p><h2 id="3-3决策树分类器"><a href="#3-3决策树分类器" class="headerlink" title="3.3决策树分类器"></a>3.3决策树分类器</h2><h3 id="3-3-1-Hunt算法"><a href="#3-3-1-Hunt算法" class="headerlink" title="3.3.1 Hunt算法"></a>3.3.1 Hunt算法</h3><p>设 Dt 是与结点 t相关联的训练记录集（采用<strong>贪心</strong>策略，就是每一步都选最佳划分）<br>算法步骤:</p><ul><li>如果Dt 中所有记录<strong>都属于同一个类</strong> yt, 则t是叶结点，用yt标记</li><li>如果 Dt 中包含属于<strong>多个类</strong>的记录，则选择<strong>一个属性测试条件</strong>，将记录划分成较小的子集。对于测试条件的每个输出，创建一个子结点，并根据测试结果将Dt中的记录分布到子结点中。然后，对于每个子结点，<strong>递归</strong>地调用该算法</li></ul><p>决策树归纳的设计问题</p><ul><li>如何<strong>分裂</strong>训练记录<ul><li>怎样为不同类型的属性指定测试条件?</li><li>怎样评估每种测试条件?</li></ul></li><li>如何<strong>停止分裂</strong>过程</li></ul><h3 id="3-3-2-怎样为不同类型的属性指定测试条件"><a href="#3-3-2-怎样为不同类型的属性指定测试条件" class="headerlink" title="3.3.2 怎样为不同类型的属性指定测试条件?"></a>3.3.2 怎样为不同类型的属性指定测试条件?</h3><ul><li>依赖于属性的类型<br>标称：二路，两个，但要划分很多次；多路，取决于不同属性值的个数<br>序数：二路，保持有序性；多路，不同属性个数，<strong>需要保持有序性</strong><br>连续：二路，考虑所有划分点，选一个最佳$A&lt;v或A\leq v$；多路$v_i\leq A &lt;v_{i+1}$</li><li>依赖于划分的路数<br>2路划分<br>多路划分</li></ul><h3 id="3-3-3-怎样选择最佳划分？"><a href="#3-3-3-怎样选择最佳划分？" class="headerlink" title="3.3.3 怎样选择最佳划分？"></a>3.3.3 怎样选择最佳划分？</h3><p>选择最佳划分的度量通常是根据划分后子结点不纯性的程度。<strong>不纯性</strong>的程度越低，类分布就越倾斜</p><p><img src="F:/博客/floder/source/images/image-20220506094759576.png" alt="image-20220506094759576"></p><p>一般选择的是<strong>基尼指数</strong>，方便计算</p><p><img src="F:/博客/floder/source/images/image-20220506094856905.png" alt="image-20220506094856905"></p><h4 id="子节点的集合不纯度"><a href="#子节点的集合不纯度" class="headerlink" title="子节点的集合不纯度"></a>子节点的集合不纯度</h4><p><img src="F:/博客/floder/source/images/image-20220506095237943.png" alt="image-20220506095237943"></p><p>一个例子：</p><p><img src="F:/博客/floder/source/images/image-20220506095350193.png" alt="image-20220506095350193"></p><h4 id="标称和有序属性"><a href="#标称和有序属性" class="headerlink" title="标称和有序属性"></a>标称和有序属性</h4><p>和例子的计算方式差不多</p><h4 id="连续属性"><a href="#连续属性" class="headerlink" title="连续属性"></a>连续属性</h4><p><img src="F:/博客/floder/source/images/image-20220506095536044.png" alt="image-20220506095536044"></p><p>就相当于是排序后，不断尝试中间的点，计算基尼</p><h4 id="信息熵"><a href="#信息熵" class="headerlink" title="信息熵"></a>信息熵</h4><p><img src="F:/博客/floder/source/images/image-20220506100255037.png" alt="image-20220506100255037"></p><h4 id="纯度增益-x2F-信息增益"><a href="#纯度增益-x2F-信息增益" class="headerlink" title="纯度增益&#x2F;信息增益"></a>纯度增益&#x2F;信息增益</h4><p><img src="F:/博客/floder/source/images/image-20220506100514768.png" alt="image-20220506100514768"></p><p>其实父节点都一样，主要还是看子节点的不纯度</p><p>不纯性度量的缺陷</p><ul><li>不纯性度量趋向于有利于具有大量不同值的属性<br>如：利用ID产生更纯的划分，但它却毫无用处</li></ul><p><img src="F:/博客/floder/source/images/image-20220506100827320.png" alt="image-20220506100827320"></p><p>Entropy(p)是父节点p的熵，I是不纯度度量的其中一种</p><h4 id="如何停止分裂过程"><a href="#如何停止分裂过程" class="headerlink" title="如何停止分裂过程"></a>如何停止分裂过程</h4><ul><li>当一个节点所有样本属于同一类时，停止分裂</li><li>当一个节点所有样本都有相同的属性时，停止分裂</li><li>提前终止树的生长</li></ul><h3 id="决策树的特点"><a href="#决策树的特点" class="headerlink" title="决策树的特点"></a>决策树的特点</h3><p>特点:</p><ul><li>决策树是一种构建分类模型的非参数方法</li><li><strong>不需要昂贵</strong>的的计算代价</li><li>决策树相对容易解释</li><li>决策树是学习<strong>离散值函数</strong>的<strong>典型代表</strong></li><li>决策数对于<strong>噪声的干扰</strong>具有相当好的鲁棒性</li><li>冗余属性不会对决策树的准确率造成不利影响</li><li>数据碎片问题。随着数的生长，可能导致叶结点记录数太少，对于叶结点代表的类，不能做出</li><li>具有统计意义的判决</li><li>子树可能在决策树中重复多次。使决策树过于复杂</li></ul><h2 id="模型评估"><a href="#模型评估" class="headerlink" title="模型评估"></a>模型评估</h2><h3 id="过拟合与欠拟合"><a href="#过拟合与欠拟合" class="headerlink" title="过拟合与欠拟合"></a>过拟合与欠拟合</h3><ul><li>欠拟合：模型<strong>不能很好地适应</strong>训练集</li><li>过拟合：模型学习了训练数据中的<strong>细节和噪音</strong>，很好的拟合了训练集，但在<strong>新的数据</strong>上表现很差</li></ul><p>分类模型的误差大致分为三种：</p><ul><li>训练误差：是在训练集上的误差</li><li>测试误差：是在测试集上的误差</li><li>泛化误差：是模型在未知记录上的期望误差</li></ul><p>一个<strong>好的</strong>分类模型必须具有<strong>低训练误差</strong>和<strong>低泛化误差</strong>。</p><p>过拟合产生的原因</p><ul><li>有限的训练规模</li><li>过高的模型复杂度</li></ul><p>所以说<strong>训练集不能太小，模型不能太复杂</strong></p><p>多重比较，就是多跑几次取平均值</p><p>训练错误率不能可靠的作为模型选择的唯一标准</p><ul><li>验证集</li><li>模型复杂度</li></ul><p>使用验证集和模型复杂度来帮助评估模型</p><p>将训练数据分为两个部分：</p><ul><li>训练集：用于构建模型</li><li>验证集：用于估计泛化误差（验证集不同于测试集）<ul><li>缺点：用于训练的数据变少</li></ul></li></ul><p><strong>奥卡姆剃刀</strong>(Occam’s Razor):给定两个具有相同泛化误差的模型，较简单的模型优于复杂的模型</p><h4 id="悲观误差评估"><a href="#悲观误差评估" class="headerlink" title="悲观误差评估"></a>悲观误差评估</h4><p><img src="F:/博客/floder/source/images/image-20220506102205237.png" alt="image-20220506102205237"></p><p><img src="F:/博客/floder/source/images/image-20220506102336139.png" alt="image-20220506102336139"></p><h4 id="最小描述长度-MDL"><a href="#最小描述长度-MDL" class="headerlink" title="最小描述长度 (MDL)"></a>最小描述长度 (MDL)</h4><p>预剪枝（Pre-pruning，早停规则）</p><ul><li><p>树生长算法在产生完全拟合整个训练数据集的之前就停止决策树的生长</p><ul><li>树深度、叶子结点数限制</li><li>当结点的记录数少于一定阈值，则停止生长</li><li>当不纯性度量的增益低于某个阈值时，则停止生长</li></ul></li><li><ul><li>缺点：很难为提前终止选取正确的阈值:<br>阈值太高，导致欠拟合<br>阈值太低，导致不能充分解决过拟合的问题。</li></ul></li></ul><p>后剪枝（Post-pruning）</p><ul><li>初始决策树按照最大规模生长，然后进行剪枝的步骤，按照自底向上的方式修剪完全增长的决策树。</li><li>剪枝有两种做法:<ul><li>子树提升：用子树中最常用的分支代替子树</li><li>子树替换：用新的叶结点替换子树，该叶结点的类标号由子树下记录中的多数类确定</li></ul></li></ul><p>与预剪枝相比，后剪枝技术倾向于产生更好的结果。<br>因为不像先剪枝，后剪枝是根据完全增长的决策树作出的剪枝决策，先剪枝则可能过早终止决策树的生长。</p><h3 id="模型评估-1"><a href="#模型评估-1" class="headerlink" title="模型评估"></a>模型评估</h3><p>目标：评估模型的泛化性能</p><ul><li>保持方法（Holdout ）</li><li>将数据集划分为两个集合：训练集和测试集<ul><li>训练集（train set）用于构建模型</li><li>测试集（test set）用于评估模型的泛化误差</li></ul></li><li>交叉验证（Cross validation）</li></ul><p><img src="F:/博客/floder/source/images/image-20220506104210777.png" alt="image-20220506104210777"></p><p>主要是留一法和k折交叉验证</p><h4 id="超参数的概念"><a href="#超参数的概念" class="headerlink" title="超参数的概念"></a>超参数的概念</h4><p>超参数：<strong>学习模型进行学习前需要确定的参数</strong></p><ul><li>如不纯性度量方法，预剪枝的最大叶子结点数、最大树深度、不纯性度量的增益阈值</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> 数据挖掘学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数据挖掘第二章复习</title>
      <link href="/2022/05/07/%E6%95%B0%E6%8D%AE%E6%8C%96%E6%8E%98/%E7%AC%AC%E4%BA%8C%E7%AB%A0/"/>
      <url>/2022/05/07/%E6%95%B0%E6%8D%AE%E6%8C%96%E6%8E%98/%E7%AC%AC%E4%BA%8C%E7%AB%A0/</url>
      
        <content type="html"><![CDATA[<ul><li><strong>数据集</strong>是<strong>数据对象</strong>的<strong>集合</strong></li><li><strong>属性</strong>是对象对的性质</li><li><strong>测量标度</strong>是将数值或符号与对象的属性相关联的<strong>规则</strong></li></ul><h2 id="属性的不同类型"><a href="#属性的不同类型" class="headerlink" title="属性的不同类型"></a>属性的不同类型</h2><p>取决于下列4种数值性质：<br>属性值（数值）的性质<br>1、Distinctness（相异性）:  &#x3D;  $\neq$<br>2、Order（序）:&lt;  &gt;  <br>3、Addition（加法）:  +  - <br>4、Multiplication （乘法） : * &#x2F;<br>属性的类型不同，允许的操作不同</p><p><img src="/../../images/image-20220506091611620.png" alt="image-20220506091611620"></p><p><img src="/../../images/image-20220506091533663.png" alt="image-20220506091533663"></p><ul><li><p>离散属性(Discrete Attribute)<br>有限或无限可数 (countable infinite )个值<br>例: 邮政编码, 计数, 文档集的词<br>常表示为<strong>整数变量</strong>.<br>注意: 二元属性(binary attributes)是离散属性的特例</p></li><li><p>连续属性(Continuous Attribute)<br>属性值为实数<br>例: 温度, 高度, 重量.<br>实践中, 实数只能用<strong>有限位数字的数度量和表示</strong>.<br>连续属性一般用<strong>浮点变量</strong>表示.  </p></li><li><p>非对称属性</p><p>只有出现非0值才是重要的</p><p>数据集中，非对称的属性值大多是0，只有少部分才会有非0值</p></li></ul><h2 id="数据集的类型"><a href="#数据集的类型" class="headerlink" title="数据集的类型"></a>数据集的类型</h2><ul><li>维度(Dimensionality)<br>数据集的维度是数据集中的对象具有的**属性数目 **<br>维度灾难（Curse of Dimensionality）<br>维度归约（dimensionality reduction） </li><li>稀疏性(Sparsity)<br>如具有<strong>非对称特征</strong>的数据集，一个对象的大部分属性上的值都为0 （非对称关心非零值）<br>只存储和处理非零值</li><li>分辨率(Resolution)<br> 数据的模式依赖于分辨率——<strong>度量尺度</strong>(scale)<br>在数米的分辨率下，地球表面看上去很不平坦，但在数十公里的分辨率下却相对平坦<br>小时标度下的气压变化反映风暴或其他天气系统的移动；在月标度下，这些现象就检测不到</li></ul><h3 id="数据集类型（三大类）"><a href="#数据集类型（三大类）" class="headerlink" title="数据集类型（三大类）"></a>数据集类型（三大类）</h3><ul><li>记录数据（<strong>用矩阵存储的数据</strong>）<br>数据矩阵（Data Matrix）<br>文本数据（Document Data ）：每篇文档可以表示成一个文档-词矩阵<br>事务数据（Transaction Data）</li><li>基于图(Graph)的数据（<strong>用图表示的数据</strong>）<br>World Wide Web<br>分子结构（Molecular Structures）</li><li>有序(Ordered)数据（<strong>就是按时间顺序等排序好的数据</strong>）<br>空间数据（Spatial Data）<br>时间数据（Temporal Data）<br>序列数据（Sequential Data ）</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> 数据挖掘学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数据挖掘第四章复习2</title>
      <link href="/2022/05/07/%E6%95%B0%E6%8D%AE%E6%8C%96%E6%8E%98/%E7%AC%AC%E5%9B%9B%E7%AB%A02/"/>
      <url>/2022/05/07/%E6%95%B0%E6%8D%AE%E6%8C%96%E6%8E%98/%E7%AC%AC%E5%9B%9B%E7%AB%A02/</url>
      
        <content type="html"><![CDATA[<h1 id="4-10-组合方法"><a href="#4-10-组合方法" class="headerlink" title="4.10 组合方法"></a>4.10 组合方法</h1><h3 id="一般的思想"><a href="#一般的思想" class="headerlink" title="一般的思想"></a>一般的思想</h3><ul><li><p>聚集<strong>多个分类器</strong>的预测来提高分类准确率</p></li><li><p>称为组合（ensemble）或分类器组合（classifier combination）方法</p></li></ul><p>假定有 25 基分类器（<strong>可以显著降低错误率</strong>）</p><ul><li>每个基分类器的误差均为 $\varepsilon$&#x3D; 0.35</li><li>假定基分类器是独立的</li><li>组合分类器错误预测的概率为:</li></ul><img src="F:/博客/floder/source/images/image-20220506180300722.png" alt="image-20220506180300722" style="zoom:50%;" /><p>泛化误差E来自哪里？<br>E&#x3D;bias variance +noise</p><ul><li>偏差(bias):不同训练集下模型输出的的<strong>期望</strong>y‘与<strong>真实</strong>的y<strong>的差别</strong>。度量了学习算法的期望预测与真实结果的偏离程度，即刻画了学习算法本身的拟合能力。</li><li>方差(variance):不同训练集下模型输出的的方差。度量了同样大小的训练集的变动所导致的学习性能的变<br>化，即刻画了<strong>数据扰动</strong>所造成的影响。</li><li>噪声(noise):数据集的y与真实的y的差别。为任何学习算法能达到的<strong>期望泛化误差的下界</strong>。</li></ul><img src="F:/博客/floder/source/images/image-20220506180744698.png" alt="image-20220506180744698" style="zoom:50%;" /><img src="F:/博客/floder/source/images/image-20220506180759803.png" alt="image-20220506180759803" style="zoom:50%;" /><p>复杂度低，拟合能力不足，偏差为主</p><p>复杂度太高，拟合能力过强，收到数据变化的扰动影响较大，因此方差为主</p><p>组合方法就是把多种结果结合起来，主要方法有袋装法和提升法</p><h3 id="袋装法"><a href="#袋装法" class="headerlink" title="袋装法"></a>袋装法</h3><p>Bagging又称自助聚集(bootstrap aggregating)</p><ul><li><p>训练阶段<br>使用自助抽样产生多个训练数据集（k个）</p><ul><li>有放回、等概率、等容量抽样</li></ul><p>在每个训练数据集上使用相同的分类算法建立基分类器（由于是放回，每次大概取0.632左右的数据出来）</p></li><li><p>分类：x是待分类实例<br>每个基分类器独立地对x产生类预测，算作一票（每个分类器单独分类，然后记录这个分类器对它的分类投一票，最后k个跑完后，去最高票数的分类为最终票数）<br>统计得票，并将x指派到得票最高的类</p></li></ul><h3 id="提升法（boosting）"><a href="#提升法（boosting）" class="headerlink" title="提升法（boosting）"></a>提升法（boosting）</h3><p>基本思想</p><ul><li><p>训练</p><ul><li><p>赋予每个样本一个权值（权值反映了样本分类的困难程度）</p></li><li><p>迭代地学习k个分类器，学习得到分类器$M_i$后，更新每个样本的权值（正确就变小，错误就增大），然后分类器$M_{i+1}$就更多地关注$M_i$分类错误的样本</p></li></ul></li><li><p>分类</p><ul><li>每个基分类器独立地对x产生预测</li><li>通过分类器的<strong>加权投票</strong>对x产生最终的预测，投票的权重是其准确率的函数</li></ul></li></ul><p>算法过程</p><ol><li>初始化w数组，每个量都是1&#x2F;N</li><li>for i&#x3D;1 to k</li><li>根据w，加权抽样，建立分类器$C_i$</li><li>计算$C_i$的误差 $\varepsilon_i$</li><li>如果 $\varepsilon_i&gt;0.5$（就是说错了超过一半了）</li><li>计算C_i的重要性$\alpha_i$</li><li>调整w的权重</li><li>end for</li><li>结合不同分类器的分类结果及其重要性进行分类</li></ol><p>其中</p><img src="F:/博客/floder/source/images/image-20220506184837662.png" alt="image-20220506184837662" style="zoom: 67%;" /><p>注：argmax是一个集合函数，就是往不同类集合投票（加权相加），然后取最大和的类；另外由于过多关注难以预测的样本，容易导致过拟合</p><h3 id="随机森林"><a href="#随机森林" class="headerlink" title="随机森林"></a>随机森林</h3><p>类似于决策树+袋装法</p><ul><li>使用袋装法得出的样本来训练每个决策树</li></ul><p>与袋装法的区别在于</p><ul><li>在树的每个内部节点处，从<strong>一组随机选择的属性</strong>中选择最佳划分标准，直至每片叶子都是纯的</li><li>不对决策树进行剪枝</li></ul><h1 id="4-11-不平衡类问题"><a href="#4-11-不平衡类问题" class="headerlink" title="4.11 不平衡类问题"></a>4.11 不平衡类问题</h1><p>以前的评价标准，准确率和错误率</p><p>$$准确率&#x3D;正确预测&#x2F;样本总数，错误率&#x3D;错误预测&#x2F;样本总数$$</p><p>但是有时候由于数据的不平衡问题(0多1少)，导致准确率没用</p><h3 id="4-11-1"><a href="#4-11-1" class="headerlink" title="4.11.1"></a>4.11.1</h3><p>对不平衡数据集的采样</p><ul><li>欠采样：降低多数类的采集频率</li><li>过采样：增加少数类的采集频率</li></ul><p>对于预测结果的命名如下（<strong>混淆矩阵</strong>）</p><img src="F:/博客/floder/source/images/image-20220506190643896.png" alt="image-20220506190643896" style="zoom:75%;" /><p>真正率：分类器正确预测在正测试实例的比例</p><p>$$TPR&#x3D;\frac{TP}{TP+FN}$$</p><p>其他也差不多</p><p>精度：预测为正类的总数中被正确预测为正类的比例：<strong>预测为真</strong>的里面，真正真的有多少</p><p>$$p&#x3D;\frac{TP}{TP+FP}$$</p><p>F1值：就是这两个率合在一起</p><p>$$F1&#x3D;\frac{2 \times precision \times recall}{precision +recall}$$</p><p>精确率：<strong>预测为真</strong>的里面，真正真的有多少</p><p>$$precision_c&#x3D;\frac{TP_c}{TP_c+FP_c}$$</p><p>召回率：<strong>真正为真</strong>的里面，有多少是可以预测出来的</p><p>$$precision_c&#x3D;\frac{TP_c}{TP_c+FN_c}$$</p><p>F1值：就是这两个率合在一起</p><p>$$F1_c&#x3D;\frac{2 \times precision_c \times recall_c}{precision_c +recall_c}$$</p><p>(下面有个c就是对于c这一个值的单独预测)</p><img src="F:/博客/floder/source/images/image-20220506191302566.png" alt="image-20220506191302566" style="zoom:67%;" />]]></content>
      
      
      
        <tags>
            
            <tag> 数据挖掘学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数据挖掘第四章复习1</title>
      <link href="/2022/05/07/%E6%95%B0%E6%8D%AE%E6%8C%96%E6%8E%98/%E7%AC%AC%E5%9B%9B%E7%AB%A01/"/>
      <url>/2022/05/07/%E6%95%B0%E6%8D%AE%E6%8C%96%E6%8E%98/%E7%AC%AC%E5%9B%9B%E7%AB%A01/</url>
      
        <content type="html"><![CDATA[<h1 id="4-4-朴素贝叶斯"><a href="#4-4-朴素贝叶斯" class="headerlink" title="4.4 朴素贝叶斯"></a>4.4 朴素贝叶斯</h1><p>原理</p><p><img src="F:/博客/floder/source/images/image-20220506104518780.png" alt="image-20220506104518780"></p><p>就是算一下每个的后验分布，找最大的那个</p><p>估计$P(y_j)$</p><ul><li>$P(y_j)&#x3D;n_j&#x2F;n$</li><li>其中$n_j$是类$y_j$中的<strong>训练样本数</strong>，n是<strong>训练总数</strong></li></ul><p><img src="F:/博客/floder/source/images/image-20220506104755149.png" alt="image-20220506104755149"></p><p>注意：<strong>有一个默认条件就是每个样本相互独立</strong></p><p><img src="F:/博客/floder/source/images/image-20220506104951014.png" alt="image-20220506104951014"></p><p>注意：离散和连续属性的处理不一样，具体看下面的例子：</p><p><img src="F:/博客/floder/source/images/image-20220506105044218.png" alt="image-20220506105044218"></p><p><img src="F:/博客/floder/source/images/image-20220506105102146.png" alt="image-20220506105102146"></p><p>就是每个都看表算一下概率，连续的根据不同类型单独算均值和方差</p><h3 id="贝叶斯分类器的特点"><a href="#贝叶斯分类器的特点" class="headerlink" title="贝叶斯分类器的特点"></a>贝叶斯分类器的特点</h3><ul><li>对<strong>孤立的噪声点</strong>的<strong>鲁棒性</strong><br>个别点对概率估计的影响很小</li><li>容易<strong>处理缺失值</strong><br>在估计概率时忽略缺失值的训练实例</li><li>对<strong>不相关属性的</strong> <strong>鲁棒性</strong><br>各类在不相关属性上具有类似分布</li><li>类条件<strong>独立假设</strong>可能不成立<br>使用其他技术，如贝叶斯网络（ Bayesian Belief Networks，BBN）</li></ul><h1 id="4-9-支持向量机"><a href="#4-9-支持向量机" class="headerlink" title="4.9 支持向量机"></a>4.9 支持向量机</h1><p>优点</p><ul><li>对复杂的非线性边界的建模能力</li><li>与其它模型相比, 它们不太容易过分拟合</li><li>支持向量机还提供了学习模型的紧凑表示 </li><li>广泛的使用范围</li></ul><p>原理</p><p><img src="F:/博客/floder/source/images/image-20220506112142114.png" alt="image-20220506112142114"></p><p>就是找不同的w和b找到它的最大化边缘d</p><p><img src="F:/博客/floder/source/images/image-20220506112227708.png" alt="image-20220506112227708"></p><p>画两条线，决定w后即可得d</p><p><img src="F:/博客/floder/source/images/image-20220506112806908.png" alt="image-20220506112806908"></p><p><img src="F:/博客/floder/source/images/image-20220506112839897.png" alt="image-20220506112839897"></p><p>最终可以转化为决策模型</p><p><img src="F:/博客/floder/source/images/image-20220506113116374.png" alt="image-20220506113116374"></p><p>然后代入拉格朗日乘子</p><p><img src="F:/博客/floder/source/images/image-20220506113728077.png" alt="image-20220506113728077"></p><p>后面就根据那两个边界来决定$\lambda_i$是多少，不是边界的都是0</p><p><img src="F:/博客/floder/source/images/image-20220506114004396.png" alt="image-20220506114004396"></p><p>然后就可以进行计算得出w和b了</p><p><img src="F:/博客/floder/source/images/image-20220506114036266.png" alt="image-20220506114036266"></p><p>给出一个例子：</p><p><img src="F:/博客/floder/source/images/image-20220506114532070.png" alt="image-20220506114532070"></p><p>其中$w&#x3D;(w_1,w_2)$和b代表决策边界的参数，因为b在两个中间，所以取平均就好了</p><h4 id="遇到了不可分的情况"><a href="#遇到了不可分的情况" class="headerlink" title="遇到了不可分的情况"></a>遇到了不可分的情况</h4><p>软边缘</p><ul><li>允许一定的误差</li></ul><p>引入松弛变量$\xi_i$,C是超参数，作为误差的惩罚函数</p><p><img src="F:/博客/floder/source/images/image-20220506152940392.png" alt="image-20220506152940392"></p><p>然后利用相同的方法算就行了</p><h4 id="非线性SVM"><a href="#非线性SVM" class="headerlink" title="非线性SVM"></a>非线性SVM</h4><p><img src="F:/博客/floder/source/images/image-20220506160006556.png" alt="image-20220506160006556"></p><p>使其变为线性</p><p><img src="F:/博客/floder/source/images/image-20220506160020477.png" alt="image-20220506160020477"></p><p><img src="F:/博客/floder/source/images/image-20220506163937393.png" alt="image-20220506163937393"></p><h4 id="SVM的特点"><a href="#SVM的特点" class="headerlink" title="SVM的特点"></a>SVM的特点</h4><ul><li><p>SVM学习问题可以表示为<strong>凸优化</strong>问题，因此可以利用已知的有效算法发现目标函数的全局最小值 </p></li><li><p>SVM通过<strong>最大化决策边界</strong>的边缘来控制模型的能力<br>需要提供其他参数，如使用的核函数类型、为了引入松弛变量所需的代价函数C等</p></li><li><p>分类属性处理<br>每个分类属性值引入一个哑变量, 转化为二元变量  </p></li><li><p>可以推广到多类问题</p></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> 数据挖掘学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>图片的url获取办法</title>
      <link href="/2022/05/01/%E5%9B%BE%E7%89%87url/"/>
      <url>/2022/05/01/%E5%9B%BE%E7%89%87url/</url>
      
        <content type="html"><![CDATA[<p>从网上获得了好看的图片，怎么获取url呢</p><p>参考网站<a href="https://www.cnblogs.com/p1ng/p/12880452.html">图片url地址在线生成方法</a></p><h3 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h3><p><img src="/../images/l2LuzVk3PFqv1K8.jpg" alt="image.jpg"></p><p>获得的url地址</p><pre class="line-numbers language-html" data-language="html"><code class="language-html">https://s2.loli.net/2022/05/01/l2LuzVk3PFqv1K8.jpg<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>首先注册网站</p><p>[SMMS官网](<a href="https://sm.ms/">Image Upload - SM.MS - Simple Free Image Hosting</a>)</p><p>注册，登陆上传图片即可</p>]]></content>
      
      
      
        <tags>
            
            <tag> Hexo教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>图片插入</title>
      <link href="/2022/04/28/%E6%96%87%E7%AB%A0/"/>
      <url>/2022/04/28/%E6%96%87%E7%AB%A0/</url>
      
        <content type="html"><![CDATA[<h3 id="图片插入"><a href="#图片插入" class="headerlink" title="图片插入"></a>图片插入</h3><p>主要 参考来自于[知乎大佬](<a href="https://zhuanlan.zhihu.com/p/265077468">hexo博客如何插入图片 - 知乎 (zhihu.com)</a>)</p><ul><li>下载插件</li></ul><pre class="line-numbers language-git" data-language="git"><code class="language-git">npm install hexo-renderer-marked<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>config.yaml设置更改（找到原来就有的post_asset_folder，进行更改）</li></ul><pre class="line-numbers language-none"><code class="language-none">post_asset_folder: truemarked:  prependRoot: true  postAsset: true<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><ul><li><p>主要是要利用Typora的特殊功能</p><p><img src="https://pic4.zhimg.com/80/v2-52220b2dba6901ee2181b72951d25a7b_720w.jpg" alt="Typora设置成这样"></p></li><li><p>在_post文件夹下建立一个images文件夹，用于存放所有图片，注意不同图片的命名要不一样</p></li><li><p>最后在修改的时候，修改图片路径即可</p></li></ul><p><img src="/../images/image-20220428204805038.png" alt="图片修改测试"></p>]]></content>
      
      
      
        <tags>
            
            <tag> Hexo教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>图片插入</title>
      <link href="/2022/04/28/%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE2/"/>
      <url>/2022/04/28/%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE2/</url>
      
        <content type="html"><![CDATA[<p><img src="/../images/OIP-C.Ee3ZFlas9htc_Q-3PEKoJwHaHaw=159&h=180&c=7&r=0&o=5&pid=1-16513059380132.7" alt="开心emoji 的图像结果"></p>]]></content>
      
      
      
        <tags>
            
            <tag> Hexo教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>代码演示</title>
      <link href="/2022/04/26/%E4%BB%A3%E7%A0%81%E5%B1%95%E7%A4%BA/%E4%BB%A3%E7%A0%81%E6%BC%94%E7%A4%BA/"/>
      <url>/2022/04/26/%E4%BB%A3%E7%A0%81%E5%B1%95%E7%A4%BA/%E4%BB%A3%E7%A0%81%E6%BC%94%E7%A4%BA/</url>
      
        <content type="html"><![CDATA[<pre class="line-numbers language-C++" data-language="C++"><code class="language-C++">int a &#x3D; 1;for(int i&#x3D;1;i&lt;&#x3D;a;i++) cin&gt;&gt;a;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>简单试一下</title>
      <link href="/2022/04/25/%E7%AE%80%E5%8D%95%E8%AF%95%E4%B8%80%E4%B8%8B/"/>
      <url>/2022/04/25/%E7%AE%80%E5%8D%95%E8%AF%95%E4%B8%80%E4%B8%8B/</url>
      
        <content type="html"><![CDATA[<h1 id="简单试一下"><a href="#简单试一下" class="headerlink" title="简单试一下"></a>简单试一下</h1><h2 id="我是个大嘴巴子"><a href="#我是个大嘴巴子" class="headerlink" title="我是个大嘴巴子"></a>我是个大嘴巴子</h2><p>哈哈哈</p><p>哈哈哈</p><p>哈哈哈</p><p>哈哈哈</p><p>啊哈哈</p><p>&lt;| – more–&gt;</p><p>aaa</p><p> a a</p><p>a</p><p> a</p><p>a </p><p>a</p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 导航 </tag>
            
            <tag> 分享 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2022/04/24/hello-world/"/>
      <url>/2022/04/24/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo server<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo generate<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo deploy<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2020/12/07/%E5%A4%A7%E5%88%9B/yolov5%E5%AD%A6%E4%B9%A0/YOLOv5%EF%BC%88%E7%99%BD%E5%8B%87%EF%BC%89%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90%E8%AF%BE%E4%BB%B6/YOLOv5%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90%E8%AF%BE%E4%BB%B6/yolov5%E6%BA%90%E7%A0%81%E6%B3%A8%E9%87%8A%E7%89%88/yolov5-src/README/"/>
      <url>/2020/12/07/%E5%A4%A7%E5%88%9B/yolov5%E5%AD%A6%E4%B9%A0/YOLOv5%EF%BC%88%E7%99%BD%E5%8B%87%EF%BC%89%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90%E8%AF%BE%E4%BB%B6/YOLOv5%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90%E8%AF%BE%E4%BB%B6/yolov5%E6%BA%90%E7%A0%81%E6%B3%A8%E9%87%8A%E7%89%88/yolov5-src/README/</url>
      
        <content type="html"><![CDATA[<a href="https://apps.apple.com/app/id1452689527" target="_blank"><img src="https://user-images.githubusercontent.com/26833433/82944393-f7644d80-9f4f-11ea-8b87-1a5b04f555f1.jpg" width="1000"></a>&nbsp<p><img src="https://github.com/ultralytics/yolov5/workflows/CI%20CPU%20testing/badge.svg" alt="CI CPU testing"></p><p>This repository represents Ultralytics open-source research into future object detection methods, and incorporates our lessons learned and best practices evolved over training thousands of models on custom client datasets with our previous YOLO repository <a href="https://github.com/ultralytics/yolov3">https://github.com/ultralytics/yolov3</a>. <strong>All code and models are under active development, and are subject to modification or deletion without notice.</strong> Use at your own risk.</p><p><img src="https://user-images.githubusercontent.com/26833433/90187293-6773ba00-dd6e-11ea-8f90-cd94afc0427f.png" width="1000">** GPU Speed measures end-to-end time per image averaged over 5000 COCO val2017 images using a V100 GPU with batch size 32, and includes image preprocessing, PyTorch FP16 inference, postprocessing and NMS. EfficientDet data from <a href="https://github.com/google/automl">google/automl</a> at batch size 8.</p><ul><li><strong>August 13, 2020</strong>: <a href="https://github.com/ultralytics/yolov5/releases/tag/v3.0">v3.0 release</a>: nn.Hardswish() activations, data autodownload, native AMP.</li><li><strong>July 23, 2020</strong>: <a href="https://github.com/ultralytics/yolov5/releases/tag/v2.0">v2.0 release</a>: improved model definition, training and mAP.</li><li><strong>June 22, 2020</strong>: <a href="https://arxiv.org/abs/1803.01534">PANet</a> updates: new heads, reduced parameters, improved speed and mAP <a href="https://github.com/ultralytics/yolov5/commit/364fcfd7dba53f46edd4f04c037a039c0a287972">364fcfd</a>.</li><li><strong>June 19, 2020</strong>: <a href="https://pytorch.org/docs/stable/nn.html#torch.nn.Module.half">FP16</a> as new default for smaller checkpoints and faster inference <a href="https://github.com/ultralytics/yolov5/commit/d4c6674c98e19df4c40e33a777610a18d1961145">d4c6674</a>.</li><li><strong>June 9, 2020</strong>: <a href="https://github.com/WongKinYiu/CrossStagePartialNetworks">CSP</a> updates: improved speed, size, and accuracy (credit to @WongKinYiu for CSP).</li><li><strong>May 27, 2020</strong>: Public release. YOLOv5 models are SOTA among all known YOLO implementations.</li><li><strong>April 1, 2020</strong>: Start development of future compound-scaled <a href="https://github.com/ultralytics/yolov3">YOLOv3</a>/<a href="https://github.com/AlexeyAB/darknet">YOLOv4</a>-based PyTorch models.</li></ul><h2 id="Pretrained-Checkpoints"><a class="header-anchor" href="#Pretrained-Checkpoints">¶</a>Pretrained Checkpoints</h2><table><thead><tr><th>Model</th><th>AP<sup>val</sup></th><th>AP<sup>test</sup></th><th>AP<sub>50</sub></th><th>Speed<sub>GPU</sub></th><th>FPS<sub>GPU</sub></th><th></th><th>params</th><th style="text-align:center">FLOPS</th></tr></thead><tbody><tr><td><a href="https://github.com/ultralytics/yolov5/releases/tag/v3.0">YOLOv5s</a></td><td>37.0</td><td>37.0</td><td>56.2</td><td><strong>2.4ms</strong></td><td><strong>416</strong></td><td></td><td>7.5M</td><td style="text-align:center">13.2B</td></tr><tr><td><a href="https://github.com/ultralytics/yolov5/releases/tag/v3.0">YOLOv5m</a></td><td>44.3</td><td>44.3</td><td>63.2</td><td>3.4ms</td><td>294</td><td></td><td>21.8M</td><td style="text-align:center">39.4B</td></tr><tr><td><a href="https://github.com/ultralytics/yolov5/releases/tag/v3.0">YOLOv5l</a></td><td>47.7</td><td>47.7</td><td>66.5</td><td>4.4ms</td><td>227</td><td></td><td>47.8M</td><td style="text-align:center">88.1B</td></tr><tr><td><a href="https://github.com/ultralytics/yolov5/releases/tag/v3.0">YOLOv5x</a></td><td><strong>49.2</strong></td><td><strong>49.2</strong></td><td><strong>67.7</strong></td><td>6.9ms</td><td>145</td><td></td><td>89.0M</td><td style="text-align:center">166.4B</td></tr><tr><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td style="text-align:center"></td></tr><tr><td><a href="https://github.com/ultralytics/yolov5/releases/tag/v3.0">YOLOv5x</a> + TTA</td><td><strong>50.8</strong></td><td><strong>50.8</strong></td><td><strong>68.9</strong></td><td>25.5ms</td><td>39</td><td></td><td>89.0M</td><td style="text-align:center">354.3B</td></tr><tr><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td style="text-align:center"></td></tr><tr><td><a href="https://github.com/ultralytics/yolov5/releases/tag/v3.0">YOLOv3-SPP</a></td><td>45.6</td><td>45.5</td><td>65.2</td><td>4.5ms</td><td>222</td><td></td><td>63.0M</td><td style="text-align:center">118.0B</td></tr></tbody></table><p>** AP<sup>test</sup> denotes COCO <a href="http://cocodataset.org/#upload">test-dev2017</a> server results, all other AP results in the table denote val2017 accuracy.<br>** All AP numbers are for single-model single-scale without ensemble or test-time augmentation. <strong>Reproduce</strong> by <code>python test.py --data coco.yaml --img 640 --conf 0.001</code><br>** Speed<sub>GPU</sub> measures end-to-end time per image averaged over 5000 COCO val2017 images using a GCP <a href="https://cloud.google.com/compute/docs/machine-types#n1_standard_machine_types">n1-standard-16</a> instance with one V100 GPU, and includes image preprocessing, PyTorch FP16 image inference at --batch-size 32 --img-size 640, postprocessing and NMS. Average NMS time included in this chart is 1-2ms/img.  <strong>Reproduce</strong> by <code>python test.py --data coco.yaml --img 640 --conf 0.1</code><br>** All checkpoints are trained to 300 epochs with default settings and hyperparameters (no autoaugmentation).<br>** Test Time Augmentation (<a href="https://github.com/ultralytics/yolov5/issues/303">TTA</a>) runs at 3 image sizes. <strong>Reproduce</strong> by <code>python test.py --data coco.yaml --img 832 --augment</code></p><h2 id="Requirements"><a class="header-anchor" href="#Requirements">¶</a>Requirements</h2><p>Python 3.8 or later with all <a href="https://github.com/ultralytics/yolov5/blob/master/requirements.txt">requirements.txt</a> dependencies installed, including <code>torch&gt;=1.6</code>. To install run:</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ pip <span class="token function">install</span> -r requirements.txt<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="Tutorials"><a class="header-anchor" href="#Tutorials">¶</a>Tutorials</h2><ul><li><a href="https://github.com/ultralytics/yolov5/wiki/Train-Custom-Data">Train Custom Data</a></li><li><a href="https://github.com/ultralytics/yolov5/issues/475">Multi-GPU Training</a></li><li><a href="https://github.com/ultralytics/yolov5/issues/36">PyTorch Hub</a></li><li><a href="https://github.com/ultralytics/yolov5/issues/251">ONNX and TorchScript Export</a></li><li><a href="https://github.com/ultralytics/yolov5/issues/303">Test-Time Augmentation (TTA)</a></li><li><a href="https://github.com/ultralytics/yolov5/issues/318">Model Ensembling</a></li><li><a href="https://github.com/ultralytics/yolov5/issues/304">Model Pruning/Sparsity</a></li><li><a href="https://github.com/ultralytics/yolov5/issues/607">Hyperparameter Evolution</a></li><li><a href="https://github.com/wang-xinyu/tensorrtx">TensorRT Deployment</a></li></ul><h2 id="Environments"><a class="header-anchor" href="#Environments">¶</a>Environments</h2><p>YOLOv5 may be run in any of the following up-to-date verified environments (with all dependencies including <a href="https://developer.nvidia.com/cuda">CUDA</a>/<a href="https://developer.nvidia.com/cudnn">CUDNN</a>, <a href="https://www.python.org/">Python</a> and <a href="https://pytorch.org/">PyTorch</a> preinstalled):</p><ul><li><strong>Google Colab Notebook</strong> with free GPU: <a href="https://colab.research.google.com/github/ultralytics/yolov5/blob/master/tutorial.ipynb"><img src="https://colab.research.google.com/assets/colab-badge.svg" alt="Open In Colab"></a></li><li><strong>Kaggle Notebook</strong> with free GPU: <a href="https://www.kaggle.com/ultralytics/yolov5">https://www.kaggle.com/ultralytics/yolov5</a></li><li><strong>Google Cloud</strong> Deep Learning VM. See <a href="https://github.com/ultralytics/yolov5/wiki/GCP-Quickstart">GCP Quickstart Guide</a></li><li><strong>Docker Image</strong> <a href="https://hub.docker.com/r/ultralytics/yolov5">https://hub.docker.com/r/ultralytics/yolov5</a>. See <a href="https://github.com/ultralytics/yolov5/wiki/Docker-Quickstart">Docker Quickstart Guide</a> <img src="https://img.shields.io/docker/pulls/ultralytics/yolov5?logo=docker" alt="Docker Pulls"></li></ul><h2 id="Inference"><a class="header-anchor" href="#Inference">¶</a>Inference</h2><p><a href="http://detect.py">detect.py</a> runs inference on a variety of sources, downloading models automatically from the <a href="https://github.com/ultralytics/yolov5/releases">latest YOLOv5 release</a> and saving results to <code>inference/output</code>.</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ python detect.py --source <span class="token number">0</span>  <span class="token comment"># webcam</span>                            file.jpg  <span class="token comment"># image </span>                            file.mp4  <span class="token comment"># video</span>                            path/  <span class="token comment"># directory</span>                            path/*.jpg  <span class="token comment"># glob</span>                            rtsp://170.93.143.139/rtplive/470011e600ef003a004ee33696235daa  <span class="token comment"># rtsp stream</span>                            rtmp://192.168.1.105/live/test  <span class="token comment"># rtmp stream</span>                            http://112.50.243.8/PLTV/88888888/224/3221225900/1.m3u8  <span class="token comment"># http stream</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>To run inference on example images in <code>inference/images</code>:</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ python detect.py --source inference/images --weights yolov5s.pt --conf <span class="token number">0.25</span>Namespace<span class="token punctuation">(</span>agnostic_nms<span class="token operator">=</span>False, <span class="token assign-left variable">augment</span><span class="token operator">=</span>False, <span class="token assign-left variable">classes</span><span class="token operator">=</span>None, <span class="token assign-left variable">conf_thres</span><span class="token operator">=</span><span class="token number">0.25</span>, <span class="token assign-left variable">device</span><span class="token operator">=</span><span class="token string">''</span>, <span class="token assign-left variable">img_size</span><span class="token operator">=</span><span class="token number">640</span>, <span class="token assign-left variable">iou_thres</span><span class="token operator">=</span><span class="token number">0.45</span>, <span class="token assign-left variable">output</span><span class="token operator">=</span><span class="token string">'inference/output'</span>, <span class="token assign-left variable">save_conf</span><span class="token operator">=</span>False, <span class="token assign-left variable">save_txt</span><span class="token operator">=</span>False, <span class="token assign-left variable">source</span><span class="token operator">=</span><span class="token string">'inference/images'</span>, <span class="token assign-left variable">update</span><span class="token operator">=</span>False, <span class="token assign-left variable">view_img</span><span class="token operator">=</span>False, <span class="token assign-left variable">weights</span><span class="token operator">=</span><span class="token string">'yolov5s.pt'</span><span class="token punctuation">)</span>Using CUDA device0 _CudaDeviceProperties<span class="token punctuation">(</span>name<span class="token operator">=</span><span class="token string">'Tesla V100-SXM2-16GB'</span>, <span class="token assign-left variable">total_memory</span><span class="token operator">=</span>16160MB<span class="token punctuation">)</span>Downloading https://github.com/ultralytics/yolov5/releases/download/v3.0/yolov5s.pt to yolov5s.pt<span class="token punctuation">..</span>. <span class="token number">100</span>%<span class="token operator">|</span>██████████████<span class="token operator">|</span> <span class="token number">14</span>.5M/14.5M <span class="token punctuation">[</span>00:0<span class="token operator"><span class="token file-descriptor important">0</span>&lt;</span>00:00, <span class="token number">21</span>.3MB/s<span class="token punctuation">]</span>Fusing layers<span class="token punctuation">..</span>. Model Summary: <span class="token number">140</span> layers, <span class="token number">7</span>.45958e+06 parameters, <span class="token number">0</span> gradientsimage <span class="token number">1</span>/2 yolov5/inference/images/bus.jpg: 640x480 <span class="token number">4</span> persons, <span class="token number">1</span> buss, <span class="token number">1</span> skateboards, Done. <span class="token punctuation">(</span><span class="token number">0</span>.013s<span class="token punctuation">)</span>image <span class="token number">2</span>/2 yolov5/inference/images/zidane.jpg: 384x640 <span class="token number">2</span> persons, <span class="token number">2</span> ties, Done. <span class="token punctuation">(</span><span class="token number">0</span>.013s<span class="token punctuation">)</span>Results saved to yolov5/inference/outputDone. <span class="token punctuation">(</span><span class="token number">0</span>.124s<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><img src="https://user-images.githubusercontent.com/26833433/97107365-685a8d80-16c7-11eb-8c2e-83aac701d8b9.jpeg" width="500">  <h3 id="PyTorch-Hub"><a class="header-anchor" href="#PyTorch-Hub">¶</a>PyTorch Hub</h3><p>To run <strong>batched inference</strong> with YOLOv5 and <a href="https://github.com/ultralytics/yolov5/issues/36">PyTorch Hub</a>:</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> torch<span class="token keyword">from</span> PIL <span class="token keyword">import</span> Image<span class="token comment"># Model</span>model <span class="token operator">=</span> torch<span class="token punctuation">.</span>hub<span class="token punctuation">.</span>load<span class="token punctuation">(</span><span class="token string">'ultralytics/yolov5'</span><span class="token punctuation">,</span> <span class="token string">'yolov5s'</span><span class="token punctuation">,</span> pretrained<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token punctuation">.</span>fuse<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">eval</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># yolov5s.pt</span>model <span class="token operator">=</span> model<span class="token punctuation">.</span>autoshape<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># for autoshaping of PIL/cv2/np inputs and NMS</span><span class="token comment"># Images</span>img1 <span class="token operator">=</span> Image<span class="token punctuation">.</span><span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">'zidane.jpg'</span><span class="token punctuation">)</span>img2 <span class="token operator">=</span> Image<span class="token punctuation">.</span><span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">'bus.jpg'</span><span class="token punctuation">)</span>imgs <span class="token operator">=</span> <span class="token punctuation">[</span>img1<span class="token punctuation">,</span> img2<span class="token punctuation">]</span>  <span class="token comment"># batched list of images</span><span class="token comment"># Inference</span>prediction <span class="token operator">=</span> model<span class="token punctuation">(</span>imgs<span class="token punctuation">,</span> size<span class="token operator">=</span><span class="token number">640</span><span class="token punctuation">)</span>  <span class="token comment"># includes NMS</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="Training"><a class="header-anchor" href="#Training">¶</a>Training</h2><p>Download <a href="https://github.com/ultralytics/yolov5/blob/master/data/scripts/get_coco.sh">COCO</a> and run command below. Training times for YOLOv5s/m/l/x are 2/4/6/8 days on a single V100 (multi-GPU times faster). Use the largest <code>--batch-size</code> your GPU allows (batch sizes shown for 16 GB devices).</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ python train.py --data coco.yaml --cfg yolov5s.yaml --weights <span class="token string">''</span> --batch-size <span class="token number">64</span>                                         yolov5m                                <span class="token number">40</span>                                         yolov5l                                <span class="token number">24</span>                                         yolov5x                                <span class="token number">16</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><img src="https://user-images.githubusercontent.com/26833433/90222759-949d8800-ddc1-11ea-9fa1-1c97eed2b963.png" width="900"><h2 id="Citation"><a class="header-anchor" href="#Citation">¶</a>Citation</h2><p><a href="https://zenodo.org/badge/latestdoi/264818686"><img src="https://zenodo.org/badge/264818686.svg" alt="DOI"></a></p><h2 id="About-Us"><a class="header-anchor" href="#About-Us">¶</a>About Us</h2><p>Ultralytics is a U.S.-based particle physics and AI startup with over 6 years of expertise supporting government, academic and business clients. We offer a wide range of vision AI services, spanning from simple expert advice up to delivery of fully customized, end-to-end production solutions, including:</p><ul><li><strong>Cloud-based AI</strong> systems operating on <strong>hundreds of HD video streams in realtime.</strong></li><li><strong>Edge AI</strong> integrated into custom iOS and Android apps for realtime <strong>30 FPS video inference.</strong></li><li><strong>Custom data training</strong>, hyperparameter evolution, and model exportation to any destination.</li></ul><p>For business inquiries and professional support requests please visit us at <a href="https://www.ultralytics.com">https://www.ultralytics.com</a>.</p><h2 id="Contact"><a class="header-anchor" href="#Contact">¶</a>Contact</h2><p><strong>Issues should be raised directly in the repository.</strong> For business inquiries or professional support requests please visit <a href="https://www.ultralytics.com">https://www.ultralytics.com</a> or email Glenn Jocher at <a href="mailto:glenn.jocher@ultralytics.com">glenn.jocher@ultralytics.com</a>.</p>]]></content>
      
      
      
    </entry>
    
    
  
  
    
    
    <entry>
      <title>生活琐碎</title>
      <link href="/diary/index.html"/>
      <url>/diary/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>标签</title>
      <link href="/tags/index.html"/>
      <url>/tags/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>分类</title>
      <link href="/categories/index.html"/>
      <url>/categories/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>友情链接</title>
      <link href="/link/index.html"/>
      <url>/link/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>归档</title>
      <link href="/archives/index.html"/>
      <url>/archives/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>关于</title>
      <link href="/about/index.html"/>
      <url>/about/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>生活分享</title>
      <link href="/gallery/index.html"/>
      <url>/gallery/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
  
</search>
